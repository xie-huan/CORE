{"test_class": {"identifier": "StandardXYItemRendererTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/chart/renderer/xy/junit/StandardXYItemRendererTests.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testEquals() {\n        StandardXYItemRenderer r1 = new StandardXYItemRenderer();\n        StandardXYItemRenderer r2 = new StandardXYItemRenderer();\n        assertEquals(r1, r2);\n\n        r1.setBaseShapesVisible(true);\n        assertFalse(r1.equals(r2));\n        r2.setBaseShapesVisible(true);\n        assertTrue(r1.equals(r2));\n\n        r1.setPlotLines(false);\n        assertFalse(r1.equals(r2));\n        r2.setPlotLines(false);\n        assertTrue(r1.equals(r2));\n\n        r1.setPlotImages(true);\n        assertFalse(r1.equals(r2));\n        r2.setPlotImages(true);\n        assertTrue(r1.equals(r2));\n\n        r1.setPlotDiscontinuous(true);\n        assertFalse(r1.equals(r2));\n        r2.setPlotDiscontinuous(true);\n        assertTrue(r1.equals(r2));\n\n        r1.setGapThresholdType(UnitType.ABSOLUTE);\n        assertFalse(r1.equals(r2));\n        r2.setGapThresholdType(UnitType.ABSOLUTE);\n        assertTrue(r1.equals(r2));\n\n        r1.setGapThreshold(1.23);\n        assertFalse(r1.equals(r2));\n        r2.setGapThreshold(1.23);\n        assertTrue(r1.equals(r2));\n\n        r1.setLegendLine(new Line2D.Double(1.0, 2.0, 3.0, 4.0));\n        assertFalse(r1.equals(r2));\n        r2.setLegendLine(new Line2D.Double(1.0, 2.0, 3.0, 4.0));\n        assertTrue(r1.equals(r2));\n\n        r1.setSeriesShapesFilled(1, Boolean.TRUE);\n        assertFalse(r1.equals(r2));\n        r2.setSeriesShapesFilled(1, Boolean.TRUE);\n        assertTrue(r1.equals(r2));\n\n        r1.setBaseShapesFilled(false);\n        assertFalse(r1.equals(r2));\n        r2.setBaseShapesFilled(false);\n        assertTrue(r1.equals(r2));\n\n        r1.setDrawSeriesLineAsPath(true);\n        assertFalse(r1.equals(r2));\n        r2.setDrawSeriesLineAsPath(true);\n        assertTrue(r1.equals(r2));\n    }", "signature": "void testEquals()", "full_signature": "public void testEquals()", "class_method_signature": "StandardXYItemRendererTests.testEquals()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "setBaseShapesVisible", "assertFalse", "equals", "setBaseShapesVisible", "assertTrue", "equals", "setPlotLines", "assertFalse", "equals", "setPlotLines", "assertTrue", "equals", "setPlotImages", "assertFalse", "equals", "setPlotImages", "assertTrue", "equals", "setPlotDiscontinuous", "assertFalse", "equals", "setPlotDiscontinuous", "assertTrue", "equals", "setGapThresholdType", "assertFalse", "equals", "setGapThresholdType", "assertTrue", "equals", "setGapThreshold", "assertFalse", "equals", "setGapThreshold", "assertTrue", "equals", "setLegendLine", "assertFalse", "equals", "setLegendLine", "assertTrue", "equals", "setSeriesShapesFilled", "assertFalse", "equals", "setSeriesShapesFilled", "assertTrue", "equals", "setBaseShapesFilled", "assertFalse", "equals", "setBaseShapesFilled", "assertTrue", "equals", "setDrawSeriesLineAsPath", "assertFalse", "equals", "setDrawSeriesLineAsPath", "assertTrue", "equals"]}, "focal_class": {"identifier": "StandardXYItemRenderer", "superclass": "extends AbstractXYItemRenderer", "interfaces": "implements XYItemRenderer, Cloneable, PublicCloneable, Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -3271351259436865995L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -3271351259436865995L", "var_name": "serialVersionUID"}, {"original_string": "public static final int SHAPES = 1;", "modifier": "public static final", "type": "int", "declarator": "SHAPES = 1", "var_name": "SHAPES"}, {"original_string": "public static final int LINES = 2;", "modifier": "public static final", "type": "int", "declarator": "LINES = 2", "var_name": "LINES"}, {"original_string": "public static final int SHAPES_AND_LINES = SHAPES | LINES;", "modifier": "public static final", "type": "int", "declarator": "SHAPES_AND_LINES = SHAPES | LINES", "var_name": "SHAPES_AND_LINES"}, {"original_string": "public static final int IMAGES = 4;", "modifier": "public static final", "type": "int", "declarator": "IMAGES = 4", "var_name": "IMAGES"}, {"original_string": "public static final int DISCONTINUOUS = 8;", "modifier": "public static final", "type": "int", "declarator": "DISCONTINUOUS = 8", "var_name": "DISCONTINUOUS"}, {"original_string": "public static final int DISCONTINUOUS_LINES = LINES | DISCONTINUOUS;", "modifier": "public static final", "type": "int", "declarator": "DISCONTINUOUS_LINES = LINES | DISCONTINUOUS", "var_name": "DISCONTINUOUS_LINES"}, {"original_string": "private boolean baseShapesVisible;", "modifier": "private", "type": "boolean", "declarator": "baseShapesVisible", "var_name": "baseShapesVisible"}, {"original_string": "private boolean plotLines;", "modifier": "private", "type": "boolean", "declarator": "plotLines", "var_name": "plotLines"}, {"original_string": "private boolean plotImages;", "modifier": "private", "type": "boolean", "declarator": "plotImages", "var_name": "plotImages"}, {"original_string": "private boolean plotDiscontinuous;", "modifier": "private", "type": "boolean", "declarator": "plotDiscontinuous", "var_name": "plotDiscontinuous"}, {"original_string": "private UnitType gapThresholdType = UnitType.RELATIVE;", "modifier": "private", "type": "UnitType", "declarator": "gapThresholdType = UnitType.RELATIVE", "var_name": "gapThresholdType"}, {"original_string": "private double gapThreshold = 1.0;", "modifier": "private", "type": "double", "declarator": "gapThreshold = 1.0", "var_name": "gapThreshold"}, {"original_string": "private BooleanList seriesShapesFilled;", "modifier": "private", "type": "BooleanList", "declarator": "seriesShapesFilled", "var_name": "seriesShapesFilled"}, {"original_string": "private boolean baseShapesFilled;", "modifier": "private", "type": "boolean", "declarator": "baseShapesFilled", "var_name": "baseShapesFilled"}, {"original_string": "private boolean drawSeriesLineAsPath;", "modifier": "private", "type": "boolean", "declarator": "drawSeriesLineAsPath", "var_name": "drawSeriesLineAsPath"}, {"original_string": "private transient Shape legendLine;", "modifier": "private transient", "type": "Shape", "declarator": "legendLine", "var_name": "legendLine"}], "methods": [{"identifier": "StandardXYItemRenderer", "parameters": "()", "modifiers": "public", "return": "", "signature": " StandardXYItemRenderer()", "full_signature": "public  StandardXYItemRenderer()", "class_method_signature": "StandardXYItemRenderer.StandardXYItemRenderer()", "testcase": false, "constructor": true}, {"identifier": "StandardXYItemRenderer", "parameters": "(int type)", "modifiers": "public", "return": "", "signature": " StandardXYItemRenderer(int type)", "full_signature": "public  StandardXYItemRenderer(int type)", "class_method_signature": "StandardXYItemRenderer.StandardXYItemRenderer(int type)", "testcase": false, "constructor": true}, {"identifier": "StandardXYItemRenderer", "parameters": "(int type,\n                                  XYToolTipGenerator toolTipGenerator)", "modifiers": "public", "return": "", "signature": " StandardXYItemRenderer(int type,\n                                  XYToolTipGenerator toolTipGenerator)", "full_signature": "public  StandardXYItemRenderer(int type,\n                                  XYToolTipGenerator toolTipGenerator)", "class_method_signature": "StandardXYItemRenderer.StandardXYItemRenderer(int type,\n                                  XYToolTipGenerator toolTipGenerator)", "testcase": false, "constructor": true}, {"identifier": "StandardXYItemRenderer", "parameters": "(int type,\n                                  XYToolTipGenerator toolTipGenerator,\n                                  XYURLGenerator urlGenerator)", "modifiers": "public", "return": "", "signature": " StandardXYItemRenderer(int type,\n                                  XYToolTipGenerator toolTipGenerator,\n                                  XYURLGenerator urlGenerator)", "full_signature": "public  StandardXYItemRenderer(int type,\n                                  XYToolTipGenerator toolTipGenerator,\n                                  XYURLGenerator urlGenerator)", "class_method_signature": "StandardXYItemRenderer.StandardXYItemRenderer(int type,\n                                  XYToolTipGenerator toolTipGenerator,\n                                  XYURLGenerator urlGenerator)", "testcase": false, "constructor": true}, {"identifier": "getBaseShapesVisible", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getBaseShapesVisible()", "full_signature": "public boolean getBaseShapesVisible()", "class_method_signature": "StandardXYItemRenderer.getBaseShapesVisible()", "testcase": false, "constructor": false}, {"identifier": "setBaseShapesVisible", "parameters": "(boolean flag)", "modifiers": "public", "return": "void", "signature": "void setBaseShapesVisible(boolean flag)", "full_signature": "public void setBaseShapesVisible(boolean flag)", "class_method_signature": "StandardXYItemRenderer.setBaseShapesVisible(boolean flag)", "testcase": false, "constructor": false}, {"identifier": "getItemShapeFilled", "parameters": "(int series, int item)", "modifiers": "public", "return": "boolean", "signature": "boolean getItemShapeFilled(int series, int item)", "full_signature": "public boolean getItemShapeFilled(int series, int item)", "class_method_signature": "StandardXYItemRenderer.getItemShapeFilled(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "getSeriesShapesFilled", "parameters": "(int series)", "modifiers": "public", "return": "Boolean", "signature": "Boolean getSeriesShapesFilled(int series)", "full_signature": "public Boolean getSeriesShapesFilled(int series)", "class_method_signature": "StandardXYItemRenderer.getSeriesShapesFilled(int series)", "testcase": false, "constructor": false}, {"identifier": "setSeriesShapesFilled", "parameters": "(int series, Boolean flag)", "modifiers": "public", "return": "void", "signature": "void setSeriesShapesFilled(int series, Boolean flag)", "full_signature": "public void setSeriesShapesFilled(int series, Boolean flag)", "class_method_signature": "StandardXYItemRenderer.setSeriesShapesFilled(int series, Boolean flag)", "testcase": false, "constructor": false}, {"identifier": "getBaseShapesFilled", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getBaseShapesFilled()", "full_signature": "public boolean getBaseShapesFilled()", "class_method_signature": "StandardXYItemRenderer.getBaseShapesFilled()", "testcase": false, "constructor": false}, {"identifier": "setBaseShapesFilled", "parameters": "(boolean flag)", "modifiers": "public", "return": "void", "signature": "void setBaseShapesFilled(boolean flag)", "full_signature": "public void setBaseShapesFilled(boolean flag)", "class_method_signature": "StandardXYItemRenderer.setBaseShapesFilled(boolean flag)", "testcase": false, "constructor": false}, {"identifier": "getPlotLines", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getPlotLines()", "full_signature": "public boolean getPlotLines()", "class_method_signature": "StandardXYItemRenderer.getPlotLines()", "testcase": false, "constructor": false}, {"identifier": "setPlotLines", "parameters": "(boolean flag)", "modifiers": "public", "return": "void", "signature": "void setPlotLines(boolean flag)", "full_signature": "public void setPlotLines(boolean flag)", "class_method_signature": "StandardXYItemRenderer.setPlotLines(boolean flag)", "testcase": false, "constructor": false}, {"identifier": "getGapThresholdType", "parameters": "()", "modifiers": "public", "return": "UnitType", "signature": "UnitType getGapThresholdType()", "full_signature": "public UnitType getGapThresholdType()", "class_method_signature": "StandardXYItemRenderer.getGapThresholdType()", "testcase": false, "constructor": false}, {"identifier": "setGapThresholdType", "parameters": "(UnitType thresholdType)", "modifiers": "public", "return": "void", "signature": "void setGapThresholdType(UnitType thresholdType)", "full_signature": "public void setGapThresholdType(UnitType thresholdType)", "class_method_signature": "StandardXYItemRenderer.setGapThresholdType(UnitType thresholdType)", "testcase": false, "constructor": false}, {"identifier": "getGapThreshold", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getGapThreshold()", "full_signature": "public double getGapThreshold()", "class_method_signature": "StandardXYItemRenderer.getGapThreshold()", "testcase": false, "constructor": false}, {"identifier": "setGapThreshold", "parameters": "(double t)", "modifiers": "public", "return": "void", "signature": "void setGapThreshold(double t)", "full_signature": "public void setGapThreshold(double t)", "class_method_signature": "StandardXYItemRenderer.setGapThreshold(double t)", "testcase": false, "constructor": false}, {"identifier": "getPlotImages", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getPlotImages()", "full_signature": "public boolean getPlotImages()", "class_method_signature": "StandardXYItemRenderer.getPlotImages()", "testcase": false, "constructor": false}, {"identifier": "setPlotImages", "parameters": "(boolean flag)", "modifiers": "public", "return": "void", "signature": "void setPlotImages(boolean flag)", "full_signature": "public void setPlotImages(boolean flag)", "class_method_signature": "StandardXYItemRenderer.setPlotImages(boolean flag)", "testcase": false, "constructor": false}, {"identifier": "getPlotDiscontinuous", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getPlotDiscontinuous()", "full_signature": "public boolean getPlotDiscontinuous()", "class_method_signature": "StandardXYItemRenderer.getPlotDiscontinuous()", "testcase": false, "constructor": false}, {"identifier": "setPlotDiscontinuous", "parameters": "(boolean flag)", "modifiers": "public", "return": "void", "signature": "void setPlotDiscontinuous(boolean flag)", "full_signature": "public void setPlotDiscontinuous(boolean flag)", "class_method_signature": "StandardXYItemRenderer.setPlotDiscontinuous(boolean flag)", "testcase": false, "constructor": false}, {"identifier": "getDrawSeriesLineAsPath", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getDrawSeriesLineAsPath()", "full_signature": "public boolean getDrawSeriesLineAsPath()", "class_method_signature": "StandardXYItemRenderer.getDrawSeriesLineAsPath()", "testcase": false, "constructor": false}, {"identifier": "setDrawSeriesLineAsPath", "parameters": "(boolean flag)", "modifiers": "public", "return": "void", "signature": "void setDrawSeriesLineAsPath(boolean flag)", "full_signature": "public void setDrawSeriesLineAsPath(boolean flag)", "class_method_signature": "StandardXYItemRenderer.setDrawSeriesLineAsPath(boolean flag)", "testcase": false, "constructor": false}, {"identifier": "getLegendLine", "parameters": "()", "modifiers": "public", "return": "Shape", "signature": "Shape getLegendLine()", "full_signature": "public Shape getLegendLine()", "class_method_signature": "StandardXYItemRenderer.getLegendLine()", "testcase": false, "constructor": false}, {"identifier": "setLegendLine", "parameters": "(Shape line)", "modifiers": "public", "return": "void", "signature": "void setLegendLine(Shape line)", "full_signature": "public void setLegendLine(Shape line)", "class_method_signature": "StandardXYItemRenderer.setLegendLine(Shape line)", "testcase": false, "constructor": false}, {"identifier": "getLegendItem", "parameters": "(int datasetIndex, int series)", "modifiers": "public", "return": "LegendItem", "signature": "LegendItem getLegendItem(int datasetIndex, int series)", "full_signature": "public LegendItem getLegendItem(int datasetIndex, int series)", "class_method_signature": "StandardXYItemRenderer.getLegendItem(int datasetIndex, int series)", "testcase": false, "constructor": false}, {"identifier": "initialise", "parameters": "(Graphics2D g2,\n                                          Rectangle2D dataArea,\n                                          XYPlot plot,\n                                          XYDataset data,\n                                          PlotRenderingInfo info)", "modifiers": "public", "return": "XYItemRendererState", "signature": "XYItemRendererState initialise(Graphics2D g2,\n                                          Rectangle2D dataArea,\n                                          XYPlot plot,\n                                          XYDataset data,\n                                          PlotRenderingInfo info)", "full_signature": "public XYItemRendererState initialise(Graphics2D g2,\n                                          Rectangle2D dataArea,\n                                          XYPlot plot,\n                                          XYDataset data,\n                                          PlotRenderingInfo info)", "class_method_signature": "StandardXYItemRenderer.initialise(Graphics2D g2,\n                                          Rectangle2D dataArea,\n                                          XYPlot plot,\n                                          XYDataset data,\n                                          PlotRenderingInfo info)", "testcase": false, "constructor": false}, {"identifier": "drawItem", "parameters": "(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass)", "modifiers": "public", "return": "void", "signature": "void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass)", "full_signature": "public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass)", "class_method_signature": "StandardXYItemRenderer.drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "StandardXYItemRenderer.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object clone()", "full_signature": "public Object clone()", "class_method_signature": "StandardXYItemRenderer.clone()", "testcase": false, "constructor": false}, {"identifier": "getImage", "parameters": "(Plot plot, int series, int item,\n                             double x, double y)", "modifiers": "protected", "return": "Image", "signature": "Image getImage(Plot plot, int series, int item,\n                             double x, double y)", "full_signature": "protected Image getImage(Plot plot, int series, int item,\n                             double x, double y)", "class_method_signature": "StandardXYItemRenderer.getImage(Plot plot, int series, int item,\n                             double x, double y)", "testcase": false, "constructor": false}, {"identifier": "getImageHotspot", "parameters": "(Plot plot, int series, int item,\n                                    double x, double y, Image image)", "modifiers": "protected", "return": "Point", "signature": "Point getImageHotspot(Plot plot, int series, int item,\n                                    double x, double y, Image image)", "full_signature": "protected Point getImageHotspot(Plot plot, int series, int item,\n                                    double x, double y, Image image)", "class_method_signature": "StandardXYItemRenderer.getImageHotspot(Plot plot, int series, int item,\n                                    double x, double y, Image image)", "testcase": false, "constructor": false}, {"identifier": "readObject", "parameters": "(ObjectInputStream stream)", "modifiers": "private", "return": "void", "signature": "void readObject(ObjectInputStream stream)", "full_signature": "private void readObject(ObjectInputStream stream)", "class_method_signature": "StandardXYItemRenderer.readObject(ObjectInputStream stream)", "testcase": false, "constructor": false}, {"identifier": "writeObject", "parameters": "(ObjectOutputStream stream)", "modifiers": "private", "return": "void", "signature": "void writeObject(ObjectOutputStream stream)", "full_signature": "private void writeObject(ObjectOutputStream stream)", "class_method_signature": "StandardXYItemRenderer.writeObject(ObjectOutputStream stream)", "testcase": false, "constructor": false}], "file": "source/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "body": "public boolean equals(Object obj) {\n\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof StandardXYItemRenderer)) {\n            return false;\n        }\n        StandardXYItemRenderer that = (StandardXYItemRenderer) obj;\n        if (this.baseShapesVisible != that.baseShapesVisible) {\n            return false;\n        }\n        if (this.plotLines != that.plotLines) {\n            return false;\n        }\n        if (this.plotImages != that.plotImages) {\n            return false;\n        }\n        if (this.plotDiscontinuous != that.plotDiscontinuous) {\n            return false;\n        }\n        if (this.gapThresholdType != that.gapThresholdType) {\n            return false;\n        }\n        if (this.gapThreshold != that.gapThreshold) {\n            return false;\n        }\n        if (!this.seriesShapesFilled.equals(that.seriesShapesFilled)) {\n            return false;\n        }\n        if (this.baseShapesFilled != that.baseShapesFilled) {\n            return false;\n        }\n        if (this.drawSeriesLineAsPath != that.drawSeriesLineAsPath) {\n            return false;\n        }\n        if (!ShapeUtilities.equal(this.legendLine, that.legendLine)) {\n            return false;\n        }\n        return super.equals(obj);\n\n    }", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "StandardXYItemRenderer.equals(Object obj)", "testcase": false, "constructor": false, "invocations": ["equals", "equal", "equals"]}, "repository": {"repo_id": "Chart_1_buggy"}}