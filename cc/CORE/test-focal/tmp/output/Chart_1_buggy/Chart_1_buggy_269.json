{"test_class": {"identifier": "XYAreaRenderer2Tests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/chart/renderer/xy/junit/XYAreaRenderer2Tests.java"}, "test_case": {"identifier": "testGetLegendItemSeriesIndex", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testGetLegendItemSeriesIndex() {\n        XYSeriesCollection d1 = new XYSeriesCollection();\n        XYSeries s1 = new XYSeries(\"S1\");\n        s1.add(1.0, 1.1);\n        XYSeries s2 = new XYSeries(\"S2\");\n        s2.add(1.0, 1.1);\n        d1.addSeries(s1);\n        d1.addSeries(s2);\n\n        XYSeriesCollection d2 = new XYSeriesCollection();\n        XYSeries s3 = new XYSeries(\"S3\");\n        s3.add(1.0, 1.1);\n        XYSeries s4 = new XYSeries(\"S4\");\n        s4.add(1.0, 1.1);\n        XYSeries s5 = new XYSeries(\"S5\");\n        s5.add(1.0, 1.1);\n        d2.addSeries(s3);\n        d2.addSeries(s4);\n        d2.addSeries(s5);\n\n        XYAreaRenderer2 r = new XYAreaRenderer2();\n        XYPlot plot = new XYPlot(d1, new NumberAxis(\"x\"),\n                new NumberAxis(\"y\"), r);\n        plot.setDataset(1, d2);\n        /*JFreeChart chart =*/ new JFreeChart(plot);\n        LegendItem li = r.getLegendItem(1, 2);\n        assertEquals(\"S5\", li.getLabel());\n        assertEquals(1, li.getDatasetIndex());\n        assertEquals(2, li.getSeriesIndex());\n    }", "signature": "void testGetLegendItemSeriesIndex()", "full_signature": "public void testGetLegendItemSeriesIndex()", "class_method_signature": "XYAreaRenderer2Tests.testGetLegendItemSeriesIndex()", "testcase": true, "constructor": false, "invocations": ["add", "add", "addSeries", "addSeries", "add", "add", "add", "addSeries", "addSeries", "addSeries", "setDataset", "getLegendItem", "assertEquals", "getLabel", "assertEquals", "getDatasetIndex", "assertEquals", "getSeriesIndex"]}, "focal_class": {"identifier": "XYAreaRenderer2", "superclass": "extends AbstractXYItemRenderer", "interfaces": "implements XYItemRenderer, PublicCloneable", "fields": [{"original_string": "private static final long serialVersionUID = -7378069681579984133L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -7378069681579984133L", "var_name": "serialVersionUID"}, {"original_string": "private boolean showOutline;", "modifier": "private", "type": "boolean", "declarator": "showOutline", "var_name": "showOutline"}, {"original_string": "private transient Shape legendArea;", "modifier": "private transient", "type": "Shape", "declarator": "legendArea", "var_name": "legendArea"}], "methods": [{"identifier": "XYAreaRenderer2", "parameters": "()", "modifiers": "public", "return": "", "signature": " XYAreaRenderer2()", "full_signature": "public  XYAreaRenderer2()", "class_method_signature": "XYAreaRenderer2.XYAreaRenderer2()", "testcase": false, "constructor": true}, {"identifier": "XYAreaRenderer2", "parameters": "(XYToolTipGenerator labelGenerator,\n                           XYURLGenerator urlGenerator)", "modifiers": "public", "return": "", "signature": " XYAreaRenderer2(XYToolTipGenerator labelGenerator,\n                           XYURLGenerator urlGenerator)", "full_signature": "public  XYAreaRenderer2(XYToolTipGenerator labelGenerator,\n                           XYURLGenerator urlGenerator)", "class_method_signature": "XYAreaRenderer2.XYAreaRenderer2(XYToolTipGenerator labelGenerator,\n                           XYURLGenerator urlGenerator)", "testcase": false, "constructor": true}, {"identifier": "isOutline", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isOutline()", "full_signature": "public boolean isOutline()", "class_method_signature": "XYAreaRenderer2.isOutline()", "testcase": false, "constructor": false}, {"identifier": "setOutline", "parameters": "(boolean show)", "modifiers": "public", "return": "void", "signature": "void setOutline(boolean show)", "full_signature": "public void setOutline(boolean show)", "class_method_signature": "XYAreaRenderer2.setOutline(boolean show)", "testcase": false, "constructor": false}, {"identifier": "getLegendArea", "parameters": "()", "modifiers": "public", "return": "Shape", "signature": "Shape getLegendArea()", "full_signature": "public Shape getLegendArea()", "class_method_signature": "XYAreaRenderer2.getLegendArea()", "testcase": false, "constructor": false}, {"identifier": "setLegendArea", "parameters": "(Shape area)", "modifiers": "public", "return": "void", "signature": "void setLegendArea(Shape area)", "full_signature": "public void setLegendArea(Shape area)", "class_method_signature": "XYAreaRenderer2.setLegendArea(Shape area)", "testcase": false, "constructor": false}, {"identifier": "getLegendItem", "parameters": "(int datasetIndex, int series)", "modifiers": "public", "return": "LegendItem", "signature": "LegendItem getLegendItem(int datasetIndex, int series)", "full_signature": "public LegendItem getLegendItem(int datasetIndex, int series)", "class_method_signature": "XYAreaRenderer2.getLegendItem(int datasetIndex, int series)", "testcase": false, "constructor": false}, {"identifier": "drawItem", "parameters": "(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series,\n            int item, boolean selected, int pass)", "modifiers": "public", "return": "void", "signature": "void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series,\n            int item, boolean selected, int pass)", "full_signature": "public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series,\n            int item, boolean selected, int pass)", "class_method_signature": "XYAreaRenderer2.drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series,\n            int item, boolean selected, int pass)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "XYAreaRenderer2.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object clone()", "full_signature": "public Object clone()", "class_method_signature": "XYAreaRenderer2.clone()", "testcase": false, "constructor": false}, {"identifier": "readObject", "parameters": "(ObjectInputStream stream)", "modifiers": "private", "return": "void", "signature": "void readObject(ObjectInputStream stream)", "full_signature": "private void readObject(ObjectInputStream stream)", "class_method_signature": "XYAreaRenderer2.readObject(ObjectInputStream stream)", "testcase": false, "constructor": false}, {"identifier": "writeObject", "parameters": "(ObjectOutputStream stream)", "modifiers": "private", "return": "void", "signature": "void writeObject(ObjectOutputStream stream)", "full_signature": "private void writeObject(ObjectOutputStream stream)", "class_method_signature": "XYAreaRenderer2.writeObject(ObjectOutputStream stream)", "testcase": false, "constructor": false}], "file": "source/org/jfree/chart/renderer/xy/XYAreaRenderer2.java"}, "focal_method": {"identifier": "getLegendItem", "parameters": "(int datasetIndex, int series)", "modifiers": "public", "return": "LegendItem", "body": "public LegendItem getLegendItem(int datasetIndex, int series) {\n        LegendItem result = null;\n        XYPlot xyplot = getPlot();\n        if (xyplot != null) {\n            XYDataset dataset = xyplot.getDataset(datasetIndex);\n            if (dataset != null) {\n                XYSeriesLabelGenerator lg = getLegendItemLabelGenerator();\n                String label = lg.generateLabel(dataset, series);\n                String description = label;\n                String toolTipText = null;\n                if (getLegendItemToolTipGenerator() != null) {\n                    toolTipText = getLegendItemToolTipGenerator().generateLabel(\n                            dataset, series);\n                }\n                String urlText = null;\n                if (getLegendItemURLGenerator() != null) {\n                    urlText = getLegendItemURLGenerator().generateLabel(\n                            dataset, series);\n                }\n                Paint paint = lookupSeriesPaint(series);\n                result = new LegendItem(label, description, toolTipText,\n                        urlText, this.legendArea, paint);\n                result.setLabelFont(lookupLegendTextFont(series));\n                Paint labelPaint = lookupLegendTextPaint(series);\n                if (labelPaint != null) {\n                    result.setLabelPaint(labelPaint);\n                }\n                result.setDataset(dataset);\n                result.setDatasetIndex(datasetIndex);\n                result.setSeriesKey(dataset.getSeriesKey(series));\n                result.setSeriesIndex(series);\n            }\n        }\n        return result;\n    }", "signature": "LegendItem getLegendItem(int datasetIndex, int series)", "full_signature": "public LegendItem getLegendItem(int datasetIndex, int series)", "class_method_signature": "XYAreaRenderer2.getLegendItem(int datasetIndex, int series)", "testcase": false, "constructor": false, "invocations": ["getPlot", "getDataset", "getLegendItemLabelGenerator", "generateLabel", "getLegendItemToolTipGenerator", "generateLabel", "getLegendItemToolTipGenerator", "getLegendItemURLGenerator", "generateLabel", "getLegendItemURLGenerator", "lookupSeriesPaint", "setLabelFont", "lookupLegendTextFont", "lookupLegendTextPaint", "setLabelPaint", "setDataset", "setDatasetIndex", "setSeriesKey", "getSeriesKey", "setSeriesIndex"]}, "repository": {"repo_id": "Chart_1_buggy"}}