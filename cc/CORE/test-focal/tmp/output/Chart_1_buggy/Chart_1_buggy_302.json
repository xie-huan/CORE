{"test_class": {"identifier": "XYErrorRendererTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/chart/renderer/xy/junit/XYErrorRendererTests.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testEquals() {\n        XYErrorRenderer r1 = new XYErrorRenderer();\n        XYErrorRenderer r2 = new XYErrorRenderer();\n        assertEquals(r1, r2);\n\n        // drawXError\n        r1.setDrawXError(false);\n        assertFalse(r1.equals(r2));\n        r2.setDrawXError(false);\n        assertTrue(r1.equals(r2));\n\n        // drawYError\n        r1.setDrawYError(false);\n        assertFalse(r1.equals(r2));\n        r2.setDrawYError(false);\n        assertTrue(r1.equals(r2));\n\n        // capLength\n        r1.setCapLength(9.0);\n        assertFalse(r1.equals(r2));\n        r2.setCapLength(9.0);\n        assertTrue(r1.equals(r2));\n\n        // errorPaint\n        r1.setErrorPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f,\n                Color.green));\n        assertFalse(r1.equals(r2));\n        r2.setErrorPaint(new GradientPaint(1.0f, 2.0f, Color.red, 3.0f, 4.0f,\n                Color.green));\n        assertTrue(r1.equals(r2));\n\n        // errorStroke\n        r1.setErrorStroke(new BasicStroke(1.5f));\n        assertFalse(r1.equals(r2));\n        r2.setErrorStroke(new BasicStroke(1.5f));\n        assertTrue(r1.equals(r2));\n\n    }", "signature": "void testEquals()", "full_signature": "public void testEquals()", "class_method_signature": "XYErrorRendererTests.testEquals()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "setDrawXError", "assertFalse", "equals", "setDrawXError", "assertTrue", "equals", "setDrawYError", "assertFalse", "equals", "setDrawYError", "assertTrue", "equals", "setCapLength", "assertFalse", "equals", "setCapLength", "assertTrue", "equals", "setErrorPaint", "assertFalse", "equals", "setErrorPaint", "assertTrue", "equals", "setErrorStroke", "assertFalse", "equals", "setErrorStroke", "assertTrue", "equals"]}, "focal_class": {"identifier": "XYErrorRenderer", "superclass": "extends XYLineAndShapeRenderer", "interfaces": "", "fields": [{"original_string": "static final long serialVersionUID = 5162283570955172424L;", "modifier": "static final", "type": "long", "declarator": "serialVersionUID = 5162283570955172424L", "var_name": "serialVersionUID"}, {"original_string": "private boolean drawXError;", "modifier": "private", "type": "boolean", "declarator": "drawXError", "var_name": "drawXError"}, {"original_string": "private boolean drawYError;", "modifier": "private", "type": "boolean", "declarator": "drawYError", "var_name": "drawYError"}, {"original_string": "private double capLength;", "modifier": "private", "type": "double", "declarator": "capLength", "var_name": "capLength"}, {"original_string": "private transient Paint errorPaint;", "modifier": "private transient", "type": "Paint", "declarator": "errorPaint", "var_name": "errorPaint"}, {"original_string": "private transient Stroke errorStroke;", "modifier": "private transient", "type": "Stroke", "declarator": "errorStroke", "var_name": "errorStroke"}], "methods": [{"identifier": "XYErrorRenderer", "parameters": "()", "modifiers": "public", "return": "", "signature": " XYErrorRenderer()", "full_signature": "public  XYErrorRenderer()", "class_method_signature": "XYErrorRenderer.XYErrorRenderer()", "testcase": false, "constructor": true}, {"identifier": "getDrawXError", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getDrawXError()", "full_signature": "public boolean getDrawXError()", "class_method_signature": "XYErrorRenderer.getDrawXError()", "testcase": false, "constructor": false}, {"identifier": "setDrawXError", "parameters": "(boolean draw)", "modifiers": "public", "return": "void", "signature": "void setDrawXError(boolean draw)", "full_signature": "public void setDrawXError(boolean draw)", "class_method_signature": "XYErrorRenderer.setDrawXError(boolean draw)", "testcase": false, "constructor": false}, {"identifier": "getDrawYError", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getDrawYError()", "full_signature": "public boolean getDrawYError()", "class_method_signature": "XYErrorRenderer.getDrawYError()", "testcase": false, "constructor": false}, {"identifier": "setDrawYError", "parameters": "(boolean draw)", "modifiers": "public", "return": "void", "signature": "void setDrawYError(boolean draw)", "full_signature": "public void setDrawYError(boolean draw)", "class_method_signature": "XYErrorRenderer.setDrawYError(boolean draw)", "testcase": false, "constructor": false}, {"identifier": "getCapLength", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getCapLength()", "full_signature": "public double getCapLength()", "class_method_signature": "XYErrorRenderer.getCapLength()", "testcase": false, "constructor": false}, {"identifier": "setCapLength", "parameters": "(double length)", "modifiers": "public", "return": "void", "signature": "void setCapLength(double length)", "full_signature": "public void setCapLength(double length)", "class_method_signature": "XYErrorRenderer.setCapLength(double length)", "testcase": false, "constructor": false}, {"identifier": "getErrorPaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getErrorPaint()", "full_signature": "public Paint getErrorPaint()", "class_method_signature": "XYErrorRenderer.getErrorPaint()", "testcase": false, "constructor": false}, {"identifier": "setErrorPaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setErrorPaint(Paint paint)", "full_signature": "public void setErrorPaint(Paint paint)", "class_method_signature": "XYErrorRenderer.setErrorPaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "getErrorStroke", "parameters": "()", "modifiers": "public", "return": "Stroke", "signature": "Stroke getErrorStroke()", "full_signature": "public Stroke getErrorStroke()", "class_method_signature": "XYErrorRenderer.getErrorStroke()", "testcase": false, "constructor": false}, {"identifier": "setErrorStroke", "parameters": "(Stroke stroke)", "modifiers": "public", "return": "void", "signature": "void setErrorStroke(Stroke stroke)", "full_signature": "public void setErrorStroke(Stroke stroke)", "class_method_signature": "XYErrorRenderer.setErrorStroke(Stroke stroke)", "testcase": false, "constructor": false}, {"identifier": "findDomainBounds", "parameters": "(XYDataset dataset)", "modifiers": "public", "return": "Range", "signature": "Range findDomainBounds(XYDataset dataset)", "full_signature": "public Range findDomainBounds(XYDataset dataset)", "class_method_signature": "XYErrorRenderer.findDomainBounds(XYDataset dataset)", "testcase": false, "constructor": false}, {"identifier": "findRangeBounds", "parameters": "(XYDataset dataset)", "modifiers": "public", "return": "Range", "signature": "Range findRangeBounds(XYDataset dataset)", "full_signature": "public Range findRangeBounds(XYDataset dataset)", "class_method_signature": "XYErrorRenderer.findRangeBounds(XYDataset dataset)", "testcase": false, "constructor": false}, {"identifier": "drawItem", "parameters": "(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass)", "modifiers": "public", "return": "void", "signature": "void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass)", "full_signature": "public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass)", "class_method_signature": "XYErrorRenderer.drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "XYErrorRenderer.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "readObject", "parameters": "(ObjectInputStream stream)", "modifiers": "private", "return": "void", "signature": "void readObject(ObjectInputStream stream)", "full_signature": "private void readObject(ObjectInputStream stream)", "class_method_signature": "XYErrorRenderer.readObject(ObjectInputStream stream)", "testcase": false, "constructor": false}, {"identifier": "writeObject", "parameters": "(ObjectOutputStream stream)", "modifiers": "private", "return": "void", "signature": "void writeObject(ObjectOutputStream stream)", "full_signature": "private void writeObject(ObjectOutputStream stream)", "class_method_signature": "XYErrorRenderer.writeObject(ObjectOutputStream stream)", "testcase": false, "constructor": false}], "file": "source/org/jfree/chart/renderer/xy/XYErrorRenderer.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "body": "public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof XYErrorRenderer)) {\n            return false;\n        }\n        XYErrorRenderer that = (XYErrorRenderer) obj;\n        if (this.drawXError != that.drawXError) {\n            return false;\n        }\n        if (this.drawYError != that.drawYError) {\n            return false;\n        }\n        if (this.capLength != that.capLength) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.errorPaint, that.errorPaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.errorStroke, that.errorStroke)) {\n            return false;\n        }\n        return super.equals(obj);\n    }", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "XYErrorRenderer.equals(Object obj)", "testcase": false, "constructor": false, "invocations": ["equal", "equal", "equals"]}, "repository": {"repo_id": "Chart_1_buggy"}}