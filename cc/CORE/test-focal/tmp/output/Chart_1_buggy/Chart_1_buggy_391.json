{"test_class": {"identifier": "PeriodAxisTests", "superclass": "extends TestCase", "interfaces": "implements AxisChangeListener", "fields": [{"original_string": "private AxisChangeEvent lastEvent;", "modifier": "private", "type": "AxisChangeEvent", "declarator": "lastEvent", "var_name": "lastEvent"}, {"original_string": "private static final double EPSILON = 0.0000000001;", "modifier": "private static final", "type": "double", "declarator": "EPSILON = 0.0000000001", "var_name": "EPSILON"}], "file": "tests/org/jfree/chart/axis/junit/PeriodAxisTests.java"}, "test_case": {"identifier": "test1932146", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void test1932146() {\n        PeriodAxis axis = new PeriodAxis(\"TestAxis\");\n        axis.addChangeListener(this);\n        this.lastEvent = null;\n        axis.setRange(new DateRange(0L, 1000L));\n        assertTrue(this.lastEvent != null);\n    }", "signature": "void test1932146()", "full_signature": "public void test1932146()", "class_method_signature": "PeriodAxisTests.test1932146()", "testcase": true, "constructor": false, "invocations": ["addChangeListener", "setRange", "assertTrue"]}, "focal_class": {"identifier": "PeriodAxis", "superclass": "extends ValueAxis", "interfaces": "implements Cloneable, PublicCloneable, Serializable", "fields": [{"original_string": "private static final long serialVersionUID = 8353295532075872069L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 8353295532075872069L", "var_name": "serialVersionUID"}, {"original_string": "private RegularTimePeriod first;", "modifier": "private", "type": "RegularTimePeriod", "declarator": "first", "var_name": "first"}, {"original_string": "private RegularTimePeriod last;", "modifier": "private", "type": "RegularTimePeriod", "declarator": "last", "var_name": "last"}, {"original_string": "private TimeZone timeZone;", "modifier": "private", "type": "TimeZone", "declarator": "timeZone", "var_name": "timeZone"}, {"original_string": "private Locale locale;", "modifier": "private", "type": "Locale", "declarator": "locale", "var_name": "locale"}, {"original_string": "private Calendar calendar;", "modifier": "private", "type": "Calendar", "declarator": "calendar", "var_name": "calendar"}, {"original_string": "private Class autoRangeTimePeriodClass;", "modifier": "private", "type": "Class", "declarator": "autoRangeTimePeriodClass", "var_name": "autoRangeTimePeriodClass"}, {"original_string": "private Class majorTickTimePeriodClass;", "modifier": "private", "type": "Class", "declarator": "majorTickTimePeriodClass", "var_name": "majorTickTimePeriodClass"}, {"original_string": "private boolean minorTickMarksVisible;", "modifier": "private", "type": "boolean", "declarator": "minorTickMarksVisible", "var_name": "minorTickMarksVisible"}, {"original_string": "private Class minorTickTimePeriodClass;", "modifier": "private", "type": "Class", "declarator": "minorTickTimePeriodClass", "var_name": "minorTickTimePeriodClass"}, {"original_string": "private float minorTickMarkInsideLength = 0.0f;", "modifier": "private", "type": "float", "declarator": "minorTickMarkInsideLength = 0.0f", "var_name": "minorTickMarkInsideLength"}, {"original_string": "private float minorTickMarkOutsideLength = 2.0f;", "modifier": "private", "type": "float", "declarator": "minorTickMarkOutsideLength = 2.0f", "var_name": "minorTickMarkOutsideLength"}, {"original_string": "private transient Stroke minorTickMarkStroke = new BasicStroke(0.5f);", "modifier": "private transient", "type": "Stroke", "declarator": "minorTickMarkStroke = new BasicStroke(0.5f)", "var_name": "minorTickMarkStroke"}, {"original_string": "private transient Paint minorTickMarkPaint = Color.black;", "modifier": "private transient", "type": "Paint", "declarator": "minorTickMarkPaint = Color.black", "var_name": "minorTickMarkPaint"}, {"original_string": "private PeriodAxisLabelInfo[] labelInfo;", "modifier": "private", "type": "PeriodAxisLabelInfo[]", "declarator": "labelInfo", "var_name": "labelInfo"}], "methods": [{"identifier": "PeriodAxis", "parameters": "(String label)", "modifiers": "public", "return": "", "signature": " PeriodAxis(String label)", "full_signature": "public  PeriodAxis(String label)", "class_method_signature": "PeriodAxis.PeriodAxis(String label)", "testcase": false, "constructor": true}, {"identifier": "PeriodAxis", "parameters": "(String label,\n                      RegularTimePeriod first, RegularTimePeriod last)", "modifiers": "public", "return": "", "signature": " PeriodAxis(String label,\n                      RegularTimePeriod first, RegularTimePeriod last)", "full_signature": "public  PeriodAxis(String label,\n                      RegularTimePeriod first, RegularTimePeriod last)", "class_method_signature": "PeriodAxis.PeriodAxis(String label,\n                      RegularTimePeriod first, RegularTimePeriod last)", "testcase": false, "constructor": true}, {"identifier": "PeriodAxis", "parameters": "(String label, RegularTimePeriod first,\n            RegularTimePeriod last, TimeZone timeZone, Locale locale)", "modifiers": "public", "return": "", "signature": " PeriodAxis(String label, RegularTimePeriod first,\n            RegularTimePeriod last, TimeZone timeZone, Locale locale)", "full_signature": "public  PeriodAxis(String label, RegularTimePeriod first,\n            RegularTimePeriod last, TimeZone timeZone, Locale locale)", "class_method_signature": "PeriodAxis.PeriodAxis(String label, RegularTimePeriod first,\n            RegularTimePeriod last, TimeZone timeZone, Locale locale)", "testcase": false, "constructor": true}, {"identifier": "getFirst", "parameters": "()", "modifiers": "public", "return": "RegularTimePeriod", "signature": "RegularTimePeriod getFirst()", "full_signature": "public RegularTimePeriod getFirst()", "class_method_signature": "PeriodAxis.getFirst()", "testcase": false, "constructor": false}, {"identifier": "setFirst", "parameters": "(RegularTimePeriod first)", "modifiers": "public", "return": "void", "signature": "void setFirst(RegularTimePeriod first)", "full_signature": "public void setFirst(RegularTimePeriod first)", "class_method_signature": "PeriodAxis.setFirst(RegularTimePeriod first)", "testcase": false, "constructor": false}, {"identifier": "getLast", "parameters": "()", "modifiers": "public", "return": "RegularTimePeriod", "signature": "RegularTimePeriod getLast()", "full_signature": "public RegularTimePeriod getLast()", "class_method_signature": "PeriodAxis.getLast()", "testcase": false, "constructor": false}, {"identifier": "setLast", "parameters": "(RegularTimePeriod last)", "modifiers": "public", "return": "void", "signature": "void setLast(RegularTimePeriod last)", "full_signature": "public void setLast(RegularTimePeriod last)", "class_method_signature": "PeriodAxis.setLast(RegularTimePeriod last)", "testcase": false, "constructor": false}, {"identifier": "getTimeZone", "parameters": "()", "modifiers": "public", "return": "TimeZone", "signature": "TimeZone getTimeZone()", "full_signature": "public TimeZone getTimeZone()", "class_method_signature": "PeriodAxis.getTimeZone()", "testcase": false, "constructor": false}, {"identifier": "setTimeZone", "parameters": "(TimeZone zone)", "modifiers": "public", "return": "void", "signature": "void setTimeZone(TimeZone zone)", "full_signature": "public void setTimeZone(TimeZone zone)", "class_method_signature": "PeriodAxis.setTimeZone(TimeZone zone)", "testcase": false, "constructor": false}, {"identifier": "getLocale", "parameters": "()", "modifiers": "public", "return": "Locale", "signature": "Locale getLocale()", "full_signature": "public Locale getLocale()", "class_method_signature": "PeriodAxis.getLocale()", "testcase": false, "constructor": false}, {"identifier": "getAutoRangeTimePeriodClass", "parameters": "()", "modifiers": "public", "return": "Class", "signature": "Class getAutoRangeTimePeriodClass()", "full_signature": "public Class getAutoRangeTimePeriodClass()", "class_method_signature": "PeriodAxis.getAutoRangeTimePeriodClass()", "testcase": false, "constructor": false}, {"identifier": "setAutoRangeTimePeriodClass", "parameters": "(Class c)", "modifiers": "public", "return": "void", "signature": "void setAutoRangeTimePeriodClass(Class c)", "full_signature": "public void setAutoRangeTimePeriodClass(Class c)", "class_method_signature": "PeriodAxis.setAutoRangeTimePeriodClass(Class c)", "testcase": false, "constructor": false}, {"identifier": "getMajorTickTimePeriodClass", "parameters": "()", "modifiers": "public", "return": "Class", "signature": "Class getMajorTickTimePeriodClass()", "full_signature": "public Class getMajorTickTimePeriodClass()", "class_method_signature": "PeriodAxis.getMajorTickTimePeriodClass()", "testcase": false, "constructor": false}, {"identifier": "setMajorTickTimePeriodClass", "parameters": "(Class c)", "modifiers": "public", "return": "void", "signature": "void setMajorTickTimePeriodClass(Class c)", "full_signature": "public void setMajorTickTimePeriodClass(Class c)", "class_method_signature": "PeriodAxis.setMajorTickTimePeriodClass(Class c)", "testcase": false, "constructor": false}, {"identifier": "isMinorTickMarksVisible", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isMinorTickMarksVisible()", "full_signature": "public boolean isMinorTickMarksVisible()", "class_method_signature": "PeriodAxis.isMinorTickMarksVisible()", "testcase": false, "constructor": false}, {"identifier": "setMinorTickMarksVisible", "parameters": "(boolean visible)", "modifiers": "public", "return": "void", "signature": "void setMinorTickMarksVisible(boolean visible)", "full_signature": "public void setMinorTickMarksVisible(boolean visible)", "class_method_signature": "PeriodAxis.setMinorTickMarksVisible(boolean visible)", "testcase": false, "constructor": false}, {"identifier": "getMinorTickTimePeriodClass", "parameters": "()", "modifiers": "public", "return": "Class", "signature": "Class getMinorTickTimePeriodClass()", "full_signature": "public Class getMinorTickTimePeriodClass()", "class_method_signature": "PeriodAxis.getMinorTickTimePeriodClass()", "testcase": false, "constructor": false}, {"identifier": "setMinorTickTimePeriodClass", "parameters": "(Class c)", "modifiers": "public", "return": "void", "signature": "void setMinorTickTimePeriodClass(Class c)", "full_signature": "public void setMinorTickTimePeriodClass(Class c)", "class_method_signature": "PeriodAxis.setMinorTickTimePeriodClass(Class c)", "testcase": false, "constructor": false}, {"identifier": "getMinorTickMarkStroke", "parameters": "()", "modifiers": "public", "return": "Stroke", "signature": "Stroke getMinorTickMarkStroke()", "full_signature": "public Stroke getMinorTickMarkStroke()", "class_method_signature": "PeriodAxis.getMinorTickMarkStroke()", "testcase": false, "constructor": false}, {"identifier": "setMinorTickMarkStroke", "parameters": "(Stroke stroke)", "modifiers": "public", "return": "void", "signature": "void setMinorTickMarkStroke(Stroke stroke)", "full_signature": "public void setMinorTickMarkStroke(Stroke stroke)", "class_method_signature": "PeriodAxis.setMinorTickMarkStroke(Stroke stroke)", "testcase": false, "constructor": false}, {"identifier": "getMinorTickMarkPaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getMinorTickMarkPaint()", "full_signature": "public Paint getMinorTickMarkPaint()", "class_method_signature": "PeriodAxis.getMinorTickMarkPaint()", "testcase": false, "constructor": false}, {"identifier": "setMinorTickMarkPaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setMinorTickMarkPaint(Paint paint)", "full_signature": "public void setMinorTickMarkPaint(Paint paint)", "class_method_signature": "PeriodAxis.setMinorTickMarkPaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "getMinorTickMarkInsideLength", "parameters": "()", "modifiers": "public", "return": "float", "signature": "float getMinorTickMarkInsideLength()", "full_signature": "public float getMinorTickMarkInsideLength()", "class_method_signature": "PeriodAxis.getMinorTickMarkInsideLength()", "testcase": false, "constructor": false}, {"identifier": "setMinorTickMarkInsideLength", "parameters": "(float length)", "modifiers": "public", "return": "void", "signature": "void setMinorTickMarkInsideLength(float length)", "full_signature": "public void setMinorTickMarkInsideLength(float length)", "class_method_signature": "PeriodAxis.setMinorTickMarkInsideLength(float length)", "testcase": false, "constructor": false}, {"identifier": "getMinorTickMarkOutsideLength", "parameters": "()", "modifiers": "public", "return": "float", "signature": "float getMinorTickMarkOutsideLength()", "full_signature": "public float getMinorTickMarkOutsideLength()", "class_method_signature": "PeriodAxis.getMinorTickMarkOutsideLength()", "testcase": false, "constructor": false}, {"identifier": "setMinorTickMarkOutsideLength", "parameters": "(float length)", "modifiers": "public", "return": "void", "signature": "void setMinorTickMarkOutsideLength(float length)", "full_signature": "public void setMinorTickMarkOutsideLength(float length)", "class_method_signature": "PeriodAxis.setMinorTickMarkOutsideLength(float length)", "testcase": false, "constructor": false}, {"identifier": "getLabelInfo", "parameters": "()", "modifiers": "public", "return": "PeriodAxisLabelInfo[]", "signature": "PeriodAxisLabelInfo[] getLabelInfo()", "full_signature": "public PeriodAxisLabelInfo[] getLabelInfo()", "class_method_signature": "PeriodAxis.getLabelInfo()", "testcase": false, "constructor": false}, {"identifier": "setLabelInfo", "parameters": "(PeriodAxisLabelInfo[] info)", "modifiers": "public", "return": "void", "signature": "void setLabelInfo(PeriodAxisLabelInfo[] info)", "full_signature": "public void setLabelInfo(PeriodAxisLabelInfo[] info)", "class_method_signature": "PeriodAxis.setLabelInfo(PeriodAxisLabelInfo[] info)", "testcase": false, "constructor": false}, {"identifier": "getRange", "parameters": "()", "modifiers": "public", "return": "Range", "signature": "Range getRange()", "full_signature": "public Range getRange()", "class_method_signature": "PeriodAxis.getRange()", "testcase": false, "constructor": false}, {"identifier": "setRange", "parameters": "(Range range, boolean turnOffAutoRange,\n                         boolean notify)", "modifiers": "public", "return": "void", "signature": "void setRange(Range range, boolean turnOffAutoRange,\n                         boolean notify)", "full_signature": "public void setRange(Range range, boolean turnOffAutoRange,\n                         boolean notify)", "class_method_signature": "PeriodAxis.setRange(Range range, boolean turnOffAutoRange,\n                         boolean notify)", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void configure()", "full_signature": "public void configure()", "class_method_signature": "PeriodAxis.configure()", "testcase": false, "constructor": false}, {"identifier": "reserveSpace", "parameters": "(Graphics2D g2, Plot plot,\n                                  Rectangle2D plotArea, RectangleEdge edge,\n                                  AxisSpace space)", "modifiers": "public", "return": "AxisSpace", "signature": "AxisSpace reserveSpace(Graphics2D g2, Plot plot,\n                                  Rectangle2D plotArea, RectangleEdge edge,\n                                  AxisSpace space)", "full_signature": "public AxisSpace reserveSpace(Graphics2D g2, Plot plot,\n                                  Rectangle2D plotArea, RectangleEdge edge,\n                                  AxisSpace space)", "class_method_signature": "PeriodAxis.reserveSpace(Graphics2D g2, Plot plot,\n                                  Rectangle2D plotArea, RectangleEdge edge,\n                                  AxisSpace space)", "testcase": false, "constructor": false}, {"identifier": "draw", "parameters": "(Graphics2D g2, double cursor, Rectangle2D plotArea,\n            Rectangle2D dataArea, RectangleEdge edge,\n            PlotRenderingInfo plotState)", "modifiers": "public", "return": "AxisState", "signature": "AxisState draw(Graphics2D g2, double cursor, Rectangle2D plotArea,\n            Rectangle2D dataArea, RectangleEdge edge,\n            PlotRenderingInfo plotState)", "full_signature": "public AxisState draw(Graphics2D g2, double cursor, Rectangle2D plotArea,\n            Rectangle2D dataArea, RectangleEdge edge,\n            PlotRenderingInfo plotState)", "class_method_signature": "PeriodAxis.draw(Graphics2D g2, double cursor, Rectangle2D plotArea,\n            Rectangle2D dataArea, RectangleEdge edge,\n            PlotRenderingInfo plotState)", "testcase": false, "constructor": false}, {"identifier": "drawTickMarks", "parameters": "(Graphics2D g2, AxisState state,\n                                 Rectangle2D dataArea,\n                                 RectangleEdge edge)", "modifiers": "protected", "return": "void", "signature": "void drawTickMarks(Graphics2D g2, AxisState state,\n                                 Rectangle2D dataArea,\n                                 RectangleEdge edge)", "full_signature": "protected void drawTickMarks(Graphics2D g2, AxisState state,\n                                 Rectangle2D dataArea,\n                                 RectangleEdge edge)", "class_method_signature": "PeriodAxis.drawTickMarks(Graphics2D g2, AxisState state,\n                                 Rectangle2D dataArea,\n                                 RectangleEdge edge)", "testcase": false, "constructor": false}, {"identifier": "drawTickMarksHorizontal", "parameters": "(Graphics2D g2, AxisState state,\n                                           Rectangle2D dataArea,\n                                           RectangleEdge edge)", "modifiers": "protected", "return": "void", "signature": "void drawTickMarksHorizontal(Graphics2D g2, AxisState state,\n                                           Rectangle2D dataArea,\n                                           RectangleEdge edge)", "full_signature": "protected void drawTickMarksHorizontal(Graphics2D g2, AxisState state,\n                                           Rectangle2D dataArea,\n                                           RectangleEdge edge)", "class_method_signature": "PeriodAxis.drawTickMarksHorizontal(Graphics2D g2, AxisState state,\n                                           Rectangle2D dataArea,\n                                           RectangleEdge edge)", "testcase": false, "constructor": false}, {"identifier": "drawTickMarksVertical", "parameters": "(Graphics2D g2, AxisState state,\n                                         Rectangle2D dataArea,\n                                         RectangleEdge edge)", "modifiers": "protected", "return": "void", "signature": "void drawTickMarksVertical(Graphics2D g2, AxisState state,\n                                         Rectangle2D dataArea,\n                                         RectangleEdge edge)", "full_signature": "protected void drawTickMarksVertical(Graphics2D g2, AxisState state,\n                                         Rectangle2D dataArea,\n                                         RectangleEdge edge)", "class_method_signature": "PeriodAxis.drawTickMarksVertical(Graphics2D g2, AxisState state,\n                                         Rectangle2D dataArea,\n                                         RectangleEdge edge)", "testcase": false, "constructor": false}, {"identifier": "drawTickLabels", "parameters": "(int band, Graphics2D g2, AxisState state,\n                                       Rectangle2D dataArea,\n                                       RectangleEdge edge)", "modifiers": "protected", "return": "AxisState", "signature": "AxisState drawTickLabels(int band, Graphics2D g2, AxisState state,\n                                       Rectangle2D dataArea,\n                                       RectangleEdge edge)", "full_signature": "protected AxisState drawTickLabels(int band, Graphics2D g2, AxisState state,\n                                       Rectangle2D dataArea,\n                                       RectangleEdge edge)", "class_method_signature": "PeriodAxis.drawTickLabels(int band, Graphics2D g2, AxisState state,\n                                       Rectangle2D dataArea,\n                                       RectangleEdge edge)", "testcase": false, "constructor": false}, {"identifier": "refreshTicks", "parameters": "(Graphics2D g2, AxisState state,\n            Rectangle2D dataArea, RectangleEdge edge)", "modifiers": "public", "return": "List", "signature": "List refreshTicks(Graphics2D g2, AxisState state,\n            Rectangle2D dataArea, RectangleEdge edge)", "full_signature": "public List refreshTicks(Graphics2D g2, AxisState state,\n            Rectangle2D dataArea, RectangleEdge edge)", "class_method_signature": "PeriodAxis.refreshTicks(Graphics2D g2, AxisState state,\n            Rectangle2D dataArea, RectangleEdge edge)", "testcase": false, "constructor": false}, {"identifier": "valueToJava2D", "parameters": "(double value, Rectangle2D area,\n                                RectangleEdge edge)", "modifiers": "public", "return": "double", "signature": "double valueToJava2D(double value, Rectangle2D area,\n                                RectangleEdge edge)", "full_signature": "public double valueToJava2D(double value, Rectangle2D area,\n                                RectangleEdge edge)", "class_method_signature": "PeriodAxis.valueToJava2D(double value, Rectangle2D area,\n                                RectangleEdge edge)", "testcase": false, "constructor": false}, {"identifier": "java2DToValue", "parameters": "(double java2DValue, Rectangle2D area,\n                                RectangleEdge edge)", "modifiers": "public", "return": "double", "signature": "double java2DToValue(double java2DValue, Rectangle2D area,\n                                RectangleEdge edge)", "full_signature": "public double java2DToValue(double java2DValue, Rectangle2D area,\n                                RectangleEdge edge)", "class_method_signature": "PeriodAxis.java2DToValue(double java2DValue, Rectangle2D area,\n                                RectangleEdge edge)", "testcase": false, "constructor": false}, {"identifier": "autoAdjustRange", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void autoAdjustRange()", "full_signature": "protected void autoAdjustRange()", "class_method_signature": "PeriodAxis.autoAdjustRange()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "PeriodAxis.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "PeriodAxis.hashCode()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object clone()", "full_signature": "public Object clone()", "class_method_signature": "PeriodAxis.clone()", "testcase": false, "constructor": false}, {"identifier": "createInstance", "parameters": "(Class periodClass,\n            Date millisecond, TimeZone zone, Locale locale)", "modifiers": "private", "return": "RegularTimePeriod", "signature": "RegularTimePeriod createInstance(Class periodClass,\n            Date millisecond, TimeZone zone, Locale locale)", "full_signature": "private RegularTimePeriod createInstance(Class periodClass,\n            Date millisecond, TimeZone zone, Locale locale)", "class_method_signature": "PeriodAxis.createInstance(Class periodClass,\n            Date millisecond, TimeZone zone, Locale locale)", "testcase": false, "constructor": false}, {"identifier": "writeObject", "parameters": "(ObjectOutputStream stream)", "modifiers": "private", "return": "void", "signature": "void writeObject(ObjectOutputStream stream)", "full_signature": "private void writeObject(ObjectOutputStream stream)", "class_method_signature": "PeriodAxis.writeObject(ObjectOutputStream stream)", "testcase": false, "constructor": false}, {"identifier": "readObject", "parameters": "(ObjectInputStream stream)", "modifiers": "private", "return": "void", "signature": "void readObject(ObjectInputStream stream)", "full_signature": "private void readObject(ObjectInputStream stream)", "class_method_signature": "PeriodAxis.readObject(ObjectInputStream stream)", "testcase": false, "constructor": false}], "file": "source/org/jfree/chart/axis/PeriodAxis.java"}, "focal_method": {"identifier": "setRange", "parameters": "(Range range, boolean turnOffAutoRange,\n                         boolean notify)", "modifiers": "public", "return": "void", "body": "public void setRange(Range range, boolean turnOffAutoRange,\n                         boolean notify) {\n        long upper = Math.round(range.getUpperBound());\n        long lower = Math.round(range.getLowerBound());\n        this.first = createInstance(this.autoRangeTimePeriodClass,\n                new Date(lower), this.timeZone, this.locale);\n        this.last = createInstance(this.autoRangeTimePeriodClass,\n                new Date(upper), this.timeZone, this.locale);\n        super.setRange(new Range(this.first.getFirstMillisecond(),\n                this.last.getLastMillisecond() + 1.0), turnOffAutoRange,\n                notify);\n    }", "signature": "void setRange(Range range, boolean turnOffAutoRange,\n                         boolean notify)", "full_signature": "public void setRange(Range range, boolean turnOffAutoRange,\n                         boolean notify)", "class_method_signature": "PeriodAxis.setRange(Range range, boolean turnOffAutoRange,\n                         boolean notify)", "testcase": false, "constructor": false, "invocations": ["round", "getUpperBound", "round", "getLowerBound", "createInstance", "createInstance", "setRange", "getFirstMillisecond", "getLastMillisecond"]}, "repository": {"repo_id": "Chart_1_buggy"}}