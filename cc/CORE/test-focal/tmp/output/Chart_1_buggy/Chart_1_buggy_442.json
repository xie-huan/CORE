{"test_class": {"identifier": "MarkerAxisBandTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/chart/axis/junit/MarkerAxisBandTests.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testEquals() {\n        Font font1 = new Font(\"SansSerif\", Font.PLAIN, 12);\n        Font font2 = new Font(\"SansSerif\", Font.PLAIN, 14);\n\n        MarkerAxisBand a1 = new MarkerAxisBand(null, 1.0, 1.0, 1.0, 1.0, font1);\n        MarkerAxisBand a2 = new MarkerAxisBand(null, 1.0, 1.0, 1.0, 1.0, font1);\n        assertEquals(a1, a2);\n\n        a1 = new MarkerAxisBand(null, 2.0, 1.0, 1.0, 1.0, font1);\n        assertFalse(a1.equals(a2));\n        a2 = new MarkerAxisBand(null, 2.0, 1.0, 1.0, 1.0, font1);\n        assertTrue(a1.equals(a2));\n\n        a1 = new MarkerAxisBand(null, 2.0, 3.0, 1.0, 1.0, font1);\n        assertFalse(a1.equals(a2));\n        a2 = new MarkerAxisBand(null, 2.0, 3.0, 1.0, 1.0, font1);\n        assertTrue(a1.equals(a2));\n\n        a1 = new MarkerAxisBand(null, 2.0, 3.0, 4.0, 1.0, font1);\n        assertFalse(a1.equals(a2));\n        a2 = new MarkerAxisBand(null, 2.0, 3.0, 4.0, 1.0, font1);\n        assertTrue(a1.equals(a2));\n\n        a1 = new MarkerAxisBand(null, 2.0, 3.0, 4.0, 5.0, font1);\n        assertFalse(a1.equals(a2));\n        a2 = new MarkerAxisBand(null, 2.0, 3.0, 4.0, 5.0, font1);\n        assertTrue(a1.equals(a2));\n\n        a1 = new MarkerAxisBand(null, 2.0, 3.0, 4.0, 5.0, font2);\n        assertFalse(a1.equals(a2));\n        a2 = new MarkerAxisBand(null, 2.0, 3.0, 4.0, 5.0, font2);\n        assertTrue(a1.equals(a2));\n    }", "signature": "void testEquals()", "full_signature": "public void testEquals()", "class_method_signature": "MarkerAxisBandTests.testEquals()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "assertFalse", "equals", "assertTrue", "equals", "assertFalse", "equals", "assertTrue", "equals", "assertFalse", "equals", "assertTrue", "equals", "assertFalse", "equals", "assertTrue", "equals", "assertFalse", "equals", "assertTrue", "equals"]}, "focal_class": {"identifier": "MarkerAxisBand", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -1729482413886398919L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -1729482413886398919L", "var_name": "serialVersionUID"}, {"original_string": "private NumberAxis axis;", "modifier": "private", "type": "NumberAxis", "declarator": "axis", "var_name": "axis"}, {"original_string": "private double topOuterGap;", "modifier": "private", "type": "double", "declarator": "topOuterGap", "var_name": "topOuterGap"}, {"original_string": "private double topInnerGap;", "modifier": "private", "type": "double", "declarator": "topInnerGap", "var_name": "topInnerGap"}, {"original_string": "private double bottomOuterGap;", "modifier": "private", "type": "double", "declarator": "bottomOuterGap", "var_name": "bottomOuterGap"}, {"original_string": "private double bottomInnerGap;", "modifier": "private", "type": "double", "declarator": "bottomInnerGap", "var_name": "bottomInnerGap"}, {"original_string": "private Font font;", "modifier": "private", "type": "Font", "declarator": "font", "var_name": "font"}, {"original_string": "private List markers;", "modifier": "private", "type": "List", "declarator": "markers", "var_name": "markers"}], "methods": [{"identifier": "MarkerAxisBand", "parameters": "(NumberAxis axis,\n                          double topOuterGap, double topInnerGap,\n                          double bottomOuterGap, double bottomInnerGap,\n                          Font font)", "modifiers": "public", "return": "", "signature": " MarkerAxisBand(NumberAxis axis,\n                          double topOuterGap, double topInnerGap,\n                          double bottomOuterGap, double bottomInnerGap,\n                          Font font)", "full_signature": "public  MarkerAxisBand(NumberAxis axis,\n                          double topOuterGap, double topInnerGap,\n                          double bottomOuterGap, double bottomInnerGap,\n                          Font font)", "class_method_signature": "MarkerAxisBand.MarkerAxisBand(NumberAxis axis,\n                          double topOuterGap, double topInnerGap,\n                          double bottomOuterGap, double bottomInnerGap,\n                          Font font)", "testcase": false, "constructor": true}, {"identifier": "addMarker", "parameters": "(IntervalMarker marker)", "modifiers": "public", "return": "void", "signature": "void addMarker(IntervalMarker marker)", "full_signature": "public void addMarker(IntervalMarker marker)", "class_method_signature": "MarkerAxisBand.addMarker(IntervalMarker marker)", "testcase": false, "constructor": false}, {"identifier": "getHeight", "parameters": "(Graphics2D g2)", "modifiers": "public", "return": "double", "signature": "double getHeight(Graphics2D g2)", "full_signature": "public double getHeight(Graphics2D g2)", "class_method_signature": "MarkerAxisBand.getHeight(Graphics2D g2)", "testcase": false, "constructor": false}, {"identifier": "drawStringInRect", "parameters": "(Graphics2D g2, Rectangle2D bounds, Font font,\n                                  String text)", "modifiers": "private", "return": "void", "signature": "void drawStringInRect(Graphics2D g2, Rectangle2D bounds, Font font,\n                                  String text)", "full_signature": "private void drawStringInRect(Graphics2D g2, Rectangle2D bounds, Font font,\n                                  String text)", "class_method_signature": "MarkerAxisBand.drawStringInRect(Graphics2D g2, Rectangle2D bounds, Font font,\n                                  String text)", "testcase": false, "constructor": false}, {"identifier": "draw", "parameters": "(Graphics2D g2, Rectangle2D plotArea, Rectangle2D dataArea,\n                     double x, double y)", "modifiers": "public", "return": "void", "signature": "void draw(Graphics2D g2, Rectangle2D plotArea, Rectangle2D dataArea,\n                     double x, double y)", "full_signature": "public void draw(Graphics2D g2, Rectangle2D plotArea, Rectangle2D dataArea,\n                     double x, double y)", "class_method_signature": "MarkerAxisBand.draw(Graphics2D g2, Rectangle2D plotArea, Rectangle2D dataArea,\n                     double x, double y)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "MarkerAxisBand.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "MarkerAxisBand.hashCode()", "testcase": false, "constructor": false}], "file": "source/org/jfree/chart/axis/MarkerAxisBand.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "body": "public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof MarkerAxisBand)) {\n            return false;\n        }\n        MarkerAxisBand that = (MarkerAxisBand) obj;\n        if (this.topOuterGap != that.topOuterGap) {\n            return false;\n        }\n        if (this.topInnerGap != that.topInnerGap) {\n            return false;\n        }\n        if (this.bottomInnerGap != that.bottomInnerGap) {\n            return false;\n        }\n        if (this.bottomOuterGap != that.bottomOuterGap) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.font, that.font)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.markers, that.markers)) {\n            return false;\n        }\n        return true;\n    }", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "MarkerAxisBand.equals(Object obj)", "testcase": false, "constructor": false, "invocations": ["equal", "equal"]}, "repository": {"repo_id": "Chart_1_buggy"}}