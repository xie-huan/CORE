{"test_class": {"identifier": "CombinedDomainCategoryPlotTests", "superclass": "extends TestCase", "interfaces": "implements ChartChangeListener", "fields": [{"original_string": "private List events = new java.util.ArrayList();", "modifier": "private", "type": "List", "declarator": "events = new java.util.ArrayList()", "var_name": "events"}], "file": "tests/org/jfree/chart/plot/junit/CombinedDomainCategoryPlotTests.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testEquals() {\n        CombinedDomainCategoryPlot plot1 = createPlot();\n        CombinedDomainCategoryPlot plot2 = createPlot();\n        assertTrue(plot1.equals(plot2));\n    }", "signature": "void testEquals()", "full_signature": "public void testEquals()", "class_method_signature": "CombinedDomainCategoryPlotTests.testEquals()", "testcase": true, "constructor": false, "invocations": ["createPlot", "createPlot", "assertTrue", "equals"]}, "focal_class": {"identifier": "CombinedDomainCategoryPlot", "superclass": "extends CategoryPlot", "interfaces": "implements PlotChangeListener", "fields": [{"original_string": "private static final long serialVersionUID = 8207194522653701572L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 8207194522653701572L", "var_name": "serialVersionUID"}, {"original_string": "private List subplots;", "modifier": "private", "type": "List", "declarator": "subplots", "var_name": "subplots"}, {"original_string": "private double gap;", "modifier": "private", "type": "double", "declarator": "gap", "var_name": "gap"}, {"original_string": "private transient Rectangle2D[] subplotAreas;", "modifier": "private transient", "type": "Rectangle2D[]", "declarator": "subplotAreas", "var_name": "subplotAreas"}], "methods": [{"identifier": "CombinedDomainCategoryPlot", "parameters": "()", "modifiers": "public", "return": "", "signature": " CombinedDomainCategoryPlot()", "full_signature": "public  CombinedDomainCategoryPlot()", "class_method_signature": "CombinedDomainCategoryPlot.CombinedDomainCategoryPlot()", "testcase": false, "constructor": true}, {"identifier": "CombinedDomainCategoryPlot", "parameters": "(CategoryAxis domainAxis)", "modifiers": "public", "return": "", "signature": " CombinedDomainCategoryPlot(CategoryAxis domainAxis)", "full_signature": "public  CombinedDomainCategoryPlot(CategoryAxis domainAxis)", "class_method_signature": "CombinedDomainCategoryPlot.CombinedDomainCategoryPlot(CategoryAxis domainAxis)", "testcase": false, "constructor": true}, {"identifier": "getGap", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getGap()", "full_signature": "public double getGap()", "class_method_signature": "CombinedDomainCategoryPlot.getGap()", "testcase": false, "constructor": false}, {"identifier": "setGap", "parameters": "(double gap)", "modifiers": "public", "return": "void", "signature": "void setGap(double gap)", "full_signature": "public void setGap(double gap)", "class_method_signature": "CombinedDomainCategoryPlot.setGap(double gap)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(CategoryPlot subplot)", "modifiers": "public", "return": "void", "signature": "void add(CategoryPlot subplot)", "full_signature": "public void add(CategoryPlot subplot)", "class_method_signature": "CombinedDomainCategoryPlot.add(CategoryPlot subplot)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(CategoryPlot subplot, int weight)", "modifiers": "public", "return": "void", "signature": "void add(CategoryPlot subplot, int weight)", "full_signature": "public void add(CategoryPlot subplot, int weight)", "class_method_signature": "CombinedDomainCategoryPlot.add(CategoryPlot subplot, int weight)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(CategoryPlot subplot)", "modifiers": "public", "return": "void", "signature": "void remove(CategoryPlot subplot)", "full_signature": "public void remove(CategoryPlot subplot)", "class_method_signature": "CombinedDomainCategoryPlot.remove(CategoryPlot subplot)", "testcase": false, "constructor": false}, {"identifier": "getSubplots", "parameters": "()", "modifiers": "public", "return": "List", "signature": "List getSubplots()", "full_signature": "public List getSubplots()", "class_method_signature": "CombinedDomainCategoryPlot.getSubplots()", "testcase": false, "constructor": false}, {"identifier": "findSubplot", "parameters": "(PlotRenderingInfo info, Point2D source)", "modifiers": "public", "return": "CategoryPlot", "signature": "CategoryPlot findSubplot(PlotRenderingInfo info, Point2D source)", "full_signature": "public CategoryPlot findSubplot(PlotRenderingInfo info, Point2D source)", "class_method_signature": "CombinedDomainCategoryPlot.findSubplot(PlotRenderingInfo info, Point2D source)", "testcase": false, "constructor": false}, {"identifier": "zoomRangeAxes", "parameters": "(double factor, PlotRenderingInfo info,\n                              Point2D source)", "modifiers": "public", "return": "void", "signature": "void zoomRangeAxes(double factor, PlotRenderingInfo info,\n                              Point2D source)", "full_signature": "public void zoomRangeAxes(double factor, PlotRenderingInfo info,\n                              Point2D source)", "class_method_signature": "CombinedDomainCategoryPlot.zoomRangeAxes(double factor, PlotRenderingInfo info,\n                              Point2D source)", "testcase": false, "constructor": false}, {"identifier": "zoomRangeAxes", "parameters": "(double factor, PlotRenderingInfo info,\n                              Point2D source, boolean useAnchor)", "modifiers": "public", "return": "void", "signature": "void zoomRangeAxes(double factor, PlotRenderingInfo info,\n                              Point2D source, boolean useAnchor)", "full_signature": "public void zoomRangeAxes(double factor, PlotRenderingInfo info,\n                              Point2D source, boolean useAnchor)", "class_method_signature": "CombinedDomainCategoryPlot.zoomRangeAxes(double factor, PlotRenderingInfo info,\n                              Point2D source, boolean useAnchor)", "testcase": false, "constructor": false}, {"identifier": "zoomRangeAxes", "parameters": "(double lowerPercent, double upperPercent,\n                              PlotRenderingInfo info, Point2D source)", "modifiers": "public", "return": "void", "signature": "void zoomRangeAxes(double lowerPercent, double upperPercent,\n                              PlotRenderingInfo info, Point2D source)", "full_signature": "public void zoomRangeAxes(double lowerPercent, double upperPercent,\n                              PlotRenderingInfo info, Point2D source)", "class_method_signature": "CombinedDomainCategoryPlot.zoomRangeAxes(double lowerPercent, double upperPercent,\n                              PlotRenderingInfo info, Point2D source)", "testcase": false, "constructor": false}, {"identifier": "calculateAxisSpace", "parameters": "(Graphics2D g2,\n                                           Rectangle2D plotArea)", "modifiers": "protected", "return": "AxisSpace", "signature": "AxisSpace calculateAxisSpace(Graphics2D g2,\n                                           Rectangle2D plotArea)", "full_signature": "protected AxisSpace calculateAxisSpace(Graphics2D g2,\n                                           Rectangle2D plotArea)", "class_method_signature": "CombinedDomainCategoryPlot.calculateAxisSpace(Graphics2D g2,\n                                           Rectangle2D plotArea)", "testcase": false, "constructor": false}, {"identifier": "draw", "parameters": "(Graphics2D g2,\n                     Rectangle2D area,\n                     Point2D anchor,\n                     PlotState parentState,\n                     PlotRenderingInfo info)", "modifiers": "public", "return": "void", "signature": "void draw(Graphics2D g2,\n                     Rectangle2D area,\n                     Point2D anchor,\n                     PlotState parentState,\n                     PlotRenderingInfo info)", "full_signature": "public void draw(Graphics2D g2,\n                     Rectangle2D area,\n                     Point2D anchor,\n                     PlotState parentState,\n                     PlotRenderingInfo info)", "class_method_signature": "CombinedDomainCategoryPlot.draw(Graphics2D g2,\n                     Rectangle2D area,\n                     Point2D anchor,\n                     PlotState parentState,\n                     PlotRenderingInfo info)", "testcase": false, "constructor": false}, {"identifier": "setFixedRangeAxisSpaceForSubplots", "parameters": "(AxisSpace space)", "modifiers": "protected", "return": "void", "signature": "void setFixedRangeAxisSpaceForSubplots(AxisSpace space)", "full_signature": "protected void setFixedRangeAxisSpaceForSubplots(AxisSpace space)", "class_method_signature": "CombinedDomainCategoryPlot.setFixedRangeAxisSpaceForSubplots(AxisSpace space)", "testcase": false, "constructor": false}, {"identifier": "setOrientation", "parameters": "(PlotOrientation orientation)", "modifiers": "public", "return": "void", "signature": "void setOrientation(PlotOrientation orientation)", "full_signature": "public void setOrientation(PlotOrientation orientation)", "class_method_signature": "CombinedDomainCategoryPlot.setOrientation(PlotOrientation orientation)", "testcase": false, "constructor": false}, {"identifier": "getDataRange", "parameters": "(ValueAxis axis)", "modifiers": "public", "return": "Range", "signature": "Range getDataRange(ValueAxis axis)", "full_signature": "public Range getDataRange(ValueAxis axis)", "class_method_signature": "CombinedDomainCategoryPlot.getDataRange(ValueAxis axis)", "testcase": false, "constructor": false}, {"identifier": "getLegendItems", "parameters": "()", "modifiers": "public", "return": "LegendItemCollection", "signature": "LegendItemCollection getLegendItems()", "full_signature": "public LegendItemCollection getLegendItems()", "class_method_signature": "CombinedDomainCategoryPlot.getLegendItems()", "testcase": false, "constructor": false}, {"identifier": "getCategories", "parameters": "()", "modifiers": "public", "return": "List", "signature": "List getCategories()", "full_signature": "public List getCategories()", "class_method_signature": "CombinedDomainCategoryPlot.getCategories()", "testcase": false, "constructor": false}, {"identifier": "getCategoriesForAxis", "parameters": "(CategoryAxis axis)", "modifiers": "public", "return": "List", "signature": "List getCategoriesForAxis(CategoryAxis axis)", "full_signature": "public List getCategoriesForAxis(CategoryAxis axis)", "class_method_signature": "CombinedDomainCategoryPlot.getCategoriesForAxis(CategoryAxis axis)", "testcase": false, "constructor": false}, {"identifier": "handleClick", "parameters": "(int x, int y, PlotRenderingInfo info)", "modifiers": "public", "return": "void", "signature": "void handleClick(int x, int y, PlotRenderingInfo info)", "full_signature": "public void handleClick(int x, int y, PlotRenderingInfo info)", "class_method_signature": "CombinedDomainCategoryPlot.handleClick(int x, int y, PlotRenderingInfo info)", "testcase": false, "constructor": false}, {"identifier": "plotChanged", "parameters": "(PlotChangeEvent event)", "modifiers": "public", "return": "void", "signature": "void plotChanged(PlotChangeEvent event)", "full_signature": "public void plotChanged(PlotChangeEvent event)", "class_method_signature": "CombinedDomainCategoryPlot.plotChanged(PlotChangeEvent event)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "CombinedDomainCategoryPlot.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object clone()", "full_signature": "public Object clone()", "class_method_signature": "CombinedDomainCategoryPlot.clone()", "testcase": false, "constructor": false}], "file": "source/org/jfree/chart/plot/CombinedDomainCategoryPlot.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "body": "public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof CombinedDomainCategoryPlot)) {\n            return false;\n        }\n        CombinedDomainCategoryPlot that = (CombinedDomainCategoryPlot) obj;\n        if (this.gap != that.gap) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.subplots, that.subplots)) {\n            return false;\n        }\n        return super.equals(obj);\n    }", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "CombinedDomainCategoryPlot.equals(Object obj)", "testcase": false, "constructor": false, "invocations": ["equal", "equals"]}, "repository": {"repo_id": "Chart_1_buggy"}}