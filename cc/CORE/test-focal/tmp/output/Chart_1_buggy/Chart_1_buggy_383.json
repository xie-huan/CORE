{"test_class": {"identifier": "PointerNeedleTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/chart/needle/junit/PointerNeedleTests.java"}, "test_case": {"identifier": "testSerialization", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testSerialization() {\n        PointerNeedle n1 = new PointerNeedle();\n        PointerNeedle n2 = null;\n        try {\n            ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n            ObjectOutput out = new ObjectOutputStream(buffer);\n            out.writeObject(n1);\n            out.close();\n            ObjectInput in = new ObjectInputStream(\n                new ByteArrayInputStream(buffer.toByteArray())\n            );\n            n2 = (PointerNeedle) in.readObject();\n            in.close();\n        }\n        catch (Exception e) {\n            e.printStackTrace();\n        }\n        assertTrue(n1.equals(n2));\n    }", "signature": "void testSerialization()", "full_signature": "public void testSerialization()", "class_method_signature": "PointerNeedleTests.testSerialization()", "testcase": true, "constructor": false, "invocations": ["writeObject", "close", "toByteArray", "readObject", "close", "printStackTrace", "assertTrue", "equals"]}, "focal_class": {"identifier": "PointerNeedle", "superclass": "extends MeterNeedle", "interfaces": "implements Cloneable, Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -4744677345334729606L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -4744677345334729606L", "var_name": "serialVersionUID"}], "methods": [{"identifier": "drawNeedle", "parameters": "(Graphics2D g2, Rectangle2D plotArea,\n                              Point2D rotate, double angle)", "modifiers": "protected", "return": "void", "signature": "void drawNeedle(Graphics2D g2, Rectangle2D plotArea,\n                              Point2D rotate, double angle)", "full_signature": "protected void drawNeedle(Graphics2D g2, Rectangle2D plotArea,\n                              Point2D rotate, double angle)", "class_method_signature": "PointerNeedle.drawNeedle(Graphics2D g2, Rectangle2D plotArea,\n                              Point2D rotate, double angle)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "PointerNeedle.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "PointerNeedle.hashCode()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object clone()", "full_signature": "public Object clone()", "class_method_signature": "PointerNeedle.clone()", "testcase": false, "constructor": false}], "file": "source/org/jfree/chart/needle/PointerNeedle.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "body": "public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof PointerNeedle)) {\n            return false;\n        }\n        if (!super.equals(obj)) {\n            return false;\n        }\n        return true;\n    }", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "PointerNeedle.equals(Object obj)", "testcase": false, "constructor": false, "invocations": ["equals"]}, "repository": {"repo_id": "Chart_1_buggy"}}