{"test_class": {"identifier": "XYPlotTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/chart/plot/junit/XYPlotTests.java"}, "test_case": {"identifier": "testRemoveDomainMarker", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testRemoveDomainMarker() {\n        XYPlot plot = new XYPlot();\n        assertFalse(plot.removeDomainMarker(new ValueMarker(0.5)));\n    }", "signature": "void testRemoveDomainMarker()", "full_signature": "public void testRemoveDomainMarker()", "class_method_signature": "XYPlotTests.testRemoveDomainMarker()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "removeDomainMarker"]}, "focal_class": {"identifier": "XYPlot", "superclass": "extends Plot", "interfaces": "implements ValueAxisPlot, Pannable,\n        Selectable, Zoomable, RendererChangeListener, Cloneable,\n        PublicCloneable, Serializable", "fields": [{"original_string": "private static final long serialVersionUID = 7044148245716569264L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 7044148245716569264L", "var_name": "serialVersionUID"}, {"original_string": "public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f,\n            BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,\n            new float[] {2.0f, 2.0f}, 0.0f);", "modifier": "public static final", "type": "Stroke", "declarator": "DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f,\n            BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,\n            new float[] {2.0f, 2.0f}, 0.0f)", "var_name": "DEFAULT_GRIDLINE_STROKE"}, {"original_string": "public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE;", "modifier": "public static final", "type": "Paint", "declarator": "DEFAULT_GRIDLINE_PAINT = Color.WHITE", "var_name": "DEFAULT_GRIDLINE_PAINT"}, {"original_string": "public static final boolean DEFAULT_CROSSHAIR_VISIBLE = false;", "modifier": "public static final", "type": "boolean", "declarator": "DEFAULT_CROSSHAIR_VISIBLE = false", "var_name": "DEFAULT_CROSSHAIR_VISIBLE"}, {"original_string": "public static final Stroke DEFAULT_CROSSHAIR_STROKE\n            = DEFAULT_GRIDLINE_STROKE;", "modifier": "public static final", "type": "Stroke", "declarator": "DEFAULT_CROSSHAIR_STROKE\n            = DEFAULT_GRIDLINE_STROKE", "var_name": "DEFAULT_CROSSHAIR_STROKE"}, {"original_string": "public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;", "modifier": "public static final", "type": "Paint", "declarator": "DEFAULT_CROSSHAIR_PAINT = Color.blue", "var_name": "DEFAULT_CROSSHAIR_PAINT"}, {"original_string": "protected static ResourceBundle localizationResources\n            = ResourceBundleWrapper.getBundle(\n                    \"org.jfree.chart.plot.LocalizationBundle\");", "modifier": "protected static", "type": "ResourceBundle", "declarator": "localizationResources\n            = ResourceBundleWrapper.getBundle(\n                    \"org.jfree.chart.plot.LocalizationBundle\")", "var_name": "localizationResources"}, {"original_string": "private PlotOrientation orientation;", "modifier": "private", "type": "PlotOrientation", "declarator": "orientation", "var_name": "orientation"}, {"original_string": "private RectangleInsets axisOffset;", "modifier": "private", "type": "RectangleInsets", "declarator": "axisOffset", "var_name": "axisOffset"}, {"original_string": "private ObjectList domainAxes;", "modifier": "private", "type": "ObjectList", "declarator": "domainAxes", "var_name": "domainAxes"}, {"original_string": "private ObjectList domainAxisLocations;", "modifier": "private", "type": "ObjectList", "declarator": "domainAxisLocations", "var_name": "domainAxisLocations"}, {"original_string": "private ObjectList rangeAxes;", "modifier": "private", "type": "ObjectList", "declarator": "rangeAxes", "var_name": "rangeAxes"}, {"original_string": "private ObjectList rangeAxisLocations;", "modifier": "private", "type": "ObjectList", "declarator": "rangeAxisLocations", "var_name": "rangeAxisLocations"}, {"original_string": "private ObjectList datasets;", "modifier": "private", "type": "ObjectList", "declarator": "datasets", "var_name": "datasets"}, {"original_string": "private ObjectList renderers;", "modifier": "private", "type": "ObjectList", "declarator": "renderers", "var_name": "renderers"}, {"original_string": "private Map datasetToDomainAxesMap;", "modifier": "private", "type": "Map", "declarator": "datasetToDomainAxesMap", "var_name": "datasetToDomainAxesMap"}, {"original_string": "private Map datasetToRangeAxesMap;", "modifier": "private", "type": "Map", "declarator": "datasetToRangeAxesMap", "var_name": "datasetToRangeAxesMap"}, {"original_string": "private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0);", "modifier": "private transient", "type": "Point2D", "declarator": "quadrantOrigin = new Point2D.Double(0.0, 0.0)", "var_name": "quadrantOrigin"}, {"original_string": "private transient Paint[] quadrantPaint\n            = new Paint[] {null, null, null, null};", "modifier": "private transient", "type": "Paint[]", "declarator": "quadrantPaint\n            = new Paint[] {null, null, null, null}", "var_name": "quadrantPaint"}, {"original_string": "private boolean domainGridlinesVisible;", "modifier": "private", "type": "boolean", "declarator": "domainGridlinesVisible", "var_name": "domainGridlinesVisible"}, {"original_string": "private transient Stroke domainGridlineStroke;", "modifier": "private transient", "type": "Stroke", "declarator": "domainGridlineStroke", "var_name": "domainGridlineStroke"}, {"original_string": "private transient Paint domainGridlinePaint;", "modifier": "private transient", "type": "Paint", "declarator": "domainGridlinePaint", "var_name": "domainGridlinePaint"}, {"original_string": "private boolean rangeGridlinesVisible;", "modifier": "private", "type": "boolean", "declarator": "rangeGridlinesVisible", "var_name": "rangeGridlinesVisible"}, {"original_string": "private transient Stroke rangeGridlineStroke;", "modifier": "private transient", "type": "Stroke", "declarator": "rangeGridlineStroke", "var_name": "rangeGridlineStroke"}, {"original_string": "private transient Paint rangeGridlinePaint;", "modifier": "private transient", "type": "Paint", "declarator": "rangeGridlinePaint", "var_name": "rangeGridlinePaint"}, {"original_string": "private boolean domainMinorGridlinesVisible;", "modifier": "private", "type": "boolean", "declarator": "domainMinorGridlinesVisible", "var_name": "domainMinorGridlinesVisible"}, {"original_string": "private transient Stroke domainMinorGridlineStroke;", "modifier": "private transient", "type": "Stroke", "declarator": "domainMinorGridlineStroke", "var_name": "domainMinorGridlineStroke"}, {"original_string": "private transient Paint domainMinorGridlinePaint;", "modifier": "private transient", "type": "Paint", "declarator": "domainMinorGridlinePaint", "var_name": "domainMinorGridlinePaint"}, {"original_string": "private boolean rangeMinorGridlinesVisible;", "modifier": "private", "type": "boolean", "declarator": "rangeMinorGridlinesVisible", "var_name": "rangeMinorGridlinesVisible"}, {"original_string": "private transient Stroke rangeMinorGridlineStroke;", "modifier": "private transient", "type": "Stroke", "declarator": "rangeMinorGridlineStroke", "var_name": "rangeMinorGridlineStroke"}, {"original_string": "private transient Paint rangeMinorGridlinePaint;", "modifier": "private transient", "type": "Paint", "declarator": "rangeMinorGridlinePaint", "var_name": "rangeMinorGridlinePaint"}, {"original_string": "private boolean domainZeroBaselineVisible;", "modifier": "private", "type": "boolean", "declarator": "domainZeroBaselineVisible", "var_name": "domainZeroBaselineVisible"}, {"original_string": "private transient Stroke domainZeroBaselineStroke;", "modifier": "private transient", "type": "Stroke", "declarator": "domainZeroBaselineStroke", "var_name": "domainZeroBaselineStroke"}, {"original_string": "private transient Paint domainZeroBaselinePaint;", "modifier": "private transient", "type": "Paint", "declarator": "domainZeroBaselinePaint", "var_name": "domainZeroBaselinePaint"}, {"original_string": "private boolean rangeZeroBaselineVisible;", "modifier": "private", "type": "boolean", "declarator": "rangeZeroBaselineVisible", "var_name": "rangeZeroBaselineVisible"}, {"original_string": "private transient Stroke rangeZeroBaselineStroke;", "modifier": "private transient", "type": "Stroke", "declarator": "rangeZeroBaselineStroke", "var_name": "rangeZeroBaselineStroke"}, {"original_string": "private transient Paint rangeZeroBaselinePaint;", "modifier": "private transient", "type": "Paint", "declarator": "rangeZeroBaselinePaint", "var_name": "rangeZeroBaselinePaint"}, {"original_string": "private boolean domainCrosshairVisible;", "modifier": "private", "type": "boolean", "declarator": "domainCrosshairVisible", "var_name": "domainCrosshairVisible"}, {"original_string": "private double domainCrosshairValue;", "modifier": "private", "type": "double", "declarator": "domainCrosshairValue", "var_name": "domainCrosshairValue"}, {"original_string": "private transient Stroke domainCrosshairStroke;", "modifier": "private transient", "type": "Stroke", "declarator": "domainCrosshairStroke", "var_name": "domainCrosshairStroke"}, {"original_string": "private transient Paint domainCrosshairPaint;", "modifier": "private transient", "type": "Paint", "declarator": "domainCrosshairPaint", "var_name": "domainCrosshairPaint"}, {"original_string": "private boolean domainCrosshairLockedOnData = true;", "modifier": "private", "type": "boolean", "declarator": "domainCrosshairLockedOnData = true", "var_name": "domainCrosshairLockedOnData"}, {"original_string": "private boolean rangeCrosshairVisible;", "modifier": "private", "type": "boolean", "declarator": "rangeCrosshairVisible", "var_name": "rangeCrosshairVisible"}, {"original_string": "private double rangeCrosshairValue;", "modifier": "private", "type": "double", "declarator": "rangeCrosshairValue", "var_name": "rangeCrosshairValue"}, {"original_string": "private transient Stroke rangeCrosshairStroke;", "modifier": "private transient", "type": "Stroke", "declarator": "rangeCrosshairStroke", "var_name": "rangeCrosshairStroke"}, {"original_string": "private transient Paint rangeCrosshairPaint;", "modifier": "private transient", "type": "Paint", "declarator": "rangeCrosshairPaint", "var_name": "rangeCrosshairPaint"}, {"original_string": "private boolean rangeCrosshairLockedOnData = true;", "modifier": "private", "type": "boolean", "declarator": "rangeCrosshairLockedOnData = true", "var_name": "rangeCrosshairLockedOnData"}, {"original_string": "private Map foregroundDomainMarkers;", "modifier": "private", "type": "Map", "declarator": "foregroundDomainMarkers", "var_name": "foregroundDomainMarkers"}, {"original_string": "private Map backgroundDomainMarkers;", "modifier": "private", "type": "Map", "declarator": "backgroundDomainMarkers", "var_name": "backgroundDomainMarkers"}, {"original_string": "private Map foregroundRangeMarkers;", "modifier": "private", "type": "Map", "declarator": "foregroundRangeMarkers", "var_name": "foregroundRangeMarkers"}, {"original_string": "private Map backgroundRangeMarkers;", "modifier": "private", "type": "Map", "declarator": "backgroundRangeMarkers", "var_name": "backgroundRangeMarkers"}, {"original_string": "private List annotations;", "modifier": "private", "type": "List", "declarator": "annotations", "var_name": "annotations"}, {"original_string": "private transient Paint domainTickBandPaint;", "modifier": "private transient", "type": "Paint", "declarator": "domainTickBandPaint", "var_name": "domainTickBandPaint"}, {"original_string": "private transient Paint rangeTickBandPaint;", "modifier": "private transient", "type": "Paint", "declarator": "rangeTickBandPaint", "var_name": "rangeTickBandPaint"}, {"original_string": "private AxisSpace fixedDomainAxisSpace;", "modifier": "private", "type": "AxisSpace", "declarator": "fixedDomainAxisSpace", "var_name": "fixedDomainAxisSpace"}, {"original_string": "private AxisSpace fixedRangeAxisSpace;", "modifier": "private", "type": "AxisSpace", "declarator": "fixedRangeAxisSpace", "var_name": "fixedRangeAxisSpace"}, {"original_string": "private DatasetRenderingOrder datasetRenderingOrder\n            = DatasetRenderingOrder.REVERSE;", "modifier": "private", "type": "DatasetRenderingOrder", "declarator": "datasetRenderingOrder\n            = DatasetRenderingOrder.REVERSE", "var_name": "datasetRenderingOrder"}, {"original_string": "private SeriesRenderingOrder seriesRenderingOrder\n            = SeriesRenderingOrder.REVERSE;", "modifier": "private", "type": "SeriesRenderingOrder", "declarator": "seriesRenderingOrder\n            = SeriesRenderingOrder.REVERSE", "var_name": "seriesRenderingOrder"}, {"original_string": "private int weight;", "modifier": "private", "type": "int", "declarator": "weight", "var_name": "weight"}, {"original_string": "private LegendItemCollection fixedLegendItems;", "modifier": "private", "type": "LegendItemCollection", "declarator": "fixedLegendItems", "var_name": "fixedLegendItems"}, {"original_string": "private boolean domainPannable;", "modifier": "private", "type": "boolean", "declarator": "domainPannable", "var_name": "domainPannable"}, {"original_string": "private boolean rangePannable;", "modifier": "private", "type": "boolean", "declarator": "rangePannable", "var_name": "rangePannable"}, {"original_string": "private ShadowGenerator shadowGenerator;", "modifier": "private", "type": "ShadowGenerator", "declarator": "shadowGenerator", "var_name": "shadowGenerator"}], "methods": [{"identifier": "XYPlot", "parameters": "()", "modifiers": "public", "return": "", "signature": " XYPlot()", "full_signature": "public  XYPlot()", "class_method_signature": "XYPlot.XYPlot()", "testcase": false, "constructor": true}, {"identifier": "XYPlot", "parameters": "(XYDataset dataset,\n                  ValueAxis domainAxis,\n                  ValueAxis rangeAxis,\n                  XYItemRenderer renderer)", "modifiers": "public", "return": "", "signature": " XYPlot(XYDataset dataset,\n                  ValueAxis domainAxis,\n                  ValueAxis rangeAxis,\n                  XYItemRenderer renderer)", "full_signature": "public  XYPlot(XYDataset dataset,\n                  ValueAxis domainAxis,\n                  ValueAxis rangeAxis,\n                  XYItemRenderer renderer)", "class_method_signature": "XYPlot.XYPlot(XYDataset dataset,\n                  ValueAxis domainAxis,\n                  ValueAxis rangeAxis,\n                  XYItemRenderer renderer)", "testcase": false, "constructor": true}, {"identifier": "getPlotType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPlotType()", "full_signature": "public String getPlotType()", "class_method_signature": "XYPlot.getPlotType()", "testcase": false, "constructor": false}, {"identifier": "getOrientation", "parameters": "()", "modifiers": "public", "return": "PlotOrientation", "signature": "PlotOrientation getOrientation()", "full_signature": "public PlotOrientation getOrientation()", "class_method_signature": "XYPlot.getOrientation()", "testcase": false, "constructor": false}, {"identifier": "setOrientation", "parameters": "(PlotOrientation orientation)", "modifiers": "public", "return": "void", "signature": "void setOrientation(PlotOrientation orientation)", "full_signature": "public void setOrientation(PlotOrientation orientation)", "class_method_signature": "XYPlot.setOrientation(PlotOrientation orientation)", "testcase": false, "constructor": false}, {"identifier": "getAxisOffset", "parameters": "()", "modifiers": "public", "return": "RectangleInsets", "signature": "RectangleInsets getAxisOffset()", "full_signature": "public RectangleInsets getAxisOffset()", "class_method_signature": "XYPlot.getAxisOffset()", "testcase": false, "constructor": false}, {"identifier": "setAxisOffset", "parameters": "(RectangleInsets offset)", "modifiers": "public", "return": "void", "signature": "void setAxisOffset(RectangleInsets offset)", "full_signature": "public void setAxisOffset(RectangleInsets offset)", "class_method_signature": "XYPlot.setAxisOffset(RectangleInsets offset)", "testcase": false, "constructor": false}, {"identifier": "getDomainAxis", "parameters": "()", "modifiers": "public", "return": "ValueAxis", "signature": "ValueAxis getDomainAxis()", "full_signature": "public ValueAxis getDomainAxis()", "class_method_signature": "XYPlot.getDomainAxis()", "testcase": false, "constructor": false}, {"identifier": "getDomainAxis", "parameters": "(int index)", "modifiers": "public", "return": "ValueAxis", "signature": "ValueAxis getDomainAxis(int index)", "full_signature": "public ValueAxis getDomainAxis(int index)", "class_method_signature": "XYPlot.getDomainAxis(int index)", "testcase": false, "constructor": false}, {"identifier": "setDomainAxis", "parameters": "(ValueAxis axis)", "modifiers": "public", "return": "void", "signature": "void setDomainAxis(ValueAxis axis)", "full_signature": "public void setDomainAxis(ValueAxis axis)", "class_method_signature": "XYPlot.setDomainAxis(ValueAxis axis)", "testcase": false, "constructor": false}, {"identifier": "setDomainAxis", "parameters": "(int index, ValueAxis axis)", "modifiers": "public", "return": "void", "signature": "void setDomainAxis(int index, ValueAxis axis)", "full_signature": "public void setDomainAxis(int index, ValueAxis axis)", "class_method_signature": "XYPlot.setDomainAxis(int index, ValueAxis axis)", "testcase": false, "constructor": false}, {"identifier": "setDomainAxis", "parameters": "(int index, ValueAxis axis, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setDomainAxis(int index, ValueAxis axis, boolean notify)", "full_signature": "public void setDomainAxis(int index, ValueAxis axis, boolean notify)", "class_method_signature": "XYPlot.setDomainAxis(int index, ValueAxis axis, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "setDomainAxes", "parameters": "(ValueAxis[] axes)", "modifiers": "public", "return": "void", "signature": "void setDomainAxes(ValueAxis[] axes)", "full_signature": "public void setDomainAxes(ValueAxis[] axes)", "class_method_signature": "XYPlot.setDomainAxes(ValueAxis[] axes)", "testcase": false, "constructor": false}, {"identifier": "getDomainAxisLocation", "parameters": "()", "modifiers": "public", "return": "AxisLocation", "signature": "AxisLocation getDomainAxisLocation()", "full_signature": "public AxisLocation getDomainAxisLocation()", "class_method_signature": "XYPlot.getDomainAxisLocation()", "testcase": false, "constructor": false}, {"identifier": "setDomainAxisLocation", "parameters": "(AxisLocation location)", "modifiers": "public", "return": "void", "signature": "void setDomainAxisLocation(AxisLocation location)", "full_signature": "public void setDomainAxisLocation(AxisLocation location)", "class_method_signature": "XYPlot.setDomainAxisLocation(AxisLocation location)", "testcase": false, "constructor": false}, {"identifier": "setDomainAxisLocation", "parameters": "(AxisLocation location, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setDomainAxisLocation(AxisLocation location, boolean notify)", "full_signature": "public void setDomainAxisLocation(AxisLocation location, boolean notify)", "class_method_signature": "XYPlot.setDomainAxisLocation(AxisLocation location, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getDomainAxisEdge", "parameters": "()", "modifiers": "public", "return": "RectangleEdge", "signature": "RectangleEdge getDomainAxisEdge()", "full_signature": "public RectangleEdge getDomainAxisEdge()", "class_method_signature": "XYPlot.getDomainAxisEdge()", "testcase": false, "constructor": false}, {"identifier": "getDomainAxisCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getDomainAxisCount()", "full_signature": "public int getDomainAxisCount()", "class_method_signature": "XYPlot.getDomainAxisCount()", "testcase": false, "constructor": false}, {"identifier": "clearDomainAxes", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearDomainAxes()", "full_signature": "public void clearDomainAxes()", "class_method_signature": "XYPlot.clearDomainAxes()", "testcase": false, "constructor": false}, {"identifier": "configureDomainAxes", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void configureDomainAxes()", "full_signature": "public void configureDomainAxes()", "class_method_signature": "XYPlot.configureDomainAxes()", "testcase": false, "constructor": false}, {"identifier": "getDomainAxisLocation", "parameters": "(int index)", "modifiers": "public", "return": "AxisLocation", "signature": "AxisLocation getDomainAxisLocation(int index)", "full_signature": "public AxisLocation getDomainAxisLocation(int index)", "class_method_signature": "XYPlot.getDomainAxisLocation(int index)", "testcase": false, "constructor": false}, {"identifier": "setDomainAxisLocation", "parameters": "(int index, AxisLocation location)", "modifiers": "public", "return": "void", "signature": "void setDomainAxisLocation(int index, AxisLocation location)", "full_signature": "public void setDomainAxisLocation(int index, AxisLocation location)", "class_method_signature": "XYPlot.setDomainAxisLocation(int index, AxisLocation location)", "testcase": false, "constructor": false}, {"identifier": "setDomainAxisLocation", "parameters": "(int index, AxisLocation location,\n            boolean notify)", "modifiers": "public", "return": "void", "signature": "void setDomainAxisLocation(int index, AxisLocation location,\n            boolean notify)", "full_signature": "public void setDomainAxisLocation(int index, AxisLocation location,\n            boolean notify)", "class_method_signature": "XYPlot.setDomainAxisLocation(int index, AxisLocation location,\n            boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getDomainAxisEdge", "parameters": "(int index)", "modifiers": "public", "return": "RectangleEdge", "signature": "RectangleEdge getDomainAxisEdge(int index)", "full_signature": "public RectangleEdge getDomainAxisEdge(int index)", "class_method_signature": "XYPlot.getDomainAxisEdge(int index)", "testcase": false, "constructor": false}, {"identifier": "getRangeAxis", "parameters": "()", "modifiers": "public", "return": "ValueAxis", "signature": "ValueAxis getRangeAxis()", "full_signature": "public ValueAxis getRangeAxis()", "class_method_signature": "XYPlot.getRangeAxis()", "testcase": false, "constructor": false}, {"identifier": "setRangeAxis", "parameters": "(ValueAxis axis)", "modifiers": "public", "return": "void", "signature": "void setRangeAxis(ValueAxis axis)", "full_signature": "public void setRangeAxis(ValueAxis axis)", "class_method_signature": "XYPlot.setRangeAxis(ValueAxis axis)", "testcase": false, "constructor": false}, {"identifier": "getRangeAxisLocation", "parameters": "()", "modifiers": "public", "return": "AxisLocation", "signature": "AxisLocation getRangeAxisLocation()", "full_signature": "public AxisLocation getRangeAxisLocation()", "class_method_signature": "XYPlot.getRangeAxisLocation()", "testcase": false, "constructor": false}, {"identifier": "setRangeAxisLocation", "parameters": "(AxisLocation location)", "modifiers": "public", "return": "void", "signature": "void setRangeAxisLocation(AxisLocation location)", "full_signature": "public void setRangeAxisLocation(AxisLocation location)", "class_method_signature": "XYPlot.setRangeAxisLocation(AxisLocation location)", "testcase": false, "constructor": false}, {"identifier": "setRangeAxisLocation", "parameters": "(AxisLocation location, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setRangeAxisLocation(AxisLocation location, boolean notify)", "full_signature": "public void setRangeAxisLocation(AxisLocation location, boolean notify)", "class_method_signature": "XYPlot.setRangeAxisLocation(AxisLocation location, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getRangeAxisEdge", "parameters": "()", "modifiers": "public", "return": "RectangleEdge", "signature": "RectangleEdge getRangeAxisEdge()", "full_signature": "public RectangleEdge getRangeAxisEdge()", "class_method_signature": "XYPlot.getRangeAxisEdge()", "testcase": false, "constructor": false}, {"identifier": "getRangeAxis", "parameters": "(int index)", "modifiers": "public", "return": "ValueAxis", "signature": "ValueAxis getRangeAxis(int index)", "full_signature": "public ValueAxis getRangeAxis(int index)", "class_method_signature": "XYPlot.getRangeAxis(int index)", "testcase": false, "constructor": false}, {"identifier": "setRangeAxis", "parameters": "(int index, ValueAxis axis)", "modifiers": "public", "return": "void", "signature": "void setRangeAxis(int index, ValueAxis axis)", "full_signature": "public void setRangeAxis(int index, ValueAxis axis)", "class_method_signature": "XYPlot.setRangeAxis(int index, ValueAxis axis)", "testcase": false, "constructor": false}, {"identifier": "setRangeAxis", "parameters": "(int index, ValueAxis axis, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setRangeAxis(int index, ValueAxis axis, boolean notify)", "full_signature": "public void setRangeAxis(int index, ValueAxis axis, boolean notify)", "class_method_signature": "XYPlot.setRangeAxis(int index, ValueAxis axis, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "setRangeAxes", "parameters": "(ValueAxis[] axes)", "modifiers": "public", "return": "void", "signature": "void setRangeAxes(ValueAxis[] axes)", "full_signature": "public void setRangeAxes(ValueAxis[] axes)", "class_method_signature": "XYPlot.setRangeAxes(ValueAxis[] axes)", "testcase": false, "constructor": false}, {"identifier": "getRangeAxisCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getRangeAxisCount()", "full_signature": "public int getRangeAxisCount()", "class_method_signature": "XYPlot.getRangeAxisCount()", "testcase": false, "constructor": false}, {"identifier": "clearRangeAxes", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearRangeAxes()", "full_signature": "public void clearRangeAxes()", "class_method_signature": "XYPlot.clearRangeAxes()", "testcase": false, "constructor": false}, {"identifier": "configureRangeAxes", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void configureRangeAxes()", "full_signature": "public void configureRangeAxes()", "class_method_signature": "XYPlot.configureRangeAxes()", "testcase": false, "constructor": false}, {"identifier": "getRangeAxisLocation", "parameters": "(int index)", "modifiers": "public", "return": "AxisLocation", "signature": "AxisLocation getRangeAxisLocation(int index)", "full_signature": "public AxisLocation getRangeAxisLocation(int index)", "class_method_signature": "XYPlot.getRangeAxisLocation(int index)", "testcase": false, "constructor": false}, {"identifier": "setRangeAxisLocation", "parameters": "(int index, AxisLocation location)", "modifiers": "public", "return": "void", "signature": "void setRangeAxisLocation(int index, AxisLocation location)", "full_signature": "public void setRangeAxisLocation(int index, AxisLocation location)", "class_method_signature": "XYPlot.setRangeAxisLocation(int index, AxisLocation location)", "testcase": false, "constructor": false}, {"identifier": "setRangeAxisLocation", "parameters": "(int index, AxisLocation location,\n            boolean notify)", "modifiers": "public", "return": "void", "signature": "void setRangeAxisLocation(int index, AxisLocation location,\n            boolean notify)", "full_signature": "public void setRangeAxisLocation(int index, AxisLocation location,\n            boolean notify)", "class_method_signature": "XYPlot.setRangeAxisLocation(int index, AxisLocation location,\n            boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getRangeAxisEdge", "parameters": "(int index)", "modifiers": "public", "return": "RectangleEdge", "signature": "RectangleEdge getRangeAxisEdge(int index)", "full_signature": "public RectangleEdge getRangeAxisEdge(int index)", "class_method_signature": "XYPlot.getRangeAxisEdge(int index)", "testcase": false, "constructor": false}, {"identifier": "getDataset", "parameters": "()", "modifiers": "public", "return": "XYDataset", "signature": "XYDataset getDataset()", "full_signature": "public XYDataset getDataset()", "class_method_signature": "XYPlot.getDataset()", "testcase": false, "constructor": false}, {"identifier": "getDataset", "parameters": "(int index)", "modifiers": "public", "return": "XYDataset", "signature": "XYDataset getDataset(int index)", "full_signature": "public XYDataset getDataset(int index)", "class_method_signature": "XYPlot.getDataset(int index)", "testcase": false, "constructor": false}, {"identifier": "setDataset", "parameters": "(XYDataset dataset)", "modifiers": "public", "return": "void", "signature": "void setDataset(XYDataset dataset)", "full_signature": "public void setDataset(XYDataset dataset)", "class_method_signature": "XYPlot.setDataset(XYDataset dataset)", "testcase": false, "constructor": false}, {"identifier": "setDataset", "parameters": "(int index, XYDataset dataset)", "modifiers": "public", "return": "void", "signature": "void setDataset(int index, XYDataset dataset)", "full_signature": "public void setDataset(int index, XYDataset dataset)", "class_method_signature": "XYPlot.setDataset(int index, XYDataset dataset)", "testcase": false, "constructor": false}, {"identifier": "getDatasetCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getDatasetCount()", "full_signature": "public int getDatasetCount()", "class_method_signature": "XYPlot.getDatasetCount()", "testcase": false, "constructor": false}, {"identifier": "indexOf", "parameters": "(XYDataset dataset)", "modifiers": "public", "return": "int", "signature": "int indexOf(XYDataset dataset)", "full_signature": "public int indexOf(XYDataset dataset)", "class_method_signature": "XYPlot.indexOf(XYDataset dataset)", "testcase": false, "constructor": false}, {"identifier": "mapDatasetToDomainAxis", "parameters": "(int index, int axisIndex)", "modifiers": "public", "return": "void", "signature": "void mapDatasetToDomainAxis(int index, int axisIndex)", "full_signature": "public void mapDatasetToDomainAxis(int index, int axisIndex)", "class_method_signature": "XYPlot.mapDatasetToDomainAxis(int index, int axisIndex)", "testcase": false, "constructor": false}, {"identifier": "mapDatasetToDomainAxes", "parameters": "(int index, List axisIndices)", "modifiers": "public", "return": "void", "signature": "void mapDatasetToDomainAxes(int index, List axisIndices)", "full_signature": "public void mapDatasetToDomainAxes(int index, List axisIndices)", "class_method_signature": "XYPlot.mapDatasetToDomainAxes(int index, List axisIndices)", "testcase": false, "constructor": false}, {"identifier": "mapDatasetToRangeAxis", "parameters": "(int index, int axisIndex)", "modifiers": "public", "return": "void", "signature": "void mapDatasetToRangeAxis(int index, int axisIndex)", "full_signature": "public void mapDatasetToRangeAxis(int index, int axisIndex)", "class_method_signature": "XYPlot.mapDatasetToRangeAxis(int index, int axisIndex)", "testcase": false, "constructor": false}, {"identifier": "mapDatasetToRangeAxes", "parameters": "(int index, List axisIndices)", "modifiers": "public", "return": "void", "signature": "void mapDatasetToRangeAxes(int index, List axisIndices)", "full_signature": "public void mapDatasetToRangeAxes(int index, List axisIndices)", "class_method_signature": "XYPlot.mapDatasetToRangeAxes(int index, List axisIndices)", "testcase": false, "constructor": false}, {"identifier": "checkAxisIndices", "parameters": "(List indices)", "modifiers": "private", "return": "void", "signature": "void checkAxisIndices(List indices)", "full_signature": "private void checkAxisIndices(List indices)", "class_method_signature": "XYPlot.checkAxisIndices(List indices)", "testcase": false, "constructor": false}, {"identifier": "getRendererCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getRendererCount()", "full_signature": "public int getRendererCount()", "class_method_signature": "XYPlot.getRendererCount()", "testcase": false, "constructor": false}, {"identifier": "getRenderer", "parameters": "()", "modifiers": "public", "return": "XYItemRenderer", "signature": "XYItemRenderer getRenderer()", "full_signature": "public XYItemRenderer getRenderer()", "class_method_signature": "XYPlot.getRenderer()", "testcase": false, "constructor": false}, {"identifier": "getRenderer", "parameters": "(int index)", "modifiers": "public", "return": "XYItemRenderer", "signature": "XYItemRenderer getRenderer(int index)", "full_signature": "public XYItemRenderer getRenderer(int index)", "class_method_signature": "XYPlot.getRenderer(int index)", "testcase": false, "constructor": false}, {"identifier": "setRenderer", "parameters": "(XYItemRenderer renderer)", "modifiers": "public", "return": "void", "signature": "void setRenderer(XYItemRenderer renderer)", "full_signature": "public void setRenderer(XYItemRenderer renderer)", "class_method_signature": "XYPlot.setRenderer(XYItemRenderer renderer)", "testcase": false, "constructor": false}, {"identifier": "setRenderer", "parameters": "(int index, XYItemRenderer renderer)", "modifiers": "public", "return": "void", "signature": "void setRenderer(int index, XYItemRenderer renderer)", "full_signature": "public void setRenderer(int index, XYItemRenderer renderer)", "class_method_signature": "XYPlot.setRenderer(int index, XYItemRenderer renderer)", "testcase": false, "constructor": false}, {"identifier": "setRenderer", "parameters": "(int index, XYItemRenderer renderer,\n                            boolean notify)", "modifiers": "public", "return": "void", "signature": "void setRenderer(int index, XYItemRenderer renderer,\n                            boolean notify)", "full_signature": "public void setRenderer(int index, XYItemRenderer renderer,\n                            boolean notify)", "class_method_signature": "XYPlot.setRenderer(int index, XYItemRenderer renderer,\n                            boolean notify)", "testcase": false, "constructor": false}, {"identifier": "setRenderers", "parameters": "(XYItemRenderer[] renderers)", "modifiers": "public", "return": "void", "signature": "void setRenderers(XYItemRenderer[] renderers)", "full_signature": "public void setRenderers(XYItemRenderer[] renderers)", "class_method_signature": "XYPlot.setRenderers(XYItemRenderer[] renderers)", "testcase": false, "constructor": false}, {"identifier": "getDatasetRenderingOrder", "parameters": "()", "modifiers": "public", "return": "DatasetRenderingOrder", "signature": "DatasetRenderingOrder getDatasetRenderingOrder()", "full_signature": "public DatasetRenderingOrder getDatasetRenderingOrder()", "class_method_signature": "XYPlot.getDatasetRenderingOrder()", "testcase": false, "constructor": false}, {"identifier": "setDatasetRenderingOrder", "parameters": "(DatasetRenderingOrder order)", "modifiers": "public", "return": "void", "signature": "void setDatasetRenderingOrder(DatasetRenderingOrder order)", "full_signature": "public void setDatasetRenderingOrder(DatasetRenderingOrder order)", "class_method_signature": "XYPlot.setDatasetRenderingOrder(DatasetRenderingOrder order)", "testcase": false, "constructor": false}, {"identifier": "getSeriesRenderingOrder", "parameters": "()", "modifiers": "public", "return": "SeriesRenderingOrder", "signature": "SeriesRenderingOrder getSeriesRenderingOrder()", "full_signature": "public SeriesRenderingOrder getSeriesRenderingOrder()", "class_method_signature": "XYPlot.getSeriesRenderingOrder()", "testcase": false, "constructor": false}, {"identifier": "setSeriesRenderingOrder", "parameters": "(SeriesRenderingOrder order)", "modifiers": "public", "return": "void", "signature": "void setSeriesRenderingOrder(SeriesRenderingOrder order)", "full_signature": "public void setSeriesRenderingOrder(SeriesRenderingOrder order)", "class_method_signature": "XYPlot.setSeriesRenderingOrder(SeriesRenderingOrder order)", "testcase": false, "constructor": false}, {"identifier": "getIndexOf", "parameters": "(XYItemRenderer renderer)", "modifiers": "public", "return": "int", "signature": "int getIndexOf(XYItemRenderer renderer)", "full_signature": "public int getIndexOf(XYItemRenderer renderer)", "class_method_signature": "XYPlot.getIndexOf(XYItemRenderer renderer)", "testcase": false, "constructor": false}, {"identifier": "getRendererForDataset", "parameters": "(XYDataset dataset)", "modifiers": "public", "return": "XYItemRenderer", "signature": "XYItemRenderer getRendererForDataset(XYDataset dataset)", "full_signature": "public XYItemRenderer getRendererForDataset(XYDataset dataset)", "class_method_signature": "XYPlot.getRendererForDataset(XYDataset dataset)", "testcase": false, "constructor": false}, {"identifier": "getWeight", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getWeight()", "full_signature": "public int getWeight()", "class_method_signature": "XYPlot.getWeight()", "testcase": false, "constructor": false}, {"identifier": "setWeight", "parameters": "(int weight)", "modifiers": "public", "return": "void", "signature": "void setWeight(int weight)", "full_signature": "public void setWeight(int weight)", "class_method_signature": "XYPlot.setWeight(int weight)", "testcase": false, "constructor": false}, {"identifier": "isDomainGridlinesVisible", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDomainGridlinesVisible()", "full_signature": "public boolean isDomainGridlinesVisible()", "class_method_signature": "XYPlot.isDomainGridlinesVisible()", "testcase": false, "constructor": false}, {"identifier": "setDomainGridlinesVisible", "parameters": "(boolean visible)", "modifiers": "public", "return": "void", "signature": "void setDomainGridlinesVisible(boolean visible)", "full_signature": "public void setDomainGridlinesVisible(boolean visible)", "class_method_signature": "XYPlot.setDomainGridlinesVisible(boolean visible)", "testcase": false, "constructor": false}, {"identifier": "isDomainMinorGridlinesVisible", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDomainMinorGridlinesVisible()", "full_signature": "public boolean isDomainMinorGridlinesVisible()", "class_method_signature": "XYPlot.isDomainMinorGridlinesVisible()", "testcase": false, "constructor": false}, {"identifier": "setDomainMinorGridlinesVisible", "parameters": "(boolean visible)", "modifiers": "public", "return": "void", "signature": "void setDomainMinorGridlinesVisible(boolean visible)", "full_signature": "public void setDomainMinorGridlinesVisible(boolean visible)", "class_method_signature": "XYPlot.setDomainMinorGridlinesVisible(boolean visible)", "testcase": false, "constructor": false}, {"identifier": "getDomainGridlineStroke", "parameters": "()", "modifiers": "public", "return": "Stroke", "signature": "Stroke getDomainGridlineStroke()", "full_signature": "public Stroke getDomainGridlineStroke()", "class_method_signature": "XYPlot.getDomainGridlineStroke()", "testcase": false, "constructor": false}, {"identifier": "setDomainGridlineStroke", "parameters": "(Stroke stroke)", "modifiers": "public", "return": "void", "signature": "void setDomainGridlineStroke(Stroke stroke)", "full_signature": "public void setDomainGridlineStroke(Stroke stroke)", "class_method_signature": "XYPlot.setDomainGridlineStroke(Stroke stroke)", "testcase": false, "constructor": false}, {"identifier": "getDomainMinorGridlineStroke", "parameters": "()", "modifiers": "public", "return": "Stroke", "signature": "Stroke getDomainMinorGridlineStroke()", "full_signature": "public Stroke getDomainMinorGridlineStroke()", "class_method_signature": "XYPlot.getDomainMinorGridlineStroke()", "testcase": false, "constructor": false}, {"identifier": "setDomainMinorGridlineStroke", "parameters": "(Stroke stroke)", "modifiers": "public", "return": "void", "signature": "void setDomainMinorGridlineStroke(Stroke stroke)", "full_signature": "public void setDomainMinorGridlineStroke(Stroke stroke)", "class_method_signature": "XYPlot.setDomainMinorGridlineStroke(Stroke stroke)", "testcase": false, "constructor": false}, {"identifier": "getDomainGridlinePaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getDomainGridlinePaint()", "full_signature": "public Paint getDomainGridlinePaint()", "class_method_signature": "XYPlot.getDomainGridlinePaint()", "testcase": false, "constructor": false}, {"identifier": "setDomainGridlinePaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setDomainGridlinePaint(Paint paint)", "full_signature": "public void setDomainGridlinePaint(Paint paint)", "class_method_signature": "XYPlot.setDomainGridlinePaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "getDomainMinorGridlinePaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getDomainMinorGridlinePaint()", "full_signature": "public Paint getDomainMinorGridlinePaint()", "class_method_signature": "XYPlot.getDomainMinorGridlinePaint()", "testcase": false, "constructor": false}, {"identifier": "setDomainMinorGridlinePaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setDomainMinorGridlinePaint(Paint paint)", "full_signature": "public void setDomainMinorGridlinePaint(Paint paint)", "class_method_signature": "XYPlot.setDomainMinorGridlinePaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "isRangeGridlinesVisible", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRangeGridlinesVisible()", "full_signature": "public boolean isRangeGridlinesVisible()", "class_method_signature": "XYPlot.isRangeGridlinesVisible()", "testcase": false, "constructor": false}, {"identifier": "setRangeGridlinesVisible", "parameters": "(boolean visible)", "modifiers": "public", "return": "void", "signature": "void setRangeGridlinesVisible(boolean visible)", "full_signature": "public void setRangeGridlinesVisible(boolean visible)", "class_method_signature": "XYPlot.setRangeGridlinesVisible(boolean visible)", "testcase": false, "constructor": false}, {"identifier": "getRangeGridlineStroke", "parameters": "()", "modifiers": "public", "return": "Stroke", "signature": "Stroke getRangeGridlineStroke()", "full_signature": "public Stroke getRangeGridlineStroke()", "class_method_signature": "XYPlot.getRangeGridlineStroke()", "testcase": false, "constructor": false}, {"identifier": "setRangeGridlineStroke", "parameters": "(Stroke stroke)", "modifiers": "public", "return": "void", "signature": "void setRangeGridlineStroke(Stroke stroke)", "full_signature": "public void setRangeGridlineStroke(Stroke stroke)", "class_method_signature": "XYPlot.setRangeGridlineStroke(Stroke stroke)", "testcase": false, "constructor": false}, {"identifier": "getRangeGridlinePaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getRangeGridlinePaint()", "full_signature": "public Paint getRangeGridlinePaint()", "class_method_signature": "XYPlot.getRangeGridlinePaint()", "testcase": false, "constructor": false}, {"identifier": "setRangeGridlinePaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setRangeGridlinePaint(Paint paint)", "full_signature": "public void setRangeGridlinePaint(Paint paint)", "class_method_signature": "XYPlot.setRangeGridlinePaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "isRangeMinorGridlinesVisible", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRangeMinorGridlinesVisible()", "full_signature": "public boolean isRangeMinorGridlinesVisible()", "class_method_signature": "XYPlot.isRangeMinorGridlinesVisible()", "testcase": false, "constructor": false}, {"identifier": "setRangeMinorGridlinesVisible", "parameters": "(boolean visible)", "modifiers": "public", "return": "void", "signature": "void setRangeMinorGridlinesVisible(boolean visible)", "full_signature": "public void setRangeMinorGridlinesVisible(boolean visible)", "class_method_signature": "XYPlot.setRangeMinorGridlinesVisible(boolean visible)", "testcase": false, "constructor": false}, {"identifier": "getRangeMinorGridlineStroke", "parameters": "()", "modifiers": "public", "return": "Stroke", "signature": "Stroke getRangeMinorGridlineStroke()", "full_signature": "public Stroke getRangeMinorGridlineStroke()", "class_method_signature": "XYPlot.getRangeMinorGridlineStroke()", "testcase": false, "constructor": false}, {"identifier": "setRangeMinorGridlineStroke", "parameters": "(Stroke stroke)", "modifiers": "public", "return": "void", "signature": "void setRangeMinorGridlineStroke(Stroke stroke)", "full_signature": "public void setRangeMinorGridlineStroke(Stroke stroke)", "class_method_signature": "XYPlot.setRangeMinorGridlineStroke(Stroke stroke)", "testcase": false, "constructor": false}, {"identifier": "getRangeMinorGridlinePaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getRangeMinorGridlinePaint()", "full_signature": "public Paint getRangeMinorGridlinePaint()", "class_method_signature": "XYPlot.getRangeMinorGridlinePaint()", "testcase": false, "constructor": false}, {"identifier": "setRangeMinorGridlinePaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setRangeMinorGridlinePaint(Paint paint)", "full_signature": "public void setRangeMinorGridlinePaint(Paint paint)", "class_method_signature": "XYPlot.setRangeMinorGridlinePaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "isDomainZeroBaselineVisible", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDomainZeroBaselineVisible()", "full_signature": "public boolean isDomainZeroBaselineVisible()", "class_method_signature": "XYPlot.isDomainZeroBaselineVisible()", "testcase": false, "constructor": false}, {"identifier": "setDomainZeroBaselineVisible", "parameters": "(boolean visible)", "modifiers": "public", "return": "void", "signature": "void setDomainZeroBaselineVisible(boolean visible)", "full_signature": "public void setDomainZeroBaselineVisible(boolean visible)", "class_method_signature": "XYPlot.setDomainZeroBaselineVisible(boolean visible)", "testcase": false, "constructor": false}, {"identifier": "getDomainZeroBaselineStroke", "parameters": "()", "modifiers": "public", "return": "Stroke", "signature": "Stroke getDomainZeroBaselineStroke()", "full_signature": "public Stroke getDomainZeroBaselineStroke()", "class_method_signature": "XYPlot.getDomainZeroBaselineStroke()", "testcase": false, "constructor": false}, {"identifier": "setDomainZeroBaselineStroke", "parameters": "(Stroke stroke)", "modifiers": "public", "return": "void", "signature": "void setDomainZeroBaselineStroke(Stroke stroke)", "full_signature": "public void setDomainZeroBaselineStroke(Stroke stroke)", "class_method_signature": "XYPlot.setDomainZeroBaselineStroke(Stroke stroke)", "testcase": false, "constructor": false}, {"identifier": "getDomainZeroBaselinePaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getDomainZeroBaselinePaint()", "full_signature": "public Paint getDomainZeroBaselinePaint()", "class_method_signature": "XYPlot.getDomainZeroBaselinePaint()", "testcase": false, "constructor": false}, {"identifier": "setDomainZeroBaselinePaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setDomainZeroBaselinePaint(Paint paint)", "full_signature": "public void setDomainZeroBaselinePaint(Paint paint)", "class_method_signature": "XYPlot.setDomainZeroBaselinePaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "isRangeZeroBaselineVisible", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRangeZeroBaselineVisible()", "full_signature": "public boolean isRangeZeroBaselineVisible()", "class_method_signature": "XYPlot.isRangeZeroBaselineVisible()", "testcase": false, "constructor": false}, {"identifier": "setRangeZeroBaselineVisible", "parameters": "(boolean visible)", "modifiers": "public", "return": "void", "signature": "void setRangeZeroBaselineVisible(boolean visible)", "full_signature": "public void setRangeZeroBaselineVisible(boolean visible)", "class_method_signature": "XYPlot.setRangeZeroBaselineVisible(boolean visible)", "testcase": false, "constructor": false}, {"identifier": "getRangeZeroBaselineStroke", "parameters": "()", "modifiers": "public", "return": "Stroke", "signature": "Stroke getRangeZeroBaselineStroke()", "full_signature": "public Stroke getRangeZeroBaselineStroke()", "class_method_signature": "XYPlot.getRangeZeroBaselineStroke()", "testcase": false, "constructor": false}, {"identifier": "setRangeZeroBaselineStroke", "parameters": "(Stroke stroke)", "modifiers": "public", "return": "void", "signature": "void setRangeZeroBaselineStroke(Stroke stroke)", "full_signature": "public void setRangeZeroBaselineStroke(Stroke stroke)", "class_method_signature": "XYPlot.setRangeZeroBaselineStroke(Stroke stroke)", "testcase": false, "constructor": false}, {"identifier": "getRangeZeroBaselinePaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getRangeZeroBaselinePaint()", "full_signature": "public Paint getRangeZeroBaselinePaint()", "class_method_signature": "XYPlot.getRangeZeroBaselinePaint()", "testcase": false, "constructor": false}, {"identifier": "setRangeZeroBaselinePaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setRangeZeroBaselinePaint(Paint paint)", "full_signature": "public void setRangeZeroBaselinePaint(Paint paint)", "class_method_signature": "XYPlot.setRangeZeroBaselinePaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "getDomainTickBandPaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getDomainTickBandPaint()", "full_signature": "public Paint getDomainTickBandPaint()", "class_method_signature": "XYPlot.getDomainTickBandPaint()", "testcase": false, "constructor": false}, {"identifier": "setDomainTickBandPaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setDomainTickBandPaint(Paint paint)", "full_signature": "public void setDomainTickBandPaint(Paint paint)", "class_method_signature": "XYPlot.setDomainTickBandPaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "getRangeTickBandPaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getRangeTickBandPaint()", "full_signature": "public Paint getRangeTickBandPaint()", "class_method_signature": "XYPlot.getRangeTickBandPaint()", "testcase": false, "constructor": false}, {"identifier": "setRangeTickBandPaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setRangeTickBandPaint(Paint paint)", "full_signature": "public void setRangeTickBandPaint(Paint paint)", "class_method_signature": "XYPlot.setRangeTickBandPaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "getQuadrantOrigin", "parameters": "()", "modifiers": "public", "return": "Point2D", "signature": "Point2D getQuadrantOrigin()", "full_signature": "public Point2D getQuadrantOrigin()", "class_method_signature": "XYPlot.getQuadrantOrigin()", "testcase": false, "constructor": false}, {"identifier": "setQuadrantOrigin", "parameters": "(Point2D origin)", "modifiers": "public", "return": "void", "signature": "void setQuadrantOrigin(Point2D origin)", "full_signature": "public void setQuadrantOrigin(Point2D origin)", "class_method_signature": "XYPlot.setQuadrantOrigin(Point2D origin)", "testcase": false, "constructor": false}, {"identifier": "getQuadrantPaint", "parameters": "(int index)", "modifiers": "public", "return": "Paint", "signature": "Paint getQuadrantPaint(int index)", "full_signature": "public Paint getQuadrantPaint(int index)", "class_method_signature": "XYPlot.getQuadrantPaint(int index)", "testcase": false, "constructor": false}, {"identifier": "setQuadrantPaint", "parameters": "(int index, Paint paint)", "modifiers": "public", "return": "void", "signature": "void setQuadrantPaint(int index, Paint paint)", "full_signature": "public void setQuadrantPaint(int index, Paint paint)", "class_method_signature": "XYPlot.setQuadrantPaint(int index, Paint paint)", "testcase": false, "constructor": false}, {"identifier": "addDomainMarker", "parameters": "(Marker marker)", "modifiers": "public", "return": "void", "signature": "void addDomainMarker(Marker marker)", "full_signature": "public void addDomainMarker(Marker marker)", "class_method_signature": "XYPlot.addDomainMarker(Marker marker)", "testcase": false, "constructor": false}, {"identifier": "addDomainMarker", "parameters": "(Marker marker, Layer layer)", "modifiers": "public", "return": "void", "signature": "void addDomainMarker(Marker marker, Layer layer)", "full_signature": "public void addDomainMarker(Marker marker, Layer layer)", "class_method_signature": "XYPlot.addDomainMarker(Marker marker, Layer layer)", "testcase": false, "constructor": false}, {"identifier": "clearDomainMarkers", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearDomainMarkers()", "full_signature": "public void clearDomainMarkers()", "class_method_signature": "XYPlot.clearDomainMarkers()", "testcase": false, "constructor": false}, {"identifier": "clearDomainMarkers", "parameters": "(int index)", "modifiers": "public", "return": "void", "signature": "void clearDomainMarkers(int index)", "full_signature": "public void clearDomainMarkers(int index)", "class_method_signature": "XYPlot.clearDomainMarkers(int index)", "testcase": false, "constructor": false}, {"identifier": "addDomainMarker", "parameters": "(int index, Marker marker, Layer layer)", "modifiers": "public", "return": "void", "signature": "void addDomainMarker(int index, Marker marker, Layer layer)", "full_signature": "public void addDomainMarker(int index, Marker marker, Layer layer)", "class_method_signature": "XYPlot.addDomainMarker(int index, Marker marker, Layer layer)", "testcase": false, "constructor": false}, {"identifier": "addDomainMarker", "parameters": "(int index, Marker marker, Layer layer,\n            boolean notify)", "modifiers": "public", "return": "void", "signature": "void addDomainMarker(int index, Marker marker, Layer layer,\n            boolean notify)", "full_signature": "public void addDomainMarker(int index, Marker marker, Layer layer,\n            boolean notify)", "class_method_signature": "XYPlot.addDomainMarker(int index, Marker marker, Layer layer,\n            boolean notify)", "testcase": false, "constructor": false}, {"identifier": "removeDomainMarker", "parameters": "(Marker marker)", "modifiers": "public", "return": "boolean", "signature": "boolean removeDomainMarker(Marker marker)", "full_signature": "public boolean removeDomainMarker(Marker marker)", "class_method_signature": "XYPlot.removeDomainMarker(Marker marker)", "testcase": false, "constructor": false}, {"identifier": "removeDomainMarker", "parameters": "(Marker marker, Layer layer)", "modifiers": "public", "return": "boolean", "signature": "boolean removeDomainMarker(Marker marker, Layer layer)", "full_signature": "public boolean removeDomainMarker(Marker marker, Layer layer)", "class_method_signature": "XYPlot.removeDomainMarker(Marker marker, Layer layer)", "testcase": false, "constructor": false}, {"identifier": "removeDomainMarker", "parameters": "(int index, Marker marker, Layer layer)", "modifiers": "public", "return": "boolean", "signature": "boolean removeDomainMarker(int index, Marker marker, Layer layer)", "full_signature": "public boolean removeDomainMarker(int index, Marker marker, Layer layer)", "class_method_signature": "XYPlot.removeDomainMarker(int index, Marker marker, Layer layer)", "testcase": false, "constructor": false}, {"identifier": "removeDomainMarker", "parameters": "(int index, Marker marker, Layer layer,\n            boolean notify)", "modifiers": "public", "return": "boolean", "signature": "boolean removeDomainMarker(int index, Marker marker, Layer layer,\n            boolean notify)", "full_signature": "public boolean removeDomainMarker(int index, Marker marker, Layer layer,\n            boolean notify)", "class_method_signature": "XYPlot.removeDomainMarker(int index, Marker marker, Layer layer,\n            boolean notify)", "testcase": false, "constructor": false}, {"identifier": "addRangeMarker", "parameters": "(Marker marker)", "modifiers": "public", "return": "void", "signature": "void addRangeMarker(Marker marker)", "full_signature": "public void addRangeMarker(Marker marker)", "class_method_signature": "XYPlot.addRangeMarker(Marker marker)", "testcase": false, "constructor": false}, {"identifier": "addRangeMarker", "parameters": "(Marker marker, Layer layer)", "modifiers": "public", "return": "void", "signature": "void addRangeMarker(Marker marker, Layer layer)", "full_signature": "public void addRangeMarker(Marker marker, Layer layer)", "class_method_signature": "XYPlot.addRangeMarker(Marker marker, Layer layer)", "testcase": false, "constructor": false}, {"identifier": "clearRangeMarkers", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearRangeMarkers()", "full_signature": "public void clearRangeMarkers()", "class_method_signature": "XYPlot.clearRangeMarkers()", "testcase": false, "constructor": false}, {"identifier": "addRangeMarker", "parameters": "(int index, Marker marker, Layer layer)", "modifiers": "public", "return": "void", "signature": "void addRangeMarker(int index, Marker marker, Layer layer)", "full_signature": "public void addRangeMarker(int index, Marker marker, Layer layer)", "class_method_signature": "XYPlot.addRangeMarker(int index, Marker marker, Layer layer)", "testcase": false, "constructor": false}, {"identifier": "addRangeMarker", "parameters": "(int index, Marker marker, Layer layer,\n            boolean notify)", "modifiers": "public", "return": "void", "signature": "void addRangeMarker(int index, Marker marker, Layer layer,\n            boolean notify)", "full_signature": "public void addRangeMarker(int index, Marker marker, Layer layer,\n            boolean notify)", "class_method_signature": "XYPlot.addRangeMarker(int index, Marker marker, Layer layer,\n            boolean notify)", "testcase": false, "constructor": false}, {"identifier": "clearRangeMarkers", "parameters": "(int index)", "modifiers": "public", "return": "void", "signature": "void clearRangeMarkers(int index)", "full_signature": "public void clearRangeMarkers(int index)", "class_method_signature": "XYPlot.clearRangeMarkers(int index)", "testcase": false, "constructor": false}, {"identifier": "removeRangeMarker", "parameters": "(Marker marker)", "modifiers": "public", "return": "boolean", "signature": "boolean removeRangeMarker(Marker marker)", "full_signature": "public boolean removeRangeMarker(Marker marker)", "class_method_signature": "XYPlot.removeRangeMarker(Marker marker)", "testcase": false, "constructor": false}, {"identifier": "removeRangeMarker", "parameters": "(Marker marker, Layer layer)", "modifiers": "public", "return": "boolean", "signature": "boolean removeRangeMarker(Marker marker, Layer layer)", "full_signature": "public boolean removeRangeMarker(Marker marker, Layer layer)", "class_method_signature": "XYPlot.removeRangeMarker(Marker marker, Layer layer)", "testcase": false, "constructor": false}, {"identifier": "removeRangeMarker", "parameters": "(int index, Marker marker, Layer layer)", "modifiers": "public", "return": "boolean", "signature": "boolean removeRangeMarker(int index, Marker marker, Layer layer)", "full_signature": "public boolean removeRangeMarker(int index, Marker marker, Layer layer)", "class_method_signature": "XYPlot.removeRangeMarker(int index, Marker marker, Layer layer)", "testcase": false, "constructor": false}, {"identifier": "removeRangeMarker", "parameters": "(int index, Marker marker, Layer layer,\n            boolean notify)", "modifiers": "public", "return": "boolean", "signature": "boolean removeRangeMarker(int index, Marker marker, Layer layer,\n            boolean notify)", "full_signature": "public boolean removeRangeMarker(int index, Marker marker, Layer layer,\n            boolean notify)", "class_method_signature": "XYPlot.removeRangeMarker(int index, Marker marker, Layer layer,\n            boolean notify)", "testcase": false, "constructor": false}, {"identifier": "addAnnotation", "parameters": "(XYAnnotation annotation)", "modifiers": "public", "return": "void", "signature": "void addAnnotation(XYAnnotation annotation)", "full_signature": "public void addAnnotation(XYAnnotation annotation)", "class_method_signature": "XYPlot.addAnnotation(XYAnnotation annotation)", "testcase": false, "constructor": false}, {"identifier": "addAnnotation", "parameters": "(XYAnnotation annotation, boolean notify)", "modifiers": "public", "return": "void", "signature": "void addAnnotation(XYAnnotation annotation, boolean notify)", "full_signature": "public void addAnnotation(XYAnnotation annotation, boolean notify)", "class_method_signature": "XYPlot.addAnnotation(XYAnnotation annotation, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "removeAnnotation", "parameters": "(XYAnnotation annotation)", "modifiers": "public", "return": "boolean", "signature": "boolean removeAnnotation(XYAnnotation annotation)", "full_signature": "public boolean removeAnnotation(XYAnnotation annotation)", "class_method_signature": "XYPlot.removeAnnotation(XYAnnotation annotation)", "testcase": false, "constructor": false}, {"identifier": "removeAnnotation", "parameters": "(XYAnnotation annotation, boolean notify)", "modifiers": "public", "return": "boolean", "signature": "boolean removeAnnotation(XYAnnotation annotation, boolean notify)", "full_signature": "public boolean removeAnnotation(XYAnnotation annotation, boolean notify)", "class_method_signature": "XYPlot.removeAnnotation(XYAnnotation annotation, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getAnnotations", "parameters": "()", "modifiers": "public", "return": "List", "signature": "List getAnnotations()", "full_signature": "public List getAnnotations()", "class_method_signature": "XYPlot.getAnnotations()", "testcase": false, "constructor": false}, {"identifier": "clearAnnotations", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearAnnotations()", "full_signature": "public void clearAnnotations()", "class_method_signature": "XYPlot.clearAnnotations()", "testcase": false, "constructor": false}, {"identifier": "getShadowGenerator", "parameters": "()", "modifiers": "public", "return": "ShadowGenerator", "signature": "ShadowGenerator getShadowGenerator()", "full_signature": "public ShadowGenerator getShadowGenerator()", "class_method_signature": "XYPlot.getShadowGenerator()", "testcase": false, "constructor": false}, {"identifier": "setShadowGenerator", "parameters": "(ShadowGenerator generator)", "modifiers": "public", "return": "void", "signature": "void setShadowGenerator(ShadowGenerator generator)", "full_signature": "public void setShadowGenerator(ShadowGenerator generator)", "class_method_signature": "XYPlot.setShadowGenerator(ShadowGenerator generator)", "testcase": false, "constructor": false}, {"identifier": "calculateAxisSpace", "parameters": "(Graphics2D g2,\n                                           Rectangle2D plotArea)", "modifiers": "protected", "return": "AxisSpace", "signature": "AxisSpace calculateAxisSpace(Graphics2D g2,\n                                           Rectangle2D plotArea)", "full_signature": "protected AxisSpace calculateAxisSpace(Graphics2D g2,\n                                           Rectangle2D plotArea)", "class_method_signature": "XYPlot.calculateAxisSpace(Graphics2D g2,\n                                           Rectangle2D plotArea)", "testcase": false, "constructor": false}, {"identifier": "calculateDomainAxisSpace", "parameters": "(Graphics2D g2,\n                                                 Rectangle2D plotArea,\n                                                 AxisSpace space)", "modifiers": "protected", "return": "AxisSpace", "signature": "AxisSpace calculateDomainAxisSpace(Graphics2D g2,\n                                                 Rectangle2D plotArea,\n                                                 AxisSpace space)", "full_signature": "protected AxisSpace calculateDomainAxisSpace(Graphics2D g2,\n                                                 Rectangle2D plotArea,\n                                                 AxisSpace space)", "class_method_signature": "XYPlot.calculateDomainAxisSpace(Graphics2D g2,\n                                                 Rectangle2D plotArea,\n                                                 AxisSpace space)", "testcase": false, "constructor": false}, {"identifier": "calculateRangeAxisSpace", "parameters": "(Graphics2D g2,\n                                                Rectangle2D plotArea,\n                                                AxisSpace space)", "modifiers": "protected", "return": "AxisSpace", "signature": "AxisSpace calculateRangeAxisSpace(Graphics2D g2,\n                                                Rectangle2D plotArea,\n                                                AxisSpace space)", "full_signature": "protected AxisSpace calculateRangeAxisSpace(Graphics2D g2,\n                                                Rectangle2D plotArea,\n                                                AxisSpace space)", "class_method_signature": "XYPlot.calculateRangeAxisSpace(Graphics2D g2,\n                                                Rectangle2D plotArea,\n                                                AxisSpace space)", "testcase": false, "constructor": false}, {"identifier": "integerise", "parameters": "(Rectangle2D rect)", "modifiers": "private", "return": "Rectangle", "signature": "Rectangle integerise(Rectangle2D rect)", "full_signature": "private Rectangle integerise(Rectangle2D rect)", "class_method_signature": "XYPlot.integerise(Rectangle2D rect)", "testcase": false, "constructor": false}, {"identifier": "draw", "parameters": "(Graphics2D g2, Rectangle2D area, Point2D anchor,\n            PlotState parentState, PlotRenderingInfo info)", "modifiers": "public", "return": "void", "signature": "void draw(Graphics2D g2, Rectangle2D area, Point2D anchor,\n            PlotState parentState, PlotRenderingInfo info)", "full_signature": "public void draw(Graphics2D g2, Rectangle2D area, Point2D anchor,\n            PlotState parentState, PlotRenderingInfo info)", "class_method_signature": "XYPlot.draw(Graphics2D g2, Rectangle2D area, Point2D anchor,\n            PlotState parentState, PlotRenderingInfo info)", "testcase": false, "constructor": false}, {"identifier": "drawBackground", "parameters": "(Graphics2D g2, Rectangle2D area)", "modifiers": "public", "return": "void", "signature": "void drawBackground(Graphics2D g2, Rectangle2D area)", "full_signature": "public void drawBackground(Graphics2D g2, Rectangle2D area)", "class_method_signature": "XYPlot.drawBackground(Graphics2D g2, Rectangle2D area)", "testcase": false, "constructor": false}, {"identifier": "drawQuadrants", "parameters": "(Graphics2D g2, Rectangle2D area)", "modifiers": "protected", "return": "void", "signature": "void drawQuadrants(Graphics2D g2, Rectangle2D area)", "full_signature": "protected void drawQuadrants(Graphics2D g2, Rectangle2D area)", "class_method_signature": "XYPlot.drawQuadrants(Graphics2D g2, Rectangle2D area)", "testcase": false, "constructor": false}, {"identifier": "drawDomainTickBands", "parameters": "(Graphics2D g2, Rectangle2D dataArea,\n                                    List ticks)", "modifiers": "public", "return": "void", "signature": "void drawDomainTickBands(Graphics2D g2, Rectangle2D dataArea,\n                                    List ticks)", "full_signature": "public void drawDomainTickBands(Graphics2D g2, Rectangle2D dataArea,\n                                    List ticks)", "class_method_signature": "XYPlot.drawDomainTickBands(Graphics2D g2, Rectangle2D dataArea,\n                                    List ticks)", "testcase": false, "constructor": false}, {"identifier": "drawRangeTickBands", "parameters": "(Graphics2D g2, Rectangle2D dataArea,\n                                   List ticks)", "modifiers": "public", "return": "void", "signature": "void drawRangeTickBands(Graphics2D g2, Rectangle2D dataArea,\n                                   List ticks)", "full_signature": "public void drawRangeTickBands(Graphics2D g2, Rectangle2D dataArea,\n                                   List ticks)", "class_method_signature": "XYPlot.drawRangeTickBands(Graphics2D g2, Rectangle2D dataArea,\n                                   List ticks)", "testcase": false, "constructor": false}, {"identifier": "drawAxes", "parameters": "(Graphics2D g2,\n                           Rectangle2D plotArea,\n                           Rectangle2D dataArea,\n                           PlotRenderingInfo plotState)", "modifiers": "protected", "return": "Map", "signature": "Map drawAxes(Graphics2D g2,\n                           Rectangle2D plotArea,\n                           Rectangle2D dataArea,\n                           PlotRenderingInfo plotState)", "full_signature": "protected Map drawAxes(Graphics2D g2,\n                           Rectangle2D plotArea,\n                           Rectangle2D dataArea,\n                           PlotRenderingInfo plotState)", "class_method_signature": "XYPlot.drawAxes(Graphics2D g2,\n                           Rectangle2D plotArea,\n                           Rectangle2D dataArea,\n                           PlotRenderingInfo plotState)", "testcase": false, "constructor": false}, {"identifier": "render", "parameters": "(Graphics2D g2, Rectangle2D dataArea, int index,\n            PlotRenderingInfo info, CrosshairState crosshairState)", "modifiers": "public", "return": "boolean", "signature": "boolean render(Graphics2D g2, Rectangle2D dataArea, int index,\n            PlotRenderingInfo info, CrosshairState crosshairState)", "full_signature": "public boolean render(Graphics2D g2, Rectangle2D dataArea, int index,\n            PlotRenderingInfo info, CrosshairState crosshairState)", "class_method_signature": "XYPlot.render(Graphics2D g2, Rectangle2D dataArea, int index,\n            PlotRenderingInfo info, CrosshairState crosshairState)", "testcase": false, "constructor": false}, {"identifier": "getDomainAxisForDataset", "parameters": "(int index)", "modifiers": "public", "return": "ValueAxis", "signature": "ValueAxis getDomainAxisForDataset(int index)", "full_signature": "public ValueAxis getDomainAxisForDataset(int index)", "class_method_signature": "XYPlot.getDomainAxisForDataset(int index)", "testcase": false, "constructor": false}, {"identifier": "getRangeAxisForDataset", "parameters": "(int index)", "modifiers": "public", "return": "ValueAxis", "signature": "ValueAxis getRangeAxisForDataset(int index)", "full_signature": "public ValueAxis getRangeAxisForDataset(int index)", "class_method_signature": "XYPlot.getRangeAxisForDataset(int index)", "testcase": false, "constructor": false}, {"identifier": "drawDomainGridlines", "parameters": "(Graphics2D g2, Rectangle2D dataArea,\n                                       List ticks)", "modifiers": "protected", "return": "void", "signature": "void drawDomainGridlines(Graphics2D g2, Rectangle2D dataArea,\n                                       List ticks)", "full_signature": "protected void drawDomainGridlines(Graphics2D g2, Rectangle2D dataArea,\n                                       List ticks)", "class_method_signature": "XYPlot.drawDomainGridlines(Graphics2D g2, Rectangle2D dataArea,\n                                       List ticks)", "testcase": false, "constructor": false}, {"identifier": "drawRangeGridlines", "parameters": "(Graphics2D g2, Rectangle2D area,\n                                      List ticks)", "modifiers": "protected", "return": "void", "signature": "void drawRangeGridlines(Graphics2D g2, Rectangle2D area,\n                                      List ticks)", "full_signature": "protected void drawRangeGridlines(Graphics2D g2, Rectangle2D area,\n                                      List ticks)", "class_method_signature": "XYPlot.drawRangeGridlines(Graphics2D g2, Rectangle2D area,\n                                      List ticks)", "testcase": false, "constructor": false}, {"identifier": "drawZeroDomainBaseline", "parameters": "(Graphics2D g2, Rectangle2D area)", "modifiers": "protected", "return": "void", "signature": "void drawZeroDomainBaseline(Graphics2D g2, Rectangle2D area)", "full_signature": "protected void drawZeroDomainBaseline(Graphics2D g2, Rectangle2D area)", "class_method_signature": "XYPlot.drawZeroDomainBaseline(Graphics2D g2, Rectangle2D area)", "testcase": false, "constructor": false}, {"identifier": "drawZeroRangeBaseline", "parameters": "(Graphics2D g2, Rectangle2D area)", "modifiers": "protected", "return": "void", "signature": "void drawZeroRangeBaseline(Graphics2D g2, Rectangle2D area)", "full_signature": "protected void drawZeroRangeBaseline(Graphics2D g2, Rectangle2D area)", "class_method_signature": "XYPlot.drawZeroRangeBaseline(Graphics2D g2, Rectangle2D area)", "testcase": false, "constructor": false}, {"identifier": "drawAnnotations", "parameters": "(Graphics2D g2,\n                                Rectangle2D dataArea,\n                                PlotRenderingInfo info)", "modifiers": "public", "return": "void", "signature": "void drawAnnotations(Graphics2D g2,\n                                Rectangle2D dataArea,\n                                PlotRenderingInfo info)", "full_signature": "public void drawAnnotations(Graphics2D g2,\n                                Rectangle2D dataArea,\n                                PlotRenderingInfo info)", "class_method_signature": "XYPlot.drawAnnotations(Graphics2D g2,\n                                Rectangle2D dataArea,\n                                PlotRenderingInfo info)", "testcase": false, "constructor": false}, {"identifier": "drawDomainMarkers", "parameters": "(Graphics2D g2, Rectangle2D dataArea,\n                                     int index, Layer layer)", "modifiers": "protected", "return": "void", "signature": "void drawDomainMarkers(Graphics2D g2, Rectangle2D dataArea,\n                                     int index, Layer layer)", "full_signature": "protected void drawDomainMarkers(Graphics2D g2, Rectangle2D dataArea,\n                                     int index, Layer layer)", "class_method_signature": "XYPlot.drawDomainMarkers(Graphics2D g2, Rectangle2D dataArea,\n                                     int index, Layer layer)", "testcase": false, "constructor": false}, {"identifier": "drawRangeMarkers", "parameters": "(Graphics2D g2, Rectangle2D dataArea,\n                                    int index, Layer layer)", "modifiers": "protected", "return": "void", "signature": "void drawRangeMarkers(Graphics2D g2, Rectangle2D dataArea,\n                                    int index, Layer layer)", "full_signature": "protected void drawRangeMarkers(Graphics2D g2, Rectangle2D dataArea,\n                                    int index, Layer layer)", "class_method_signature": "XYPlot.drawRangeMarkers(Graphics2D g2, Rectangle2D dataArea,\n                                    int index, Layer layer)", "testcase": false, "constructor": false}, {"identifier": "getDomainMarkers", "parameters": "(Layer layer)", "modifiers": "public", "return": "Collection", "signature": "Collection getDomainMarkers(Layer layer)", "full_signature": "public Collection getDomainMarkers(Layer layer)", "class_method_signature": "XYPlot.getDomainMarkers(Layer layer)", "testcase": false, "constructor": false}, {"identifier": "getRangeMarkers", "parameters": "(Layer layer)", "modifiers": "public", "return": "Collection", "signature": "Collection getRangeMarkers(Layer layer)", "full_signature": "public Collection getRangeMarkers(Layer layer)", "class_method_signature": "XYPlot.getRangeMarkers(Layer layer)", "testcase": false, "constructor": false}, {"identifier": "getDomainMarkers", "parameters": "(int index, Layer layer)", "modifiers": "public", "return": "Collection", "signature": "Collection getDomainMarkers(int index, Layer layer)", "full_signature": "public Collection getDomainMarkers(int index, Layer layer)", "class_method_signature": "XYPlot.getDomainMarkers(int index, Layer layer)", "testcase": false, "constructor": false}, {"identifier": "getRangeMarkers", "parameters": "(int index, Layer layer)", "modifiers": "public", "return": "Collection", "signature": "Collection getRangeMarkers(int index, Layer layer)", "full_signature": "public Collection getRangeMarkers(int index, Layer layer)", "class_method_signature": "XYPlot.getRangeMarkers(int index, Layer layer)", "testcase": false, "constructor": false}, {"identifier": "drawHorizontalLine", "parameters": "(Graphics2D g2, Rectangle2D dataArea,\n                                      double value, Stroke stroke,\n                                      Paint paint)", "modifiers": "protected", "return": "void", "signature": "void drawHorizontalLine(Graphics2D g2, Rectangle2D dataArea,\n                                      double value, Stroke stroke,\n                                      Paint paint)", "full_signature": "protected void drawHorizontalLine(Graphics2D g2, Rectangle2D dataArea,\n                                      double value, Stroke stroke,\n                                      Paint paint)", "class_method_signature": "XYPlot.drawHorizontalLine(Graphics2D g2, Rectangle2D dataArea,\n                                      double value, Stroke stroke,\n                                      Paint paint)", "testcase": false, "constructor": false}, {"identifier": "drawDomainCrosshair", "parameters": "(Graphics2D g2, Rectangle2D dataArea,\n            PlotOrientation orientation, double value, ValueAxis axis,\n            Stroke stroke, Paint paint)", "modifiers": "protected", "return": "void", "signature": "void drawDomainCrosshair(Graphics2D g2, Rectangle2D dataArea,\n            PlotOrientation orientation, double value, ValueAxis axis,\n            Stroke stroke, Paint paint)", "full_signature": "protected void drawDomainCrosshair(Graphics2D g2, Rectangle2D dataArea,\n            PlotOrientation orientation, double value, ValueAxis axis,\n            Stroke stroke, Paint paint)", "class_method_signature": "XYPlot.drawDomainCrosshair(Graphics2D g2, Rectangle2D dataArea,\n            PlotOrientation orientation, double value, ValueAxis axis,\n            Stroke stroke, Paint paint)", "testcase": false, "constructor": false}, {"identifier": "drawVerticalLine", "parameters": "(Graphics2D g2, Rectangle2D dataArea,\n                                    double value, Stroke stroke, Paint paint)", "modifiers": "protected", "return": "void", "signature": "void drawVerticalLine(Graphics2D g2, Rectangle2D dataArea,\n                                    double value, Stroke stroke, Paint paint)", "full_signature": "protected void drawVerticalLine(Graphics2D g2, Rectangle2D dataArea,\n                                    double value, Stroke stroke, Paint paint)", "class_method_signature": "XYPlot.drawVerticalLine(Graphics2D g2, Rectangle2D dataArea,\n                                    double value, Stroke stroke, Paint paint)", "testcase": false, "constructor": false}, {"identifier": "drawRangeCrosshair", "parameters": "(Graphics2D g2, Rectangle2D dataArea,\n            PlotOrientation orientation, double value, ValueAxis axis,\n            Stroke stroke, Paint paint)", "modifiers": "protected", "return": "void", "signature": "void drawRangeCrosshair(Graphics2D g2, Rectangle2D dataArea,\n            PlotOrientation orientation, double value, ValueAxis axis,\n            Stroke stroke, Paint paint)", "full_signature": "protected void drawRangeCrosshair(Graphics2D g2, Rectangle2D dataArea,\n            PlotOrientation orientation, double value, ValueAxis axis,\n            Stroke stroke, Paint paint)", "class_method_signature": "XYPlot.drawRangeCrosshair(Graphics2D g2, Rectangle2D dataArea,\n            PlotOrientation orientation, double value, ValueAxis axis,\n            Stroke stroke, Paint paint)", "testcase": false, "constructor": false}, {"identifier": "handleClick", "parameters": "(int x, int y, PlotRenderingInfo info)", "modifiers": "public", "return": "void", "signature": "void handleClick(int x, int y, PlotRenderingInfo info)", "full_signature": "public void handleClick(int x, int y, PlotRenderingInfo info)", "class_method_signature": "XYPlot.handleClick(int x, int y, PlotRenderingInfo info)", "testcase": false, "constructor": false}, {"identifier": "getDatasetsMappedToDomainAxis", "parameters": "(Integer axisIndex)", "modifiers": "private", "return": "List", "signature": "List getDatasetsMappedToDomainAxis(Integer axisIndex)", "full_signature": "private List getDatasetsMappedToDomainAxis(Integer axisIndex)", "class_method_signature": "XYPlot.getDatasetsMappedToDomainAxis(Integer axisIndex)", "testcase": false, "constructor": false}, {"identifier": "getDatasetsMappedToRangeAxis", "parameters": "(Integer axisIndex)", "modifiers": "private", "return": "List", "signature": "List getDatasetsMappedToRangeAxis(Integer axisIndex)", "full_signature": "private List getDatasetsMappedToRangeAxis(Integer axisIndex)", "class_method_signature": "XYPlot.getDatasetsMappedToRangeAxis(Integer axisIndex)", "testcase": false, "constructor": false}, {"identifier": "getDomainAxisIndex", "parameters": "(ValueAxis axis)", "modifiers": "public", "return": "int", "signature": "int getDomainAxisIndex(ValueAxis axis)", "full_signature": "public int getDomainAxisIndex(ValueAxis axis)", "class_method_signature": "XYPlot.getDomainAxisIndex(ValueAxis axis)", "testcase": false, "constructor": false}, {"identifier": "getRangeAxisIndex", "parameters": "(ValueAxis axis)", "modifiers": "public", "return": "int", "signature": "int getRangeAxisIndex(ValueAxis axis)", "full_signature": "public int getRangeAxisIndex(ValueAxis axis)", "class_method_signature": "XYPlot.getRangeAxisIndex(ValueAxis axis)", "testcase": false, "constructor": false}, {"identifier": "getDataRange", "parameters": "(ValueAxis axis)", "modifiers": "public", "return": "Range", "signature": "Range getDataRange(ValueAxis axis)", "full_signature": "public Range getDataRange(ValueAxis axis)", "class_method_signature": "XYPlot.getDataRange(ValueAxis axis)", "testcase": false, "constructor": false}, {"identifier": "annotationChanged", "parameters": "(AnnotationChangeEvent event)", "modifiers": "public", "return": "void", "signature": "void annotationChanged(AnnotationChangeEvent event)", "full_signature": "public void annotationChanged(AnnotationChangeEvent event)", "class_method_signature": "XYPlot.annotationChanged(AnnotationChangeEvent event)", "testcase": false, "constructor": false}, {"identifier": "datasetChanged", "parameters": "(DatasetChangeEvent event)", "modifiers": "public", "return": "void", "signature": "void datasetChanged(DatasetChangeEvent event)", "full_signature": "public void datasetChanged(DatasetChangeEvent event)", "class_method_signature": "XYPlot.datasetChanged(DatasetChangeEvent event)", "testcase": false, "constructor": false}, {"identifier": "rendererChanged", "parameters": "(RendererChangeEvent event)", "modifiers": "public", "return": "void", "signature": "void rendererChanged(RendererChangeEvent event)", "full_signature": "public void rendererChanged(RendererChangeEvent event)", "class_method_signature": "XYPlot.rendererChanged(RendererChangeEvent event)", "testcase": false, "constructor": false}, {"identifier": "isDomainCrosshairVisible", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDomainCrosshairVisible()", "full_signature": "public boolean isDomainCrosshairVisible()", "class_method_signature": "XYPlot.isDomainCrosshairVisible()", "testcase": false, "constructor": false}, {"identifier": "setDomainCrosshairVisible", "parameters": "(boolean flag)", "modifiers": "public", "return": "void", "signature": "void setDomainCrosshairVisible(boolean flag)", "full_signature": "public void setDomainCrosshairVisible(boolean flag)", "class_method_signature": "XYPlot.setDomainCrosshairVisible(boolean flag)", "testcase": false, "constructor": false}, {"identifier": "isDomainCrosshairLockedOnData", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDomainCrosshairLockedOnData()", "full_signature": "public boolean isDomainCrosshairLockedOnData()", "class_method_signature": "XYPlot.isDomainCrosshairLockedOnData()", "testcase": false, "constructor": false}, {"identifier": "setDomainCrosshairLockedOnData", "parameters": "(boolean flag)", "modifiers": "public", "return": "void", "signature": "void setDomainCrosshairLockedOnData(boolean flag)", "full_signature": "public void setDomainCrosshairLockedOnData(boolean flag)", "class_method_signature": "XYPlot.setDomainCrosshairLockedOnData(boolean flag)", "testcase": false, "constructor": false}, {"identifier": "getDomainCrosshairValue", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getDomainCrosshairValue()", "full_signature": "public double getDomainCrosshairValue()", "class_method_signature": "XYPlot.getDomainCrosshairValue()", "testcase": false, "constructor": false}, {"identifier": "setDomainCrosshairValue", "parameters": "(double value)", "modifiers": "public", "return": "void", "signature": "void setDomainCrosshairValue(double value)", "full_signature": "public void setDomainCrosshairValue(double value)", "class_method_signature": "XYPlot.setDomainCrosshairValue(double value)", "testcase": false, "constructor": false}, {"identifier": "setDomainCrosshairValue", "parameters": "(double value, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setDomainCrosshairValue(double value, boolean notify)", "full_signature": "public void setDomainCrosshairValue(double value, boolean notify)", "class_method_signature": "XYPlot.setDomainCrosshairValue(double value, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getDomainCrosshairStroke", "parameters": "()", "modifiers": "public", "return": "Stroke", "signature": "Stroke getDomainCrosshairStroke()", "full_signature": "public Stroke getDomainCrosshairStroke()", "class_method_signature": "XYPlot.getDomainCrosshairStroke()", "testcase": false, "constructor": false}, {"identifier": "setDomainCrosshairStroke", "parameters": "(Stroke stroke)", "modifiers": "public", "return": "void", "signature": "void setDomainCrosshairStroke(Stroke stroke)", "full_signature": "public void setDomainCrosshairStroke(Stroke stroke)", "class_method_signature": "XYPlot.setDomainCrosshairStroke(Stroke stroke)", "testcase": false, "constructor": false}, {"identifier": "getDomainCrosshairPaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getDomainCrosshairPaint()", "full_signature": "public Paint getDomainCrosshairPaint()", "class_method_signature": "XYPlot.getDomainCrosshairPaint()", "testcase": false, "constructor": false}, {"identifier": "setDomainCrosshairPaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setDomainCrosshairPaint(Paint paint)", "full_signature": "public void setDomainCrosshairPaint(Paint paint)", "class_method_signature": "XYPlot.setDomainCrosshairPaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "isRangeCrosshairVisible", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRangeCrosshairVisible()", "full_signature": "public boolean isRangeCrosshairVisible()", "class_method_signature": "XYPlot.isRangeCrosshairVisible()", "testcase": false, "constructor": false}, {"identifier": "setRangeCrosshairVisible", "parameters": "(boolean flag)", "modifiers": "public", "return": "void", "signature": "void setRangeCrosshairVisible(boolean flag)", "full_signature": "public void setRangeCrosshairVisible(boolean flag)", "class_method_signature": "XYPlot.setRangeCrosshairVisible(boolean flag)", "testcase": false, "constructor": false}, {"identifier": "isRangeCrosshairLockedOnData", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRangeCrosshairLockedOnData()", "full_signature": "public boolean isRangeCrosshairLockedOnData()", "class_method_signature": "XYPlot.isRangeCrosshairLockedOnData()", "testcase": false, "constructor": false}, {"identifier": "setRangeCrosshairLockedOnData", "parameters": "(boolean flag)", "modifiers": "public", "return": "void", "signature": "void setRangeCrosshairLockedOnData(boolean flag)", "full_signature": "public void setRangeCrosshairLockedOnData(boolean flag)", "class_method_signature": "XYPlot.setRangeCrosshairLockedOnData(boolean flag)", "testcase": false, "constructor": false}, {"identifier": "getRangeCrosshairValue", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getRangeCrosshairValue()", "full_signature": "public double getRangeCrosshairValue()", "class_method_signature": "XYPlot.getRangeCrosshairValue()", "testcase": false, "constructor": false}, {"identifier": "setRangeCrosshairValue", "parameters": "(double value)", "modifiers": "public", "return": "void", "signature": "void setRangeCrosshairValue(double value)", "full_signature": "public void setRangeCrosshairValue(double value)", "class_method_signature": "XYPlot.setRangeCrosshairValue(double value)", "testcase": false, "constructor": false}, {"identifier": "setRangeCrosshairValue", "parameters": "(double value, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setRangeCrosshairValue(double value, boolean notify)", "full_signature": "public void setRangeCrosshairValue(double value, boolean notify)", "class_method_signature": "XYPlot.setRangeCrosshairValue(double value, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getRangeCrosshairStroke", "parameters": "()", "modifiers": "public", "return": "Stroke", "signature": "Stroke getRangeCrosshairStroke()", "full_signature": "public Stroke getRangeCrosshairStroke()", "class_method_signature": "XYPlot.getRangeCrosshairStroke()", "testcase": false, "constructor": false}, {"identifier": "setRangeCrosshairStroke", "parameters": "(Stroke stroke)", "modifiers": "public", "return": "void", "signature": "void setRangeCrosshairStroke(Stroke stroke)", "full_signature": "public void setRangeCrosshairStroke(Stroke stroke)", "class_method_signature": "XYPlot.setRangeCrosshairStroke(Stroke stroke)", "testcase": false, "constructor": false}, {"identifier": "getRangeCrosshairPaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getRangeCrosshairPaint()", "full_signature": "public Paint getRangeCrosshairPaint()", "class_method_signature": "XYPlot.getRangeCrosshairPaint()", "testcase": false, "constructor": false}, {"identifier": "setRangeCrosshairPaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setRangeCrosshairPaint(Paint paint)", "full_signature": "public void setRangeCrosshairPaint(Paint paint)", "class_method_signature": "XYPlot.setRangeCrosshairPaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "getFixedDomainAxisSpace", "parameters": "()", "modifiers": "public", "return": "AxisSpace", "signature": "AxisSpace getFixedDomainAxisSpace()", "full_signature": "public AxisSpace getFixedDomainAxisSpace()", "class_method_signature": "XYPlot.getFixedDomainAxisSpace()", "testcase": false, "constructor": false}, {"identifier": "setFixedDomainAxisSpace", "parameters": "(AxisSpace space)", "modifiers": "public", "return": "void", "signature": "void setFixedDomainAxisSpace(AxisSpace space)", "full_signature": "public void setFixedDomainAxisSpace(AxisSpace space)", "class_method_signature": "XYPlot.setFixedDomainAxisSpace(AxisSpace space)", "testcase": false, "constructor": false}, {"identifier": "setFixedDomainAxisSpace", "parameters": "(AxisSpace space, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setFixedDomainAxisSpace(AxisSpace space, boolean notify)", "full_signature": "public void setFixedDomainAxisSpace(AxisSpace space, boolean notify)", "class_method_signature": "XYPlot.setFixedDomainAxisSpace(AxisSpace space, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getFixedRangeAxisSpace", "parameters": "()", "modifiers": "public", "return": "AxisSpace", "signature": "AxisSpace getFixedRangeAxisSpace()", "full_signature": "public AxisSpace getFixedRangeAxisSpace()", "class_method_signature": "XYPlot.getFixedRangeAxisSpace()", "testcase": false, "constructor": false}, {"identifier": "setFixedRangeAxisSpace", "parameters": "(AxisSpace space)", "modifiers": "public", "return": "void", "signature": "void setFixedRangeAxisSpace(AxisSpace space)", "full_signature": "public void setFixedRangeAxisSpace(AxisSpace space)", "class_method_signature": "XYPlot.setFixedRangeAxisSpace(AxisSpace space)", "testcase": false, "constructor": false}, {"identifier": "setFixedRangeAxisSpace", "parameters": "(AxisSpace space, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setFixedRangeAxisSpace(AxisSpace space, boolean notify)", "full_signature": "public void setFixedRangeAxisSpace(AxisSpace space, boolean notify)", "class_method_signature": "XYPlot.setFixedRangeAxisSpace(AxisSpace space, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "isDomainPannable", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDomainPannable()", "full_signature": "public boolean isDomainPannable()", "class_method_signature": "XYPlot.isDomainPannable()", "testcase": false, "constructor": false}, {"identifier": "setDomainPannable", "parameters": "(boolean pannable)", "modifiers": "public", "return": "void", "signature": "void setDomainPannable(boolean pannable)", "full_signature": "public void setDomainPannable(boolean pannable)", "class_method_signature": "XYPlot.setDomainPannable(boolean pannable)", "testcase": false, "constructor": false}, {"identifier": "isRangePannable", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRangePannable()", "full_signature": "public boolean isRangePannable()", "class_method_signature": "XYPlot.isRangePannable()", "testcase": false, "constructor": false}, {"identifier": "setRangePannable", "parameters": "(boolean pannable)", "modifiers": "public", "return": "void", "signature": "void setRangePannable(boolean pannable)", "full_signature": "public void setRangePannable(boolean pannable)", "class_method_signature": "XYPlot.setRangePannable(boolean pannable)", "testcase": false, "constructor": false}, {"identifier": "panDomainAxes", "parameters": "(double percent, PlotRenderingInfo info,\n            Point2D source)", "modifiers": "public", "return": "void", "signature": "void panDomainAxes(double percent, PlotRenderingInfo info,\n            Point2D source)", "full_signature": "public void panDomainAxes(double percent, PlotRenderingInfo info,\n            Point2D source)", "class_method_signature": "XYPlot.panDomainAxes(double percent, PlotRenderingInfo info,\n            Point2D source)", "testcase": false, "constructor": false}, {"identifier": "panRangeAxes", "parameters": "(double percent, PlotRenderingInfo info,\n            Point2D source)", "modifiers": "public", "return": "void", "signature": "void panRangeAxes(double percent, PlotRenderingInfo info,\n            Point2D source)", "full_signature": "public void panRangeAxes(double percent, PlotRenderingInfo info,\n            Point2D source)", "class_method_signature": "XYPlot.panRangeAxes(double percent, PlotRenderingInfo info,\n            Point2D source)", "testcase": false, "constructor": false}, {"identifier": "zoomDomainAxes", "parameters": "(double factor, PlotRenderingInfo info,\n                               Point2D source)", "modifiers": "public", "return": "void", "signature": "void zoomDomainAxes(double factor, PlotRenderingInfo info,\n                               Point2D source)", "full_signature": "public void zoomDomainAxes(double factor, PlotRenderingInfo info,\n                               Point2D source)", "class_method_signature": "XYPlot.zoomDomainAxes(double factor, PlotRenderingInfo info,\n                               Point2D source)", "testcase": false, "constructor": false}, {"identifier": "zoomDomainAxes", "parameters": "(double factor, PlotRenderingInfo info,\n                               Point2D source, boolean useAnchor)", "modifiers": "public", "return": "void", "signature": "void zoomDomainAxes(double factor, PlotRenderingInfo info,\n                               Point2D source, boolean useAnchor)", "full_signature": "public void zoomDomainAxes(double factor, PlotRenderingInfo info,\n                               Point2D source, boolean useAnchor)", "class_method_signature": "XYPlot.zoomDomainAxes(double factor, PlotRenderingInfo info,\n                               Point2D source, boolean useAnchor)", "testcase": false, "constructor": false}, {"identifier": "zoomDomainAxes", "parameters": "(double lowerPercent, double upperPercent,\n                               PlotRenderingInfo info, Point2D source)", "modifiers": "public", "return": "void", "signature": "void zoomDomainAxes(double lowerPercent, double upperPercent,\n                               PlotRenderingInfo info, Point2D source)", "full_signature": "public void zoomDomainAxes(double lowerPercent, double upperPercent,\n                               PlotRenderingInfo info, Point2D source)", "class_method_signature": "XYPlot.zoomDomainAxes(double lowerPercent, double upperPercent,\n                               PlotRenderingInfo info, Point2D source)", "testcase": false, "constructor": false}, {"identifier": "zoomRangeAxes", "parameters": "(double factor, PlotRenderingInfo info,\n                              Point2D source)", "modifiers": "public", "return": "void", "signature": "void zoomRangeAxes(double factor, PlotRenderingInfo info,\n                              Point2D source)", "full_signature": "public void zoomRangeAxes(double factor, PlotRenderingInfo info,\n                              Point2D source)", "class_method_signature": "XYPlot.zoomRangeAxes(double factor, PlotRenderingInfo info,\n                              Point2D source)", "testcase": false, "constructor": false}, {"identifier": "zoomRangeAxes", "parameters": "(double factor, PlotRenderingInfo info,\n                              Point2D source, boolean useAnchor)", "modifiers": "public", "return": "void", "signature": "void zoomRangeAxes(double factor, PlotRenderingInfo info,\n                              Point2D source, boolean useAnchor)", "full_signature": "public void zoomRangeAxes(double factor, PlotRenderingInfo info,\n                              Point2D source, boolean useAnchor)", "class_method_signature": "XYPlot.zoomRangeAxes(double factor, PlotRenderingInfo info,\n                              Point2D source, boolean useAnchor)", "testcase": false, "constructor": false}, {"identifier": "zoomRangeAxes", "parameters": "(double lowerPercent, double upperPercent,\n                              PlotRenderingInfo info, Point2D source)", "modifiers": "public", "return": "void", "signature": "void zoomRangeAxes(double lowerPercent, double upperPercent,\n                              PlotRenderingInfo info, Point2D source)", "full_signature": "public void zoomRangeAxes(double lowerPercent, double upperPercent,\n                              PlotRenderingInfo info, Point2D source)", "class_method_signature": "XYPlot.zoomRangeAxes(double lowerPercent, double upperPercent,\n                              PlotRenderingInfo info, Point2D source)", "testcase": false, "constructor": false}, {"identifier": "isDomainZoomable", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDomainZoomable()", "full_signature": "public boolean isDomainZoomable()", "class_method_signature": "XYPlot.isDomainZoomable()", "testcase": false, "constructor": false}, {"identifier": "isRangeZoomable", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRangeZoomable()", "full_signature": "public boolean isRangeZoomable()", "class_method_signature": "XYPlot.isRangeZoomable()", "testcase": false, "constructor": false}, {"identifier": "getSeriesCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSeriesCount()", "full_signature": "public int getSeriesCount()", "class_method_signature": "XYPlot.getSeriesCount()", "testcase": false, "constructor": false}, {"identifier": "getFixedLegendItems", "parameters": "()", "modifiers": "public", "return": "LegendItemCollection", "signature": "LegendItemCollection getFixedLegendItems()", "full_signature": "public LegendItemCollection getFixedLegendItems()", "class_method_signature": "XYPlot.getFixedLegendItems()", "testcase": false, "constructor": false}, {"identifier": "setFixedLegendItems", "parameters": "(LegendItemCollection items)", "modifiers": "public", "return": "void", "signature": "void setFixedLegendItems(LegendItemCollection items)", "full_signature": "public void setFixedLegendItems(LegendItemCollection items)", "class_method_signature": "XYPlot.setFixedLegendItems(LegendItemCollection items)", "testcase": false, "constructor": false}, {"identifier": "getLegendItems", "parameters": "()", "modifiers": "public", "return": "LegendItemCollection", "signature": "LegendItemCollection getLegendItems()", "full_signature": "public LegendItemCollection getLegendItems()", "class_method_signature": "XYPlot.getLegendItems()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "XYPlot.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object clone()", "full_signature": "public Object clone()", "class_method_signature": "XYPlot.clone()", "testcase": false, "constructor": false}, {"identifier": "writeObject", "parameters": "(ObjectOutputStream stream)", "modifiers": "private", "return": "void", "signature": "void writeObject(ObjectOutputStream stream)", "full_signature": "private void writeObject(ObjectOutputStream stream)", "class_method_signature": "XYPlot.writeObject(ObjectOutputStream stream)", "testcase": false, "constructor": false}, {"identifier": "readObject", "parameters": "(ObjectInputStream stream)", "modifiers": "private", "return": "void", "signature": "void readObject(ObjectInputStream stream)", "full_signature": "private void readObject(ObjectInputStream stream)", "class_method_signature": "XYPlot.readObject(ObjectInputStream stream)", "testcase": false, "constructor": false}, {"identifier": "canSelectByPoint", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean canSelectByPoint()", "full_signature": "public boolean canSelectByPoint()", "class_method_signature": "XYPlot.canSelectByPoint()", "testcase": false, "constructor": false}, {"identifier": "canSelectByRegion", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean canSelectByRegion()", "full_signature": "public boolean canSelectByRegion()", "class_method_signature": "XYPlot.canSelectByRegion()", "testcase": false, "constructor": false}, {"identifier": "select", "parameters": "(double xx, double yy, Rectangle2D dataArea,\n            RenderingSource source)", "modifiers": "public", "return": "void", "signature": "void select(double xx, double yy, Rectangle2D dataArea,\n            RenderingSource source)", "full_signature": "public void select(double xx, double yy, Rectangle2D dataArea,\n            RenderingSource source)", "class_method_signature": "XYPlot.select(double xx, double yy, Rectangle2D dataArea,\n            RenderingSource source)", "testcase": false, "constructor": false}, {"identifier": "select", "parameters": "(GeneralPath region, Rectangle2D dataArea,\n            RenderingSource source)", "modifiers": "public", "return": "void", "signature": "void select(GeneralPath region, Rectangle2D dataArea,\n            RenderingSource source)", "full_signature": "public void select(GeneralPath region, Rectangle2D dataArea,\n            RenderingSource source)", "class_method_signature": "XYPlot.select(GeneralPath region, Rectangle2D dataArea,\n            RenderingSource source)", "testcase": false, "constructor": false}, {"identifier": "findSelectionStateForDataset", "parameters": "(\n            XYDataset dataset, Object source)", "modifiers": "private", "return": "XYDatasetSelectionState", "signature": "XYDatasetSelectionState findSelectionStateForDataset(\n            XYDataset dataset, Object source)", "full_signature": "private XYDatasetSelectionState findSelectionStateForDataset(\n            XYDataset dataset, Object source)", "class_method_signature": "XYPlot.findSelectionStateForDataset(\n            XYDataset dataset, Object source)", "testcase": false, "constructor": false}, {"identifier": "convertToDataSpace", "parameters": "(GeneralPath path,\n            Rectangle2D dataArea, XYDataset dataset)", "modifiers": "private", "return": "GeneralPath", "signature": "GeneralPath convertToDataSpace(GeneralPath path,\n            Rectangle2D dataArea, XYDataset dataset)", "full_signature": "private GeneralPath convertToDataSpace(GeneralPath path,\n            Rectangle2D dataArea, XYDataset dataset)", "class_method_signature": "XYPlot.convertToDataSpace(GeneralPath path,\n            Rectangle2D dataArea, XYDataset dataset)", "testcase": false, "constructor": false}, {"identifier": "clearSelection", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearSelection()", "full_signature": "public void clearSelection()", "class_method_signature": "XYPlot.clearSelection()", "testcase": false, "constructor": false}], "file": "source/org/jfree/chart/plot/XYPlot.java"}, "focal_method": {"identifier": "removeDomainMarker", "parameters": "(Marker marker)", "modifiers": "public", "return": "boolean", "body": "public boolean removeDomainMarker(Marker marker) {\n        return removeDomainMarker(marker, Layer.FOREGROUND);\n    }", "signature": "boolean removeDomainMarker(Marker marker)", "full_signature": "public boolean removeDomainMarker(Marker marker)", "class_method_signature": "XYPlot.removeDomainMarker(Marker marker)", "testcase": false, "constructor": false, "invocations": ["removeDomainMarker"]}, "repository": {"repo_id": "Chart_1_buggy"}}