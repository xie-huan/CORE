{"test_class": {"identifier": "ImageTitleTests", "superclass": "extends TestCase", "interfaces": "", "fields": [{"original_string": "private static final double EPSILON = 0.00000001;", "modifier": "private static final", "type": "double", "declarator": "EPSILON = 0.00000001", "var_name": "EPSILON"}], "file": "tests/org/jfree/chart/title/junit/ImageTitleTests.java"}, "test_case": {"identifier": "testCloning", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testCloning() {\n        ImageTitle t1 = new ImageTitle(JFreeChart.INFO.getLogo());\n        ImageTitle t2 = null;\n        try {\n            t2 = (ImageTitle) t1.clone();\n        }\n        catch (CloneNotSupportedException e) {\n            e.printStackTrace();\n        }\n        assertTrue(t1 != t2);\n        assertTrue(t1.getClass() == t2.getClass());\n        assertTrue(t1.equals(t2));\n    }", "signature": "void testCloning()", "full_signature": "public void testCloning()", "class_method_signature": "ImageTitleTests.testCloning()", "testcase": true, "constructor": false, "invocations": ["getLogo", "clone", "printStackTrace", "assertTrue", "assertTrue", "getClass", "getClass", "assertTrue", "equals"]}, "focal_class": {"identifier": "ImageTitle", "superclass": "extends Title", "interfaces": "", "fields": [{"original_string": "private Image image;", "modifier": "private", "type": "Image", "declarator": "image", "var_name": "image"}], "methods": [{"identifier": "ImageTitle", "parameters": "(Image image)", "modifiers": "public", "return": "", "signature": " ImageTitle(Image image)", "full_signature": "public  ImageTitle(Image image)", "class_method_signature": "ImageTitle.ImageTitle(Image image)", "testcase": false, "constructor": true}, {"identifier": "ImageTitle", "parameters": "(Image image, RectangleEdge position,\n                      HorizontalAlignment horizontalAlignment,\n                      VerticalAlignment verticalAlignment)", "modifiers": "public", "return": "", "signature": " ImageTitle(Image image, RectangleEdge position,\n                      HorizontalAlignment horizontalAlignment,\n                      VerticalAlignment verticalAlignment)", "full_signature": "public  ImageTitle(Image image, RectangleEdge position,\n                      HorizontalAlignment horizontalAlignment,\n                      VerticalAlignment verticalAlignment)", "class_method_signature": "ImageTitle.ImageTitle(Image image, RectangleEdge position,\n                      HorizontalAlignment horizontalAlignment,\n                      VerticalAlignment verticalAlignment)", "testcase": false, "constructor": true}, {"identifier": "ImageTitle", "parameters": "(Image image, int height, int width,\n                      RectangleEdge position,\n                      HorizontalAlignment horizontalAlignment,\n                      VerticalAlignment verticalAlignment,\n                      RectangleInsets padding)", "modifiers": "public", "return": "", "signature": " ImageTitle(Image image, int height, int width,\n                      RectangleEdge position,\n                      HorizontalAlignment horizontalAlignment,\n                      VerticalAlignment verticalAlignment,\n                      RectangleInsets padding)", "full_signature": "public  ImageTitle(Image image, int height, int width,\n                      RectangleEdge position,\n                      HorizontalAlignment horizontalAlignment,\n                      VerticalAlignment verticalAlignment,\n                      RectangleInsets padding)", "class_method_signature": "ImageTitle.ImageTitle(Image image, int height, int width,\n                      RectangleEdge position,\n                      HorizontalAlignment horizontalAlignment,\n                      VerticalAlignment verticalAlignment,\n                      RectangleInsets padding)", "testcase": false, "constructor": true}, {"identifier": "getImage", "parameters": "()", "modifiers": "public", "return": "Image", "signature": "Image getImage()", "full_signature": "public Image getImage()", "class_method_signature": "ImageTitle.getImage()", "testcase": false, "constructor": false}, {"identifier": "setImage", "parameters": "(Image image)", "modifiers": "public", "return": "void", "signature": "void setImage(Image image)", "full_signature": "public void setImage(Image image)", "class_method_signature": "ImageTitle.setImage(Image image)", "testcase": false, "constructor": false}, {"identifier": "arrange", "parameters": "(Graphics2D g2, RectangleConstraint constraint)", "modifiers": "public", "return": "Size2D", "signature": "Size2D arrange(Graphics2D g2, RectangleConstraint constraint)", "full_signature": "public Size2D arrange(Graphics2D g2, RectangleConstraint constraint)", "class_method_signature": "ImageTitle.arrange(Graphics2D g2, RectangleConstraint constraint)", "testcase": false, "constructor": false}, {"identifier": "draw", "parameters": "(Graphics2D g2, Rectangle2D area)", "modifiers": "public", "return": "void", "signature": "void draw(Graphics2D g2, Rectangle2D area)", "full_signature": "public void draw(Graphics2D g2, Rectangle2D area)", "class_method_signature": "ImageTitle.draw(Graphics2D g2, Rectangle2D area)", "testcase": false, "constructor": false}, {"identifier": "drawHorizontal", "parameters": "(Graphics2D g2, Rectangle2D chartArea)", "modifiers": "protected", "return": "Size2D", "signature": "Size2D drawHorizontal(Graphics2D g2, Rectangle2D chartArea)", "full_signature": "protected Size2D drawHorizontal(Graphics2D g2, Rectangle2D chartArea)", "class_method_signature": "ImageTitle.drawHorizontal(Graphics2D g2, Rectangle2D chartArea)", "testcase": false, "constructor": false}, {"identifier": "drawVertical", "parameters": "(Graphics2D g2, Rectangle2D chartArea)", "modifiers": "protected", "return": "Size2D", "signature": "Size2D drawVertical(Graphics2D g2, Rectangle2D chartArea)", "full_signature": "protected Size2D drawVertical(Graphics2D g2, Rectangle2D chartArea)", "class_method_signature": "ImageTitle.drawVertical(Graphics2D g2, Rectangle2D chartArea)", "testcase": false, "constructor": false}, {"identifier": "draw", "parameters": "(Graphics2D g2, Rectangle2D area, Object params)", "modifiers": "public", "return": "Object", "signature": "Object draw(Graphics2D g2, Rectangle2D area, Object params)", "full_signature": "public Object draw(Graphics2D g2, Rectangle2D area, Object params)", "class_method_signature": "ImageTitle.draw(Graphics2D g2, Rectangle2D area, Object params)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "ImageTitle.equals(Object obj)", "testcase": false, "constructor": false}], "file": "source/org/jfree/chart/title/ImageTitle.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "body": "public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ImageTitle)) {\n            return false;\n        }\n        ImageTitle that = (ImageTitle) obj;\n        if (!ObjectUtilities.equal(this.image, that.image)) {\n            return false;\n        }\n        return super.equals(obj);\n    }", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "ImageTitle.equals(Object obj)", "testcase": false, "constructor": false, "invocations": ["equal", "equals"]}, "repository": {"repo_id": "Chart_1_buggy"}}