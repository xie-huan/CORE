{"test_class": {"identifier": "StatisticalLineAndShapeRendererTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/chart/renderer/category/junit/StatisticalLineAndShapeRendererTests.java"}, "test_case": {"identifier": "testCloning", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testCloning() {\n        StatisticalLineAndShapeRenderer r1\n                = new StatisticalLineAndShapeRenderer();\n        StatisticalLineAndShapeRenderer r2 = null;\n        try {\n            r2 = (StatisticalLineAndShapeRenderer) r1.clone();\n        }\n        catch (CloneNotSupportedException e) {\n            System.err.println(\"Failed to clone.\");\n        }\n        assertTrue(r1 != r2);\n        assertTrue(r1.getClass() == r2.getClass());\n        assertTrue(r1.equals(r2));\n    }", "signature": "void testCloning()", "full_signature": "public void testCloning()", "class_method_signature": "StatisticalLineAndShapeRendererTests.testCloning()", "testcase": true, "constructor": false, "invocations": ["clone", "println", "assertTrue", "assertTrue", "getClass", "getClass", "assertTrue", "equals"]}, "focal_class": {"identifier": "StatisticalLineAndShapeRenderer", "superclass": "extends LineAndShapeRenderer", "interfaces": "implements Cloneable, PublicCloneable, Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -3557517173697777579L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -3557517173697777579L", "var_name": "serialVersionUID"}, {"original_string": "private transient Paint errorIndicatorPaint;", "modifier": "private transient", "type": "Paint", "declarator": "errorIndicatorPaint", "var_name": "errorIndicatorPaint"}, {"original_string": "private transient Stroke errorIndicatorStroke;", "modifier": "private transient", "type": "Stroke", "declarator": "errorIndicatorStroke", "var_name": "errorIndicatorStroke"}], "methods": [{"identifier": "StatisticalLineAndShapeRenderer", "parameters": "()", "modifiers": "public", "return": "", "signature": " StatisticalLineAndShapeRenderer()", "full_signature": "public  StatisticalLineAndShapeRenderer()", "class_method_signature": "StatisticalLineAndShapeRenderer.StatisticalLineAndShapeRenderer()", "testcase": false, "constructor": true}, {"identifier": "StatisticalLineAndShapeRenderer", "parameters": "(boolean linesVisible,\n                                           boolean shapesVisible)", "modifiers": "public", "return": "", "signature": " StatisticalLineAndShapeRenderer(boolean linesVisible,\n                                           boolean shapesVisible)", "full_signature": "public  StatisticalLineAndShapeRenderer(boolean linesVisible,\n                                           boolean shapesVisible)", "class_method_signature": "StatisticalLineAndShapeRenderer.StatisticalLineAndShapeRenderer(boolean linesVisible,\n                                           boolean shapesVisible)", "testcase": false, "constructor": true}, {"identifier": "getErrorIndicatorPaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getErrorIndicatorPaint()", "full_signature": "public Paint getErrorIndicatorPaint()", "class_method_signature": "StatisticalLineAndShapeRenderer.getErrorIndicatorPaint()", "testcase": false, "constructor": false}, {"identifier": "setErrorIndicatorPaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setErrorIndicatorPaint(Paint paint)", "full_signature": "public void setErrorIndicatorPaint(Paint paint)", "class_method_signature": "StatisticalLineAndShapeRenderer.setErrorIndicatorPaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "getErrorIndicatorStroke", "parameters": "()", "modifiers": "public", "return": "Stroke", "signature": "Stroke getErrorIndicatorStroke()", "full_signature": "public Stroke getErrorIndicatorStroke()", "class_method_signature": "StatisticalLineAndShapeRenderer.getErrorIndicatorStroke()", "testcase": false, "constructor": false}, {"identifier": "setErrorIndicatorStroke", "parameters": "(Stroke stroke)", "modifiers": "public", "return": "void", "signature": "void setErrorIndicatorStroke(Stroke stroke)", "full_signature": "public void setErrorIndicatorStroke(Stroke stroke)", "class_method_signature": "StatisticalLineAndShapeRenderer.setErrorIndicatorStroke(Stroke stroke)", "testcase": false, "constructor": false}, {"identifier": "findRangeBounds", "parameters": "(CategoryDataset dataset)", "modifiers": "public", "return": "Range", "signature": "Range findRangeBounds(CategoryDataset dataset)", "full_signature": "public Range findRangeBounds(CategoryDataset dataset)", "class_method_signature": "StatisticalLineAndShapeRenderer.findRangeBounds(CategoryDataset dataset)", "testcase": false, "constructor": false}, {"identifier": "drawItem", "parameters": "(Graphics2D g2, CategoryItemRendererState state,\n            Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,\n            ValueAxis rangeAxis, CategoryDataset dataset, int row, int column,\n            boolean selected, int pass)", "modifiers": "public", "return": "void", "signature": "void drawItem(Graphics2D g2, CategoryItemRendererState state,\n            Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,\n            ValueAxis rangeAxis, CategoryDataset dataset, int row, int column,\n            boolean selected, int pass)", "full_signature": "public void drawItem(Graphics2D g2, CategoryItemRendererState state,\n            Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,\n            ValueAxis rangeAxis, CategoryDataset dataset, int row, int column,\n            boolean selected, int pass)", "class_method_signature": "StatisticalLineAndShapeRenderer.drawItem(Graphics2D g2, CategoryItemRendererState state,\n            Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,\n            ValueAxis rangeAxis, CategoryDataset dataset, int row, int column,\n            boolean selected, int pass)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "StatisticalLineAndShapeRenderer.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "StatisticalLineAndShapeRenderer.hashCode()", "testcase": false, "constructor": false}, {"identifier": "writeObject", "parameters": "(ObjectOutputStream stream)", "modifiers": "private", "return": "void", "signature": "void writeObject(ObjectOutputStream stream)", "full_signature": "private void writeObject(ObjectOutputStream stream)", "class_method_signature": "StatisticalLineAndShapeRenderer.writeObject(ObjectOutputStream stream)", "testcase": false, "constructor": false}, {"identifier": "readObject", "parameters": "(ObjectInputStream stream)", "modifiers": "private", "return": "void", "signature": "void readObject(ObjectInputStream stream)", "full_signature": "private void readObject(ObjectInputStream stream)", "class_method_signature": "StatisticalLineAndShapeRenderer.readObject(ObjectInputStream stream)", "testcase": false, "constructor": false}], "file": "source/org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "body": "public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof StatisticalLineAndShapeRenderer)) {\n            return false;\n        }\n        StatisticalLineAndShapeRenderer that\n                = (StatisticalLineAndShapeRenderer) obj;\n        if (!PaintUtilities.equal(this.errorIndicatorPaint,\n                that.errorIndicatorPaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.errorIndicatorStroke,\n                that.errorIndicatorStroke)) {\n            return false;\n        }\n        return super.equals(obj);\n    }", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "StatisticalLineAndShapeRenderer.equals(Object obj)", "testcase": false, "constructor": false, "invocations": ["equal", "equal", "equals"]}, "repository": {"repo_id": "Chart_1_buggy"}}