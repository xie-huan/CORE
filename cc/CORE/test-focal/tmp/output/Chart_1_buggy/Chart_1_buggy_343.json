{"test_class": {"identifier": "XYPolygonAnnotationTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/chart/annotations/junit/XYPolygonAnnotationTests.java"}, "test_case": {"identifier": "testHashCode", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testHashCode() {\n        Stroke stroke = new BasicStroke(2.0f);\n        XYPolygonAnnotation a1 = new XYPolygonAnnotation(new double[] {1.0,\n                2.0, 3.0, 4.0, 5.0, 6.0}, stroke, Color.red, Color.blue);\n        XYPolygonAnnotation a2 = new XYPolygonAnnotation(new double[] {1.0,\n                2.0, 3.0, 4.0, 5.0, 6.0}, stroke, Color.red, Color.blue);\n        assertTrue(a1.equals(a2));\n        int h1 = a1.hashCode();\n        int h2 = a2.hashCode();\n        assertEquals(h1, h2);\n    }", "signature": "void testHashCode()", "full_signature": "public void testHashCode()", "class_method_signature": "XYPolygonAnnotationTests.testHashCode()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "equals", "hashCode", "hashCode", "assertEquals"]}, "focal_class": {"identifier": "XYPolygonAnnotation", "superclass": "extends AbstractXYAnnotation", "interfaces": "implements Cloneable, PublicCloneable, Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -6984203651995900036L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -6984203651995900036L", "var_name": "serialVersionUID"}, {"original_string": "private double[] polygon;", "modifier": "private", "type": "double[]", "declarator": "polygon", "var_name": "polygon"}, {"original_string": "private transient Stroke stroke;", "modifier": "private transient", "type": "Stroke", "declarator": "stroke", "var_name": "stroke"}, {"original_string": "private transient Paint outlinePaint;", "modifier": "private transient", "type": "Paint", "declarator": "outlinePaint", "var_name": "outlinePaint"}, {"original_string": "private transient Paint fillPaint;", "modifier": "private transient", "type": "Paint", "declarator": "fillPaint", "var_name": "fillPaint"}], "methods": [{"identifier": "XYPolygonAnnotation", "parameters": "(double[] polygon)", "modifiers": "public", "return": "", "signature": " XYPolygonAnnotation(double[] polygon)", "full_signature": "public  XYPolygonAnnotation(double[] polygon)", "class_method_signature": "XYPolygonAnnotation.XYPolygonAnnotation(double[] polygon)", "testcase": false, "constructor": true}, {"identifier": "XYPolygonAnnotation", "parameters": "(double[] polygon,\n                               Stroke stroke, Paint outlinePaint)", "modifiers": "public", "return": "", "signature": " XYPolygonAnnotation(double[] polygon,\n                               Stroke stroke, Paint outlinePaint)", "full_signature": "public  XYPolygonAnnotation(double[] polygon,\n                               Stroke stroke, Paint outlinePaint)", "class_method_signature": "XYPolygonAnnotation.XYPolygonAnnotation(double[] polygon,\n                               Stroke stroke, Paint outlinePaint)", "testcase": false, "constructor": true}, {"identifier": "XYPolygonAnnotation", "parameters": "(double[] polygon,\n                               Stroke stroke,\n                               Paint outlinePaint, Paint fillPaint)", "modifiers": "public", "return": "", "signature": " XYPolygonAnnotation(double[] polygon,\n                               Stroke stroke,\n                               Paint outlinePaint, Paint fillPaint)", "full_signature": "public  XYPolygonAnnotation(double[] polygon,\n                               Stroke stroke,\n                               Paint outlinePaint, Paint fillPaint)", "class_method_signature": "XYPolygonAnnotation.XYPolygonAnnotation(double[] polygon,\n                               Stroke stroke,\n                               Paint outlinePaint, Paint fillPaint)", "testcase": false, "constructor": true}, {"identifier": "getPolygonCoordinates", "parameters": "()", "modifiers": "public", "return": "double[]", "signature": "double[] getPolygonCoordinates()", "full_signature": "public double[] getPolygonCoordinates()", "class_method_signature": "XYPolygonAnnotation.getPolygonCoordinates()", "testcase": false, "constructor": false}, {"identifier": "getFillPaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getFillPaint()", "full_signature": "public Paint getFillPaint()", "class_method_signature": "XYPolygonAnnotation.getFillPaint()", "testcase": false, "constructor": false}, {"identifier": "getOutlineStroke", "parameters": "()", "modifiers": "public", "return": "Stroke", "signature": "Stroke getOutlineStroke()", "full_signature": "public Stroke getOutlineStroke()", "class_method_signature": "XYPolygonAnnotation.getOutlineStroke()", "testcase": false, "constructor": false}, {"identifier": "getOutlinePaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getOutlinePaint()", "full_signature": "public Paint getOutlinePaint()", "class_method_signature": "XYPolygonAnnotation.getOutlinePaint()", "testcase": false, "constructor": false}, {"identifier": "draw", "parameters": "(Graphics2D g2, XYPlot plot, Rectangle2D dataArea,\n                     ValueAxis domainAxis, ValueAxis rangeAxis,\n                     int rendererIndex, PlotRenderingInfo info)", "modifiers": "public", "return": "void", "signature": "void draw(Graphics2D g2, XYPlot plot, Rectangle2D dataArea,\n                     ValueAxis domainAxis, ValueAxis rangeAxis,\n                     int rendererIndex, PlotRenderingInfo info)", "full_signature": "public void draw(Graphics2D g2, XYPlot plot, Rectangle2D dataArea,\n                     ValueAxis domainAxis, ValueAxis rangeAxis,\n                     int rendererIndex, PlotRenderingInfo info)", "class_method_signature": "XYPolygonAnnotation.draw(Graphics2D g2, XYPlot plot, Rectangle2D dataArea,\n                     ValueAxis domainAxis, ValueAxis rangeAxis,\n                     int rendererIndex, PlotRenderingInfo info)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "XYPolygonAnnotation.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "XYPolygonAnnotation.hashCode()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object clone()", "full_signature": "public Object clone()", "class_method_signature": "XYPolygonAnnotation.clone()", "testcase": false, "constructor": false}, {"identifier": "writeObject", "parameters": "(ObjectOutputStream stream)", "modifiers": "private", "return": "void", "signature": "void writeObject(ObjectOutputStream stream)", "full_signature": "private void writeObject(ObjectOutputStream stream)", "class_method_signature": "XYPolygonAnnotation.writeObject(ObjectOutputStream stream)", "testcase": false, "constructor": false}, {"identifier": "readObject", "parameters": "(ObjectInputStream stream)", "modifiers": "private", "return": "void", "signature": "void readObject(ObjectInputStream stream)", "full_signature": "private void readObject(ObjectInputStream stream)", "class_method_signature": "XYPolygonAnnotation.readObject(ObjectInputStream stream)", "testcase": false, "constructor": false}], "file": "source/org/jfree/chart/annotations/XYPolygonAnnotation.java"}, "focal_method": {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "body": "public int hashCode() {\n        int result = 193;\n        result = 37 * result + HashUtilities.hashCodeForDoubleArray(\n                this.polygon);\n        result = 37 * result + HashUtilities.hashCodeForPaint(this.fillPaint);\n        result = 37 * result + HashUtilities.hashCodeForPaint(\n                this.outlinePaint);\n        if (this.stroke != null) {\n            result = 37 * result + this.stroke.hashCode();\n        }\n        return result;\n    }", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "XYPolygonAnnotation.hashCode()", "testcase": false, "constructor": false, "invocations": ["hashCodeForDoubleArray", "hashCodeForPaint", "hashCodeForPaint", "hashCode"]}, "repository": {"repo_id": "Chart_1_buggy"}}