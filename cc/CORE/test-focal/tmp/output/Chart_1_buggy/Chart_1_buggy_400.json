{"test_class": {"identifier": "ModuloAxisTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/chart/axis/junit/ModuloAxisTests.java"}, "test_case": {"identifier": "testCloning", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testCloning() {\n        ModuloAxis a1 = new ModuloAxis(\"Test\", new Range(0.0, 1.0));\n        ModuloAxis a2 = null;\n        try {\n            a2 = (ModuloAxis) a1.clone();\n        }\n        catch (CloneNotSupportedException e) {\n            e.printStackTrace();\n        }\n        assertTrue(a1 != a2);\n        assertTrue(a1.getClass() == a2.getClass());\n        assertTrue(a1.equals(a2));\n    }", "signature": "void testCloning()", "full_signature": "public void testCloning()", "class_method_signature": "ModuloAxisTests.testCloning()", "testcase": true, "constructor": false, "invocations": ["clone", "printStackTrace", "assertTrue", "assertTrue", "getClass", "getClass", "assertTrue", "equals"]}, "focal_class": {"identifier": "ModuloAxis", "superclass": "extends NumberAxis", "interfaces": "", "fields": [{"original_string": "private Range fixedRange;", "modifier": "private", "type": "Range", "declarator": "fixedRange", "var_name": "fixedRange"}, {"original_string": "private double displayStart;", "modifier": "private", "type": "double", "declarator": "displayStart", "var_name": "displayStart"}, {"original_string": "private double displayEnd;", "modifier": "private", "type": "double", "declarator": "displayEnd", "var_name": "displayEnd"}], "methods": [{"identifier": "ModuloAxis", "parameters": "(String label, Range fixedRange)", "modifiers": "public", "return": "", "signature": " ModuloAxis(String label, Range fixedRange)", "full_signature": "public  ModuloAxis(String label, Range fixedRange)", "class_method_signature": "ModuloAxis.ModuloAxis(String label, Range fixedRange)", "testcase": false, "constructor": true}, {"identifier": "getDisplayStart", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getDisplayStart()", "full_signature": "public double getDisplayStart()", "class_method_signature": "ModuloAxis.getDisplayStart()", "testcase": false, "constructor": false}, {"identifier": "getDisplayEnd", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getDisplayEnd()", "full_signature": "public double getDisplayEnd()", "class_method_signature": "ModuloAxis.getDisplayEnd()", "testcase": false, "constructor": false}, {"identifier": "setDisplayRange", "parameters": "(double start, double end)", "modifiers": "public", "return": "void", "signature": "void setDisplayRange(double start, double end)", "full_signature": "public void setDisplayRange(double start, double end)", "class_method_signature": "ModuloAxis.setDisplayRange(double start, double end)", "testcase": false, "constructor": false}, {"identifier": "autoAdjustRange", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void autoAdjustRange()", "full_signature": "protected void autoAdjustRange()", "class_method_signature": "ModuloAxis.autoAdjustRange()", "testcase": false, "constructor": false}, {"identifier": "valueToJava2D", "parameters": "(double value, Rectangle2D area,\n                                RectangleEdge edge)", "modifiers": "public", "return": "double", "signature": "double valueToJava2D(double value, Rectangle2D area,\n                                RectangleEdge edge)", "full_signature": "public double valueToJava2D(double value, Rectangle2D area,\n                                RectangleEdge edge)", "class_method_signature": "ModuloAxis.valueToJava2D(double value, Rectangle2D area,\n                                RectangleEdge edge)", "testcase": false, "constructor": false}, {"identifier": "trans", "parameters": "(double value, Rectangle2D area, RectangleEdge edge)", "modifiers": "private", "return": "double", "signature": "double trans(double value, Rectangle2D area, RectangleEdge edge)", "full_signature": "private double trans(double value, Rectangle2D area, RectangleEdge edge)", "class_method_signature": "ModuloAxis.trans(double value, Rectangle2D area, RectangleEdge edge)", "testcase": false, "constructor": false}, {"identifier": "transStart", "parameters": "(double value, Rectangle2D area,\n                              RectangleEdge edge,\n                              double length1, double length2)", "modifiers": "private", "return": "double", "signature": "double transStart(double value, Rectangle2D area,\n                              RectangleEdge edge,\n                              double length1, double length2)", "full_signature": "private double transStart(double value, Rectangle2D area,\n                              RectangleEdge edge,\n                              double length1, double length2)", "class_method_signature": "ModuloAxis.transStart(double value, Rectangle2D area,\n                              RectangleEdge edge,\n                              double length1, double length2)", "testcase": false, "constructor": false}, {"identifier": "transEnd", "parameters": "(double value, Rectangle2D area, RectangleEdge edge,\n                            double length1, double length2)", "modifiers": "private", "return": "double", "signature": "double transEnd(double value, Rectangle2D area, RectangleEdge edge,\n                            double length1, double length2)", "full_signature": "private double transEnd(double value, Rectangle2D area, RectangleEdge edge,\n                            double length1, double length2)", "class_method_signature": "ModuloAxis.transEnd(double value, Rectangle2D area, RectangleEdge edge,\n                            double length1, double length2)", "testcase": false, "constructor": false}, {"identifier": "mapValueToFixedRange", "parameters": "(double value)", "modifiers": "private", "return": "double", "signature": "double mapValueToFixedRange(double value)", "full_signature": "private double mapValueToFixedRange(double value)", "class_method_signature": "ModuloAxis.mapValueToFixedRange(double value)", "testcase": false, "constructor": false}, {"identifier": "java2DToValue", "parameters": "(double java2DValue, Rectangle2D area,\n                                RectangleEdge edge)", "modifiers": "public", "return": "double", "signature": "double java2DToValue(double java2DValue, Rectangle2D area,\n                                RectangleEdge edge)", "full_signature": "public double java2DToValue(double java2DValue, Rectangle2D area,\n                                RectangleEdge edge)", "class_method_signature": "ModuloAxis.java2DToValue(double java2DValue, Rectangle2D area,\n                                RectangleEdge edge)", "testcase": false, "constructor": false}, {"identifier": "getDisplayLength", "parameters": "()", "modifiers": "private", "return": "double", "signature": "double getDisplayLength()", "full_signature": "private double getDisplayLength()", "class_method_signature": "ModuloAxis.getDisplayLength()", "testcase": false, "constructor": false}, {"identifier": "getDisplayCentralValue", "parameters": "()", "modifiers": "private", "return": "double", "signature": "double getDisplayCentralValue()", "full_signature": "private double getDisplayCentralValue()", "class_method_signature": "ModuloAxis.getDisplayCentralValue()", "testcase": false, "constructor": false}, {"identifier": "resizeRange", "parameters": "(double percent)", "modifiers": "public", "return": "void", "signature": "void resizeRange(double percent)", "full_signature": "public void resizeRange(double percent)", "class_method_signature": "ModuloAxis.resizeRange(double percent)", "testcase": false, "constructor": false}, {"identifier": "resizeRange", "parameters": "(double percent, double anchorValue)", "modifiers": "public", "return": "void", "signature": "void resizeRange(double percent, double anchorValue)", "full_signature": "public void resizeRange(double percent, double anchorValue)", "class_method_signature": "ModuloAxis.resizeRange(double percent, double anchorValue)", "testcase": false, "constructor": false}, {"identifier": "lengthToJava2D", "parameters": "(double length, Rectangle2D area,\n                                 RectangleEdge edge)", "modifiers": "public", "return": "double", "signature": "double lengthToJava2D(double length, Rectangle2D area,\n                                 RectangleEdge edge)", "full_signature": "public double lengthToJava2D(double length, Rectangle2D area,\n                                 RectangleEdge edge)", "class_method_signature": "ModuloAxis.lengthToJava2D(double length, Rectangle2D area,\n                                 RectangleEdge edge)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "ModuloAxis.equals(Object obj)", "testcase": false, "constructor": false}], "file": "source/org/jfree/chart/axis/ModuloAxis.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "body": "public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ModuloAxis)) {\n            return false;\n        }\n        ModuloAxis that = (ModuloAxis) obj;\n        if (this.displayStart != that.displayStart) {\n            return false;\n        }\n        if (this.displayEnd != that.displayEnd) {\n            return false;\n        }\n        if (!this.fixedRange.equals(that.fixedRange)) {\n            return false;\n        }\n        return super.equals(obj);\n    }", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "ModuloAxis.equals(Object obj)", "testcase": false, "constructor": false, "invocations": ["equals", "equals"]}, "repository": {"repo_id": "Chart_1_buggy"}}