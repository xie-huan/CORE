{"test_class": {"identifier": "PaintScaleLegendTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/chart/title/junit/PaintScaleLegendTests.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testEquals() {\n\n        // default instances\n        PaintScaleLegend l1 = new PaintScaleLegend(new GrayPaintScale(),\n                new NumberAxis(\"X\"));\n        PaintScaleLegend l2 = new PaintScaleLegend(new GrayPaintScale(),\n                new NumberAxis(\"X\"));\n        assertTrue(l1.equals(l2));\n        assertTrue(l2.equals(l1));\n\n        // paintScale\n        l1.setScale(new LookupPaintScale());\n        assertFalse(l1.equals(l2));\n        l2.setScale(new LookupPaintScale());\n        assertTrue(l1.equals(l2));\n\n        // axis\n        l1.setAxis(new NumberAxis(\"Axis 2\"));\n        assertFalse(l1.equals(l2));\n        l2.setAxis(new NumberAxis(\"Axis 2\"));\n        assertTrue(l1.equals(l2));\n\n        // axisLocation\n        l1.setAxisLocation(AxisLocation.BOTTOM_OR_RIGHT);\n        assertFalse(l1.equals(l2));\n        l2.setAxisLocation(AxisLocation.BOTTOM_OR_RIGHT);\n        assertTrue(l1.equals(l2));\n\n        // axisOffset\n        l1.setAxisOffset(99.0);\n        assertFalse(l1.equals(l2));\n        l2.setAxisOffset(99.0);\n        assertTrue(l1.equals(l2));\n\n        // stripWidth\n        l1.setStripWidth(99.0);\n        assertFalse(l1.equals(l2));\n        l2.setStripWidth(99.0);\n        assertTrue(l1.equals(l2));\n\n        // stripOutlineVisible\n        l1.setStripOutlineVisible(!l1.isStripOutlineVisible());\n        assertFalse(l1.equals(l2));\n        l2.setStripOutlineVisible(l1.isStripOutlineVisible());\n        assertTrue(l1.equals(l2));\n\n        // stripOutlinePaint\n        l1.setStripOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.red,\n                3.0f, 4.0f, Color.blue));\n        assertFalse(l1.equals(l2));\n        l2.setStripOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.red,\n                3.0f, 4.0f, Color.blue));\n        assertTrue(l1.equals(l2));\n\n        // stripOutlineStroke\n        l1.setStripOutlineStroke(new BasicStroke(1.1f));\n        assertFalse(l1.equals(l2));\n        l2.setStripOutlineStroke(new BasicStroke(1.1f));\n        assertTrue(l1.equals(l2));\n\n        // backgroundPaint\n        l1.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.red,\n                3.0f, 4.0f, Color.blue));\n        assertFalse(l1.equals(l2));\n        l2.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.red,\n                3.0f, 4.0f, Color.blue));\n        assertTrue(l1.equals(l2));\n\n        l1.setSubdivisionCount(99);\n        assertFalse(l1.equals(l2));\n        l2.setSubdivisionCount(99);\n        assertTrue(l1.equals(l2));\n\n    }", "signature": "void testEquals()", "full_signature": "public void testEquals()", "class_method_signature": "PaintScaleLegendTests.testEquals()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "equals", "assertTrue", "equals", "setScale", "assertFalse", "equals", "setScale", "assertTrue", "equals", "setAxis", "assertFalse", "equals", "setAxis", "assertTrue", "equals", "setAxisLocation", "assertFalse", "equals", "setAxisLocation", "assertTrue", "equals", "setAxisOffset", "assertFalse", "equals", "setAxisOffset", "assertTrue", "equals", "setStripWidth", "assertFalse", "equals", "setStripWidth", "assertTrue", "equals", "setStripOutlineVisible", "isStripOutlineVisible", "assertFalse", "equals", "setStripOutlineVisible", "isStripOutlineVisible", "assertTrue", "equals", "setStripOutlinePaint", "assertFalse", "equals", "setStripOutlinePaint", "assertTrue", "equals", "setStripOutlineStroke", "assertFalse", "equals", "setStripOutlineStroke", "assertTrue", "equals", "setBackgroundPaint", "assertFalse", "equals", "setBackgroundPaint", "assertTrue", "equals", "setSubdivisionCount", "assertFalse", "equals", "setSubdivisionCount", "assertTrue", "equals"]}, "focal_class": {"identifier": "PaintScaleLegend", "superclass": "extends Title", "interfaces": "implements AxisChangeListener,\n        PublicCloneable", "fields": [{"original_string": "static final long serialVersionUID = -1365146490993227503L;", "modifier": "static final", "type": "long", "declarator": "serialVersionUID = -1365146490993227503L", "var_name": "serialVersionUID"}, {"original_string": "private PaintScale scale;", "modifier": "private", "type": "PaintScale", "declarator": "scale", "var_name": "scale"}, {"original_string": "private ValueAxis axis;", "modifier": "private", "type": "ValueAxis", "declarator": "axis", "var_name": "axis"}, {"original_string": "private AxisLocation axisLocation;", "modifier": "private", "type": "AxisLocation", "declarator": "axisLocation", "var_name": "axisLocation"}, {"original_string": "private double axisOffset;", "modifier": "private", "type": "double", "declarator": "axisOffset", "var_name": "axisOffset"}, {"original_string": "private double stripWidth;", "modifier": "private", "type": "double", "declarator": "stripWidth", "var_name": "stripWidth"}, {"original_string": "private boolean stripOutlineVisible;", "modifier": "private", "type": "boolean", "declarator": "stripOutlineVisible", "var_name": "stripOutlineVisible"}, {"original_string": "private transient Paint stripOutlinePaint;", "modifier": "private transient", "type": "Paint", "declarator": "stripOutlinePaint", "var_name": "stripOutlinePaint"}, {"original_string": "private transient Stroke stripOutlineStroke;", "modifier": "private transient", "type": "Stroke", "declarator": "stripOutlineStroke", "var_name": "stripOutlineStroke"}, {"original_string": "private transient Paint backgroundPaint;", "modifier": "private transient", "type": "Paint", "declarator": "backgroundPaint", "var_name": "backgroundPaint"}, {"original_string": "private int subdivisions;", "modifier": "private", "type": "int", "declarator": "subdivisions", "var_name": "subdivisions"}], "methods": [{"identifier": "PaintScaleLegend", "parameters": "(PaintScale scale, ValueAxis axis)", "modifiers": "public", "return": "", "signature": " PaintScaleLegend(PaintScale scale, ValueAxis axis)", "full_signature": "public  PaintScaleLegend(PaintScale scale, ValueAxis axis)", "class_method_signature": "PaintScaleLegend.PaintScaleLegend(PaintScale scale, ValueAxis axis)", "testcase": false, "constructor": true}, {"identifier": "getScale", "parameters": "()", "modifiers": "public", "return": "PaintScale", "signature": "PaintScale getScale()", "full_signature": "public PaintScale getScale()", "class_method_signature": "PaintScaleLegend.getScale()", "testcase": false, "constructor": false}, {"identifier": "setScale", "parameters": "(PaintScale scale)", "modifiers": "public", "return": "void", "signature": "void setScale(PaintScale scale)", "full_signature": "public void setScale(PaintScale scale)", "class_method_signature": "PaintScaleLegend.setScale(PaintScale scale)", "testcase": false, "constructor": false}, {"identifier": "getAxis", "parameters": "()", "modifiers": "public", "return": "ValueAxis", "signature": "ValueAxis getAxis()", "full_signature": "public ValueAxis getAxis()", "class_method_signature": "PaintScaleLegend.getAxis()", "testcase": false, "constructor": false}, {"identifier": "setAxis", "parameters": "(ValueAxis axis)", "modifiers": "public", "return": "void", "signature": "void setAxis(ValueAxis axis)", "full_signature": "public void setAxis(ValueAxis axis)", "class_method_signature": "PaintScaleLegend.setAxis(ValueAxis axis)", "testcase": false, "constructor": false}, {"identifier": "getAxisLocation", "parameters": "()", "modifiers": "public", "return": "AxisLocation", "signature": "AxisLocation getAxisLocation()", "full_signature": "public AxisLocation getAxisLocation()", "class_method_signature": "PaintScaleLegend.getAxisLocation()", "testcase": false, "constructor": false}, {"identifier": "setAxisLocation", "parameters": "(AxisLocation location)", "modifiers": "public", "return": "void", "signature": "void setAxisLocation(AxisLocation location)", "full_signature": "public void setAxisLocation(AxisLocation location)", "class_method_signature": "PaintScaleLegend.setAxisLocation(AxisLocation location)", "testcase": false, "constructor": false}, {"identifier": "getAxisOffset", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getAxisOffset()", "full_signature": "public double getAxisOffset()", "class_method_signature": "PaintScaleLegend.getAxisOffset()", "testcase": false, "constructor": false}, {"identifier": "setAxisOffset", "parameters": "(double offset)", "modifiers": "public", "return": "void", "signature": "void setAxisOffset(double offset)", "full_signature": "public void setAxisOffset(double offset)", "class_method_signature": "PaintScaleLegend.setAxisOffset(double offset)", "testcase": false, "constructor": false}, {"identifier": "getStripWidth", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getStripWidth()", "full_signature": "public double getStripWidth()", "class_method_signature": "PaintScaleLegend.getStripWidth()", "testcase": false, "constructor": false}, {"identifier": "setStripWidth", "parameters": "(double width)", "modifiers": "public", "return": "void", "signature": "void setStripWidth(double width)", "full_signature": "public void setStripWidth(double width)", "class_method_signature": "PaintScaleLegend.setStripWidth(double width)", "testcase": false, "constructor": false}, {"identifier": "isStripOutlineVisible", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isStripOutlineVisible()", "full_signature": "public boolean isStripOutlineVisible()", "class_method_signature": "PaintScaleLegend.isStripOutlineVisible()", "testcase": false, "constructor": false}, {"identifier": "setStripOutlineVisible", "parameters": "(boolean visible)", "modifiers": "public", "return": "void", "signature": "void setStripOutlineVisible(boolean visible)", "full_signature": "public void setStripOutlineVisible(boolean visible)", "class_method_signature": "PaintScaleLegend.setStripOutlineVisible(boolean visible)", "testcase": false, "constructor": false}, {"identifier": "getStripOutlinePaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getStripOutlinePaint()", "full_signature": "public Paint getStripOutlinePaint()", "class_method_signature": "PaintScaleLegend.getStripOutlinePaint()", "testcase": false, "constructor": false}, {"identifier": "setStripOutlinePaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setStripOutlinePaint(Paint paint)", "full_signature": "public void setStripOutlinePaint(Paint paint)", "class_method_signature": "PaintScaleLegend.setStripOutlinePaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "getStripOutlineStroke", "parameters": "()", "modifiers": "public", "return": "Stroke", "signature": "Stroke getStripOutlineStroke()", "full_signature": "public Stroke getStripOutlineStroke()", "class_method_signature": "PaintScaleLegend.getStripOutlineStroke()", "testcase": false, "constructor": false}, {"identifier": "setStripOutlineStroke", "parameters": "(Stroke stroke)", "modifiers": "public", "return": "void", "signature": "void setStripOutlineStroke(Stroke stroke)", "full_signature": "public void setStripOutlineStroke(Stroke stroke)", "class_method_signature": "PaintScaleLegend.setStripOutlineStroke(Stroke stroke)", "testcase": false, "constructor": false}, {"identifier": "getBackgroundPaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getBackgroundPaint()", "full_signature": "public Paint getBackgroundPaint()", "class_method_signature": "PaintScaleLegend.getBackgroundPaint()", "testcase": false, "constructor": false}, {"identifier": "setBackgroundPaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setBackgroundPaint(Paint paint)", "full_signature": "public void setBackgroundPaint(Paint paint)", "class_method_signature": "PaintScaleLegend.setBackgroundPaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "getSubdivisionCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSubdivisionCount()", "full_signature": "public int getSubdivisionCount()", "class_method_signature": "PaintScaleLegend.getSubdivisionCount()", "testcase": false, "constructor": false}, {"identifier": "setSubdivisionCount", "parameters": "(int count)", "modifiers": "public", "return": "void", "signature": "void setSubdivisionCount(int count)", "full_signature": "public void setSubdivisionCount(int count)", "class_method_signature": "PaintScaleLegend.setSubdivisionCount(int count)", "testcase": false, "constructor": false}, {"identifier": "axisChanged", "parameters": "(AxisChangeEvent event)", "modifiers": "public", "return": "void", "signature": "void axisChanged(AxisChangeEvent event)", "full_signature": "public void axisChanged(AxisChangeEvent event)", "class_method_signature": "PaintScaleLegend.axisChanged(AxisChangeEvent event)", "testcase": false, "constructor": false}, {"identifier": "arrange", "parameters": "(Graphics2D g2, RectangleConstraint constraint)", "modifiers": "public", "return": "Size2D", "signature": "Size2D arrange(Graphics2D g2, RectangleConstraint constraint)", "full_signature": "public Size2D arrange(Graphics2D g2, RectangleConstraint constraint)", "class_method_signature": "PaintScaleLegend.arrange(Graphics2D g2, RectangleConstraint constraint)", "testcase": false, "constructor": false}, {"identifier": "arrangeRR", "parameters": "(Graphics2D g2, Range widthRange,\n            Range heightRange)", "modifiers": "protected", "return": "Size2D", "signature": "Size2D arrangeRR(Graphics2D g2, Range widthRange,\n            Range heightRange)", "full_signature": "protected Size2D arrangeRR(Graphics2D g2, Range widthRange,\n            Range heightRange)", "class_method_signature": "PaintScaleLegend.arrangeRR(Graphics2D g2, Range widthRange,\n            Range heightRange)", "testcase": false, "constructor": false}, {"identifier": "draw", "parameters": "(Graphics2D g2, Rectangle2D area)", "modifiers": "public", "return": "void", "signature": "void draw(Graphics2D g2, Rectangle2D area)", "full_signature": "public void draw(Graphics2D g2, Rectangle2D area)", "class_method_signature": "PaintScaleLegend.draw(Graphics2D g2, Rectangle2D area)", "testcase": false, "constructor": false}, {"identifier": "draw", "parameters": "(Graphics2D g2, Rectangle2D area, Object params)", "modifiers": "public", "return": "Object", "signature": "Object draw(Graphics2D g2, Rectangle2D area, Object params)", "full_signature": "public Object draw(Graphics2D g2, Rectangle2D area, Object params)", "class_method_signature": "PaintScaleLegend.draw(Graphics2D g2, Rectangle2D area, Object params)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "PaintScaleLegend.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "writeObject", "parameters": "(ObjectOutputStream stream)", "modifiers": "private", "return": "void", "signature": "void writeObject(ObjectOutputStream stream)", "full_signature": "private void writeObject(ObjectOutputStream stream)", "class_method_signature": "PaintScaleLegend.writeObject(ObjectOutputStream stream)", "testcase": false, "constructor": false}, {"identifier": "readObject", "parameters": "(ObjectInputStream stream)", "modifiers": "private", "return": "void", "signature": "void readObject(ObjectInputStream stream)", "full_signature": "private void readObject(ObjectInputStream stream)", "class_method_signature": "PaintScaleLegend.readObject(ObjectInputStream stream)", "testcase": false, "constructor": false}], "file": "source/org/jfree/chart/title/PaintScaleLegend.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "body": "public boolean equals(Object obj) {\n        if (!(obj instanceof PaintScaleLegend)) {\n            return false;\n        }\n        PaintScaleLegend that = (PaintScaleLegend) obj;\n        if (!this.scale.equals(that.scale)) {\n            return false;\n        }\n        if (!this.axis.equals(that.axis)) {\n            return false;\n        }\n        if (!this.axisLocation.equals(that.axisLocation)) {\n            return false;\n        }\n        if (this.axisOffset != that.axisOffset) {\n            return false;\n        }\n        if (this.stripWidth != that.stripWidth) {\n            return false;\n        }\n        if (this.stripOutlineVisible != that.stripOutlineVisible) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.stripOutlinePaint,\n                that.stripOutlinePaint)) {\n            return false;\n        }\n        if (!this.stripOutlineStroke.equals(that.stripOutlineStroke)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)) {\n            return false;\n        }\n        if (this.subdivisions != that.subdivisions) {\n            return false;\n        }\n        return super.equals(obj);\n    }", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "PaintScaleLegend.equals(Object obj)", "testcase": false, "constructor": false, "invocations": ["equals", "equals", "equals", "equal", "equals", "equal", "equals"]}, "repository": {"repo_id": "Chart_1_buggy"}}