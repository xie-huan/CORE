{"test_class": {"identifier": "MatrixSeriesCollectionTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/data/xy/junit/MatrixSeriesCollectionTests.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testEquals() {\n        MatrixSeries s1 = new MatrixSeries(\"Series\", 2, 3);\n        s1.update(0, 0, 1.1);\n        MatrixSeriesCollection c1 = new MatrixSeriesCollection();\n        c1.addSeries(s1);\n        MatrixSeries s2 = new MatrixSeries(\"Series\", 2, 3);\n        s2.update(0, 0, 1.1);\n        MatrixSeriesCollection c2 = new MatrixSeriesCollection();\n        c2.addSeries(s2);\n        assertTrue(c1.equals(c2));\n        assertTrue(c2.equals(c1));\n\n        c1.addSeries(new MatrixSeries(\"Empty Series\", 1, 1));\n        assertFalse(c1.equals(c2));\n\n        c2.addSeries(new MatrixSeries(\"Empty Series\", 1, 1));\n        assertTrue(c1.equals(c2));\n    }", "signature": "void testEquals()", "full_signature": "public void testEquals()", "class_method_signature": "MatrixSeriesCollectionTests.testEquals()", "testcase": true, "constructor": false, "invocations": ["update", "addSeries", "update", "addSeries", "assertTrue", "equals", "assertTrue", "equals", "addSeries", "assertFalse", "equals", "addSeries", "assertTrue", "equals"]}, "focal_class": {"identifier": "MatrixSeriesCollection", "superclass": "extends AbstractXYZDataset", "interfaces": "implements XYZDataset, PublicCloneable, Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -3197705779242543945L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -3197705779242543945L", "var_name": "serialVersionUID"}, {"original_string": "private List seriesList;", "modifier": "private", "type": "List", "declarator": "seriesList", "var_name": "seriesList"}], "methods": [{"identifier": "MatrixSeriesCollection", "parameters": "()", "modifiers": "public", "return": "", "signature": " MatrixSeriesCollection()", "full_signature": "public  MatrixSeriesCollection()", "class_method_signature": "MatrixSeriesCollection.MatrixSeriesCollection()", "testcase": false, "constructor": true}, {"identifier": "MatrixSeriesCollection", "parameters": "(MatrixSeries series)", "modifiers": "public", "return": "", "signature": " MatrixSeriesCollection(MatrixSeries series)", "full_signature": "public  MatrixSeriesCollection(MatrixSeries series)", "class_method_signature": "MatrixSeriesCollection.MatrixSeriesCollection(MatrixSeries series)", "testcase": false, "constructor": true}, {"identifier": "getItemCount", "parameters": "(int seriesIndex)", "modifiers": "public", "return": "int", "signature": "int getItemCount(int seriesIndex)", "full_signature": "public int getItemCount(int seriesIndex)", "class_method_signature": "MatrixSeriesCollection.getItemCount(int seriesIndex)", "testcase": false, "constructor": false}, {"identifier": "getSeries", "parameters": "(int seriesIndex)", "modifiers": "public", "return": "MatrixSeries", "signature": "MatrixSeries getSeries(int seriesIndex)", "full_signature": "public MatrixSeries getSeries(int seriesIndex)", "class_method_signature": "MatrixSeriesCollection.getSeries(int seriesIndex)", "testcase": false, "constructor": false}, {"identifier": "getSeriesCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSeriesCount()", "full_signature": "public int getSeriesCount()", "class_method_signature": "MatrixSeriesCollection.getSeriesCount()", "testcase": false, "constructor": false}, {"identifier": "getSeriesKey", "parameters": "(int seriesIndex)", "modifiers": "public", "return": "Comparable", "signature": "Comparable getSeriesKey(int seriesIndex)", "full_signature": "public Comparable getSeriesKey(int seriesIndex)", "class_method_signature": "MatrixSeriesCollection.getSeriesKey(int seriesIndex)", "testcase": false, "constructor": false}, {"identifier": "getX", "parameters": "(int seriesIndex, int itemIndex)", "modifiers": "public", "return": "Number", "signature": "Number getX(int seriesIndex, int itemIndex)", "full_signature": "public Number getX(int seriesIndex, int itemIndex)", "class_method_signature": "MatrixSeriesCollection.getX(int seriesIndex, int itemIndex)", "testcase": false, "constructor": false}, {"identifier": "getY", "parameters": "(int seriesIndex, int itemIndex)", "modifiers": "public", "return": "Number", "signature": "Number getY(int seriesIndex, int itemIndex)", "full_signature": "public Number getY(int seriesIndex, int itemIndex)", "class_method_signature": "MatrixSeriesCollection.getY(int seriesIndex, int itemIndex)", "testcase": false, "constructor": false}, {"identifier": "getZ", "parameters": "(int seriesIndex, int itemIndex)", "modifiers": "public", "return": "Number", "signature": "Number getZ(int seriesIndex, int itemIndex)", "full_signature": "public Number getZ(int seriesIndex, int itemIndex)", "class_method_signature": "MatrixSeriesCollection.getZ(int seriesIndex, int itemIndex)", "testcase": false, "constructor": false}, {"identifier": "addSeries", "parameters": "(MatrixSeries series)", "modifiers": "public", "return": "void", "signature": "void addSeries(MatrixSeries series)", "full_signature": "public void addSeries(MatrixSeries series)", "class_method_signature": "MatrixSeriesCollection.addSeries(MatrixSeries series)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "MatrixSeriesCollection.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "MatrixSeriesCollection.hashCode()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object clone()", "full_signature": "public Object clone()", "class_method_signature": "MatrixSeriesCollection.clone()", "testcase": false, "constructor": false}, {"identifier": "removeAllSeries", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void removeAllSeries()", "full_signature": "public void removeAllSeries()", "class_method_signature": "MatrixSeriesCollection.removeAllSeries()", "testcase": false, "constructor": false}, {"identifier": "removeSeries", "parameters": "(MatrixSeries series)", "modifiers": "public", "return": "void", "signature": "void removeSeries(MatrixSeries series)", "full_signature": "public void removeSeries(MatrixSeries series)", "class_method_signature": "MatrixSeriesCollection.removeSeries(MatrixSeries series)", "testcase": false, "constructor": false}, {"identifier": "removeSeries", "parameters": "(int seriesIndex)", "modifiers": "public", "return": "void", "signature": "void removeSeries(int seriesIndex)", "full_signature": "public void removeSeries(int seriesIndex)", "class_method_signature": "MatrixSeriesCollection.removeSeries(int seriesIndex)", "testcase": false, "constructor": false}], "file": "source/org/jfree/data/xy/MatrixSeriesCollection.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "body": "public boolean equals(Object obj) {\n        if (obj == null) {\n            return false;\n        }\n\n        if (obj == this) {\n            return true;\n        }\n\n        if (obj instanceof MatrixSeriesCollection) {\n            MatrixSeriesCollection c = (MatrixSeriesCollection) obj;\n\n            return ObjectUtilities.equal(this.seriesList, c.seriesList);\n        }\n\n        return false;\n    }", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "MatrixSeriesCollection.equals(Object obj)", "testcase": false, "constructor": false, "invocations": ["equal"]}, "repository": {"repo_id": "Chart_1_buggy"}}