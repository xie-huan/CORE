{"test_class": {"identifier": "VectorSeriesCollectionTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/data/xy/junit/VectorSeriesCollectionTests.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testEquals() {\n        VectorSeries s1 = new VectorSeries(\"Series\");\n        s1.add(1.0, 1.1, 1.2, 1.3);\n        VectorSeriesCollection c1 = new VectorSeriesCollection();\n        c1.addSeries(s1);\n        VectorSeries s2 = new VectorSeries(\"Series\");\n        s2.add(1.0, 1.1, 1.2, 1.3);\n        VectorSeriesCollection c2 = new VectorSeriesCollection();\n        c2.addSeries(s2);\n        assertTrue(c1.equals(c2));\n        assertTrue(c2.equals(c1));\n\n        c1.addSeries(new VectorSeries(\"Empty Series\"));\n        assertFalse(c1.equals(c2));\n\n        c2.addSeries(new VectorSeries(\"Empty Series\"));\n        assertTrue(c1.equals(c2));\n    }", "signature": "void testEquals()", "full_signature": "public void testEquals()", "class_method_signature": "VectorSeriesCollectionTests.testEquals()", "testcase": true, "constructor": false, "invocations": ["add", "addSeries", "add", "addSeries", "assertTrue", "equals", "assertTrue", "equals", "addSeries", "assertFalse", "equals", "addSeries", "assertTrue", "equals"]}, "focal_class": {"identifier": "VectorSeriesCollection", "superclass": "extends AbstractXYDataset", "interfaces": "implements VectorXYDataset, PublicCloneable, Serializable", "fields": [{"original_string": "private List data;", "modifier": "private", "type": "List", "declarator": "data", "var_name": "data"}], "methods": [{"identifier": "VectorSeriesCollection", "parameters": "()", "modifiers": "public", "return": "", "signature": " VectorSeriesCollection()", "full_signature": "public  VectorSeriesCollection()", "class_method_signature": "VectorSeriesCollection.VectorSeriesCollection()", "testcase": false, "constructor": true}, {"identifier": "addSeries", "parameters": "(VectorSeries series)", "modifiers": "public", "return": "void", "signature": "void addSeries(VectorSeries series)", "full_signature": "public void addSeries(VectorSeries series)", "class_method_signature": "VectorSeriesCollection.addSeries(VectorSeries series)", "testcase": false, "constructor": false}, {"identifier": "removeSeries", "parameters": "(VectorSeries series)", "modifiers": "public", "return": "boolean", "signature": "boolean removeSeries(VectorSeries series)", "full_signature": "public boolean removeSeries(VectorSeries series)", "class_method_signature": "VectorSeriesCollection.removeSeries(VectorSeries series)", "testcase": false, "constructor": false}, {"identifier": "removeAllSeries", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void removeAllSeries()", "full_signature": "public void removeAllSeries()", "class_method_signature": "VectorSeriesCollection.removeAllSeries()", "testcase": false, "constructor": false}, {"identifier": "getSeriesCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSeriesCount()", "full_signature": "public int getSeriesCount()", "class_method_signature": "VectorSeriesCollection.getSeriesCount()", "testcase": false, "constructor": false}, {"identifier": "getSeries", "parameters": "(int series)", "modifiers": "public", "return": "VectorSeries", "signature": "VectorSeries getSeries(int series)", "full_signature": "public VectorSeries getSeries(int series)", "class_method_signature": "VectorSeriesCollection.getSeries(int series)", "testcase": false, "constructor": false}, {"identifier": "getSeriesKey", "parameters": "(int series)", "modifiers": "public", "return": "Comparable", "signature": "Comparable getSeriesKey(int series)", "full_signature": "public Comparable getSeriesKey(int series)", "class_method_signature": "VectorSeriesCollection.getSeriesKey(int series)", "testcase": false, "constructor": false}, {"identifier": "indexOf", "parameters": "(VectorSeries series)", "modifiers": "public", "return": "int", "signature": "int indexOf(VectorSeries series)", "full_signature": "public int indexOf(VectorSeries series)", "class_method_signature": "VectorSeriesCollection.indexOf(VectorSeries series)", "testcase": false, "constructor": false}, {"identifier": "getItemCount", "parameters": "(int series)", "modifiers": "public", "return": "int", "signature": "int getItemCount(int series)", "full_signature": "public int getItemCount(int series)", "class_method_signature": "VectorSeriesCollection.getItemCount(int series)", "testcase": false, "constructor": false}, {"identifier": "getXValue", "parameters": "(int series, int item)", "modifiers": "public", "return": "double", "signature": "double getXValue(int series, int item)", "full_signature": "public double getXValue(int series, int item)", "class_method_signature": "VectorSeriesCollection.getXValue(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "getX", "parameters": "(int series, int item)", "modifiers": "public", "return": "Number", "signature": "Number getX(int series, int item)", "full_signature": "public Number getX(int series, int item)", "class_method_signature": "VectorSeriesCollection.getX(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "getYValue", "parameters": "(int series, int item)", "modifiers": "public", "return": "double", "signature": "double getYValue(int series, int item)", "full_signature": "public double getYValue(int series, int item)", "class_method_signature": "VectorSeriesCollection.getYValue(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "getY", "parameters": "(int series, int item)", "modifiers": "public", "return": "Number", "signature": "Number getY(int series, int item)", "full_signature": "public Number getY(int series, int item)", "class_method_signature": "VectorSeriesCollection.getY(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "getVector", "parameters": "(int series, int item)", "modifiers": "public", "return": "Vector", "signature": "Vector getVector(int series, int item)", "full_signature": "public Vector getVector(int series, int item)", "class_method_signature": "VectorSeriesCollection.getVector(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "getVectorXValue", "parameters": "(int series, int item)", "modifiers": "public", "return": "double", "signature": "double getVectorXValue(int series, int item)", "full_signature": "public double getVectorXValue(int series, int item)", "class_method_signature": "VectorSeriesCollection.getVectorXValue(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "getVectorYValue", "parameters": "(int series, int item)", "modifiers": "public", "return": "double", "signature": "double getVectorYValue(int series, int item)", "full_signature": "public double getVectorYValue(int series, int item)", "class_method_signature": "VectorSeriesCollection.getVectorYValue(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "VectorSeriesCollection.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object clone()", "full_signature": "public Object clone()", "class_method_signature": "VectorSeriesCollection.clone()", "testcase": false, "constructor": false}], "file": "source/org/jfree/data/xy/VectorSeriesCollection.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "body": "public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof VectorSeriesCollection)) {\n            return false;\n        }\n        VectorSeriesCollection that = (VectorSeriesCollection) obj;\n        return ObjectUtilities.equal(this.data, that.data);\n    }", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "VectorSeriesCollection.equals(Object obj)", "testcase": false, "constructor": false, "invocations": ["equal"]}, "repository": {"repo_id": "Chart_1_buggy"}}