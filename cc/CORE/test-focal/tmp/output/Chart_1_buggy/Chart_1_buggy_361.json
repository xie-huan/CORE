{"test_class": {"identifier": "XYDrawableAnnotationTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/chart/annotations/junit/XYDrawableAnnotationTests.java"}, "test_case": {"identifier": "testHashCode", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testHashCode() {\n        XYDrawableAnnotation a1 = new XYDrawableAnnotation(10.0, 20.0, 100.0,\n                200.0, new TestDrawable());\n        XYDrawableAnnotation a2 = new XYDrawableAnnotation(10.0, 20.0, 100.0,\n                200.0, new TestDrawable());\n        assertTrue(a1.equals(a2));\n        int h1 = a1.hashCode();\n        int h2 = a2.hashCode();\n        assertEquals(h1, h2);\n    }", "signature": "void testHashCode()", "full_signature": "public void testHashCode()", "class_method_signature": "XYDrawableAnnotationTests.testHashCode()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "equals", "hashCode", "hashCode", "assertEquals"]}, "focal_class": {"identifier": "XYDrawableAnnotation", "superclass": "extends AbstractXYAnnotation", "interfaces": "implements Cloneable, PublicCloneable, Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -6540812859722691020L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -6540812859722691020L", "var_name": "serialVersionUID"}, {"original_string": "private double drawScaleFactor;", "modifier": "private", "type": "double", "declarator": "drawScaleFactor", "var_name": "drawScaleFactor"}, {"original_string": "private double x;", "modifier": "private", "type": "double", "declarator": "x", "var_name": "x"}, {"original_string": "private double y;", "modifier": "private", "type": "double", "declarator": "y", "var_name": "y"}, {"original_string": "private double displayWidth;", "modifier": "private", "type": "double", "declarator": "displayWidth", "var_name": "displayWidth"}, {"original_string": "private double displayHeight;", "modifier": "private", "type": "double", "declarator": "displayHeight", "var_name": "displayHeight"}, {"original_string": "private Drawable drawable;", "modifier": "private", "type": "Drawable", "declarator": "drawable", "var_name": "drawable"}], "methods": [{"identifier": "XYDrawableAnnotation", "parameters": "(double x, double y, double width, double height,\n                                Drawable drawable)", "modifiers": "public", "return": "", "signature": " XYDrawableAnnotation(double x, double y, double width, double height,\n                                Drawable drawable)", "full_signature": "public  XYDrawableAnnotation(double x, double y, double width, double height,\n                                Drawable drawable)", "class_method_signature": "XYDrawableAnnotation.XYDrawableAnnotation(double x, double y, double width, double height,\n                                Drawable drawable)", "testcase": false, "constructor": true}, {"identifier": "XYDrawableAnnotation", "parameters": "(double x, double y, double displayWidth,\n            double displayHeight, double drawScaleFactor, Drawable drawable)", "modifiers": "public", "return": "", "signature": " XYDrawableAnnotation(double x, double y, double displayWidth,\n            double displayHeight, double drawScaleFactor, Drawable drawable)", "full_signature": "public  XYDrawableAnnotation(double x, double y, double displayWidth,\n            double displayHeight, double drawScaleFactor, Drawable drawable)", "class_method_signature": "XYDrawableAnnotation.XYDrawableAnnotation(double x, double y, double displayWidth,\n            double displayHeight, double drawScaleFactor, Drawable drawable)", "testcase": false, "constructor": true}, {"identifier": "draw", "parameters": "(Graphics2D g2, XYPlot plot, Rectangle2D dataArea,\n                     ValueAxis domainAxis, ValueAxis rangeAxis,\n                     int rendererIndex,\n                     PlotRenderingInfo info)", "modifiers": "public", "return": "void", "signature": "void draw(Graphics2D g2, XYPlot plot, Rectangle2D dataArea,\n                     ValueAxis domainAxis, ValueAxis rangeAxis,\n                     int rendererIndex,\n                     PlotRenderingInfo info)", "full_signature": "public void draw(Graphics2D g2, XYPlot plot, Rectangle2D dataArea,\n                     ValueAxis domainAxis, ValueAxis rangeAxis,\n                     int rendererIndex,\n                     PlotRenderingInfo info)", "class_method_signature": "XYDrawableAnnotation.draw(Graphics2D g2, XYPlot plot, Rectangle2D dataArea,\n                     ValueAxis domainAxis, ValueAxis rangeAxis,\n                     int rendererIndex,\n                     PlotRenderingInfo info)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "XYDrawableAnnotation.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "XYDrawableAnnotation.hashCode()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object clone()", "full_signature": "public Object clone()", "class_method_signature": "XYDrawableAnnotation.clone()", "testcase": false, "constructor": false}], "file": "source/org/jfree/chart/annotations/XYDrawableAnnotation.java"}, "focal_method": {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "body": "public int hashCode() {\n        int result;\n        long temp;\n        temp = Double.doubleToLongBits(this.x);\n        result = (int) (temp ^ (temp >>> 32));\n        temp = Double.doubleToLongBits(this.y);\n        result = 29 * result + (int) (temp ^ (temp >>> 32));\n        temp = Double.doubleToLongBits(this.displayWidth);\n        result = 29 * result + (int) (temp ^ (temp >>> 32));\n        temp = Double.doubleToLongBits(this.displayHeight);\n        result = 29 * result + (int) (temp ^ (temp >>> 32));\n        return result;\n    }", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "XYDrawableAnnotation.hashCode()", "testcase": false, "constructor": false, "invocations": ["doubleToLongBits", "doubleToLongBits", "doubleToLongBits", "doubleToLongBits"]}, "repository": {"repo_id": "Chart_1_buggy"}}