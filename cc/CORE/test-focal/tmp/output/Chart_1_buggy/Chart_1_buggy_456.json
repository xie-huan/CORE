{"test_class": {"identifier": "SubCategoryAxisTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/chart/axis/junit/SubCategoryAxisTests.java"}, "test_case": {"identifier": "testHashCode", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testHashCode() {\n        SubCategoryAxis a1 = new SubCategoryAxis(\"Test\");\n        SubCategoryAxis a2 = new SubCategoryAxis(\"Test\");\n        assertTrue(a1.equals(a2));\n        int h1 = a1.hashCode();\n        int h2 = a2.hashCode();\n        assertEquals(h1, h2);\n    }", "signature": "void testHashCode()", "full_signature": "public void testHashCode()", "class_method_signature": "SubCategoryAxisTests.testHashCode()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "equals", "hashCode", "hashCode", "assertEquals"]}, "focal_class": {"identifier": "SubCategoryAxis", "superclass": "extends CategoryAxis", "interfaces": "implements Cloneable, Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -1279463299793228344L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -1279463299793228344L", "var_name": "serialVersionUID"}, {"original_string": "private List subCategories;", "modifier": "private", "type": "List", "declarator": "subCategories", "var_name": "subCategories"}, {"original_string": "private Font subLabelFont = new Font(\"Tahoma\", Font.PLAIN, 10);", "modifier": "private", "type": "Font", "declarator": "subLabelFont = new Font(\"Tahoma\", Font.PLAIN, 10)", "var_name": "subLabelFont"}, {"original_string": "private transient Paint subLabelPaint = Color.black;", "modifier": "private transient", "type": "Paint", "declarator": "subLabelPaint = Color.black", "var_name": "subLabelPaint"}], "methods": [{"identifier": "SubCategoryAxis", "parameters": "(String label)", "modifiers": "public", "return": "", "signature": " SubCategoryAxis(String label)", "full_signature": "public  SubCategoryAxis(String label)", "class_method_signature": "SubCategoryAxis.SubCategoryAxis(String label)", "testcase": false, "constructor": true}, {"identifier": "addSubCategory", "parameters": "(Comparable subCategory)", "modifiers": "public", "return": "void", "signature": "void addSubCategory(Comparable subCategory)", "full_signature": "public void addSubCategory(Comparable subCategory)", "class_method_signature": "SubCategoryAxis.addSubCategory(Comparable subCategory)", "testcase": false, "constructor": false}, {"identifier": "getSubLabelFont", "parameters": "()", "modifiers": "public", "return": "Font", "signature": "Font getSubLabelFont()", "full_signature": "public Font getSubLabelFont()", "class_method_signature": "SubCategoryAxis.getSubLabelFont()", "testcase": false, "constructor": false}, {"identifier": "setSubLabelFont", "parameters": "(Font font)", "modifiers": "public", "return": "void", "signature": "void setSubLabelFont(Font font)", "full_signature": "public void setSubLabelFont(Font font)", "class_method_signature": "SubCategoryAxis.setSubLabelFont(Font font)", "testcase": false, "constructor": false}, {"identifier": "getSubLabelPaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getSubLabelPaint()", "full_signature": "public Paint getSubLabelPaint()", "class_method_signature": "SubCategoryAxis.getSubLabelPaint()", "testcase": false, "constructor": false}, {"identifier": "setSubLabelPaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setSubLabelPaint(Paint paint)", "full_signature": "public void setSubLabelPaint(Paint paint)", "class_method_signature": "SubCategoryAxis.setSubLabelPaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "reserveSpace", "parameters": "(Graphics2D g2, Plot plot,\n                                  Rectangle2D plotArea,\n                                  RectangleEdge edge, AxisSpace space)", "modifiers": "public", "return": "AxisSpace", "signature": "AxisSpace reserveSpace(Graphics2D g2, Plot plot,\n                                  Rectangle2D plotArea,\n                                  RectangleEdge edge, AxisSpace space)", "full_signature": "public AxisSpace reserveSpace(Graphics2D g2, Plot plot,\n                                  Rectangle2D plotArea,\n                                  RectangleEdge edge, AxisSpace space)", "class_method_signature": "SubCategoryAxis.reserveSpace(Graphics2D g2, Plot plot,\n                                  Rectangle2D plotArea,\n                                  RectangleEdge edge, AxisSpace space)", "testcase": false, "constructor": false}, {"identifier": "getMaxDim", "parameters": "(Graphics2D g2, RectangleEdge edge)", "modifiers": "private", "return": "double", "signature": "double getMaxDim(Graphics2D g2, RectangleEdge edge)", "full_signature": "private double getMaxDim(Graphics2D g2, RectangleEdge edge)", "class_method_signature": "SubCategoryAxis.getMaxDim(Graphics2D g2, RectangleEdge edge)", "testcase": false, "constructor": false}, {"identifier": "draw", "parameters": "(Graphics2D g2,\n                          double cursor,\n                          Rectangle2D plotArea,\n                          Rectangle2D dataArea,\n                          RectangleEdge edge,\n                          PlotRenderingInfo plotState)", "modifiers": "public", "return": "AxisState", "signature": "AxisState draw(Graphics2D g2,\n                          double cursor,\n                          Rectangle2D plotArea,\n                          Rectangle2D dataArea,\n                          RectangleEdge edge,\n                          PlotRenderingInfo plotState)", "full_signature": "public AxisState draw(Graphics2D g2,\n                          double cursor,\n                          Rectangle2D plotArea,\n                          Rectangle2D dataArea,\n                          RectangleEdge edge,\n                          PlotRenderingInfo plotState)", "class_method_signature": "SubCategoryAxis.draw(Graphics2D g2,\n                          double cursor,\n                          Rectangle2D plotArea,\n                          Rectangle2D dataArea,\n                          RectangleEdge edge,\n                          PlotRenderingInfo plotState)", "testcase": false, "constructor": false}, {"identifier": "drawSubCategoryLabels", "parameters": "(Graphics2D g2,\n                                              Rectangle2D plotArea,\n                                              Rectangle2D dataArea,\n                                              RectangleEdge edge,\n                                              AxisState state,\n                                              PlotRenderingInfo plotState)", "modifiers": "protected", "return": "AxisState", "signature": "AxisState drawSubCategoryLabels(Graphics2D g2,\n                                              Rectangle2D plotArea,\n                                              Rectangle2D dataArea,\n                                              RectangleEdge edge,\n                                              AxisState state,\n                                              PlotRenderingInfo plotState)", "full_signature": "protected AxisState drawSubCategoryLabels(Graphics2D g2,\n                                              Rectangle2D plotArea,\n                                              Rectangle2D dataArea,\n                                              RectangleEdge edge,\n                                              AxisState state,\n                                              PlotRenderingInfo plotState)", "class_method_signature": "SubCategoryAxis.drawSubCategoryLabels(Graphics2D g2,\n                                              Rectangle2D plotArea,\n                                              Rectangle2D dataArea,\n                                              RectangleEdge edge,\n                                              AxisState state,\n                                              PlotRenderingInfo plotState)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "SubCategoryAxis.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "writeObject", "parameters": "(ObjectOutputStream stream)", "modifiers": "private", "return": "void", "signature": "void writeObject(ObjectOutputStream stream)", "full_signature": "private void writeObject(ObjectOutputStream stream)", "class_method_signature": "SubCategoryAxis.writeObject(ObjectOutputStream stream)", "testcase": false, "constructor": false}, {"identifier": "readObject", "parameters": "(ObjectInputStream stream)", "modifiers": "private", "return": "void", "signature": "void readObject(ObjectInputStream stream)", "full_signature": "private void readObject(ObjectInputStream stream)", "class_method_signature": "SubCategoryAxis.readObject(ObjectInputStream stream)", "testcase": false, "constructor": false}], "file": "source/org/jfree/chart/axis/SubCategoryAxis.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "body": "public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (obj instanceof SubCategoryAxis && super.equals(obj)) {\n            SubCategoryAxis axis = (SubCategoryAxis) obj;\n            if (!this.subCategories.equals(axis.subCategories)) {\n                return false;\n            }\n            if (!this.subLabelFont.equals(axis.subLabelFont)) {\n                return false;\n            }\n            if (!this.subLabelPaint.equals(axis.subLabelPaint)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "SubCategoryAxis.equals(Object obj)", "testcase": false, "constructor": false, "invocations": ["equals", "equals", "equals", "equals"]}, "repository": {"repo_id": "Chart_1_buggy"}}