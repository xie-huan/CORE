{"test_class": {"identifier": "RangeTypeTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/data/junit/RangeTypeTests.java"}, "test_case": {"identifier": "testSerialization", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testSerialization() {\n        RangeType r1 = RangeType.FULL;\n        RangeType r2 = null;\n        try {\n            ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n            ObjectOutput out = new ObjectOutputStream(buffer);\n            out.writeObject(r1);\n            out.close();\n\n            ObjectInput in = new ObjectInputStream(\n                new ByteArrayInputStream(buffer.toByteArray())\n            );\n            r2 = (RangeType) in.readObject();\n            in.close();\n        }\n        catch (Exception e) {\n            System.out.println(e.toString());\n        }\n        assertEquals(r1, r2);\n        boolean same = r1 == r2;\n        assertEquals(true, same);\n    }", "signature": "void testSerialization()", "full_signature": "public void testSerialization()", "class_method_signature": "RangeTypeTests.testSerialization()", "testcase": true, "constructor": false, "invocations": ["writeObject", "close", "toByteArray", "readObject", "close", "println", "toString", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "RangeType", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -9073319010650549239L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -9073319010650549239L", "var_name": "serialVersionUID"}, {"original_string": "public static final RangeType FULL = new RangeType(\"RangeType.FULL\");", "modifier": "public static final", "type": "RangeType", "declarator": "FULL = new RangeType(\"RangeType.FULL\")", "var_name": "FULL"}, {"original_string": "public static final RangeType POSITIVE\n        = new RangeType(\"RangeType.POSITIVE\");", "modifier": "public static final", "type": "RangeType", "declarator": "POSITIVE\n        = new RangeType(\"RangeType.POSITIVE\")", "var_name": "POSITIVE"}, {"original_string": "public static final RangeType NEGATIVE\n        = new RangeType(\"RangeType.NEGATIVE\");", "modifier": "public static final", "type": "RangeType", "declarator": "NEGATIVE\n        = new RangeType(\"RangeType.NEGATIVE\")", "var_name": "NEGATIVE"}, {"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}], "methods": [{"identifier": "RangeType", "parameters": "(String name)", "modifiers": "private", "return": "", "signature": " RangeType(String name)", "full_signature": "private  RangeType(String name)", "class_method_signature": "RangeType.RangeType(String name)", "testcase": false, "constructor": true}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "RangeType.toString()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "RangeType.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "RangeType.hashCode()", "testcase": false, "constructor": false}, {"identifier": "readResolve", "parameters": "()", "modifiers": "private", "return": "Object", "signature": "Object readResolve()", "full_signature": "private Object readResolve()", "class_method_signature": "RangeType.readResolve()", "testcase": false, "constructor": false}], "file": "source/org/jfree/data/RangeType.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String toString() {\n        return this.name;\n    }", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "RangeType.toString()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": "Chart_1_buggy"}}