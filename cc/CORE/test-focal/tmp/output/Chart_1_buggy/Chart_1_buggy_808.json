{"test_class": {"identifier": "KeyedObjects2DTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/data/junit/KeyedObjects2DTests.java"}, "test_case": {"identifier": "testSetObject", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testSetObject() {\n        KeyedObjects2D data = new KeyedObjects2D();\n        data.setObject(\"Obj1\", \"R1\", \"C1\");\n        data.setObject(\"Obj2\", \"R2\", \"C2\");\n        assertEquals(\"Obj1\", data.getObject(\"R1\", \"C1\"));\n        assertEquals(\"Obj2\", data.getObject(\"R2\", \"C2\"));\n        assertNull(data.getObject(\"R1\", \"C2\"));\n        assertNull(data.getObject(\"R2\", \"C1\"));\n\n        // confirm overwriting an existing value\n        data.setObject(\"ABC\", \"R2\", \"C2\");\n        assertEquals(\"ABC\", data.getObject(\"R2\", \"C2\"));\n\n        // try null keys\n        boolean pass = false;\n        try {\n            data.setObject(\"X\", null, \"C1\");\n        }\n        catch (IllegalArgumentException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            data.setObject(\"X\", \"R1\", null);\n        }\n        catch (IllegalArgumentException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }", "signature": "void testSetObject()", "full_signature": "public void testSetObject()", "class_method_signature": "KeyedObjects2DTests.testSetObject()", "testcase": true, "constructor": false, "invocations": ["setObject", "setObject", "assertEquals", "getObject", "assertEquals", "getObject", "assertNull", "getObject", "assertNull", "getObject", "setObject", "assertEquals", "getObject", "setObject", "assertTrue", "setObject", "assertTrue"]}, "focal_class": {"identifier": "KeyedObjects2D", "superclass": "", "interfaces": "implements Cloneable, Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -1015873563138522374L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -1015873563138522374L", "var_name": "serialVersionUID"}, {"original_string": "private List rowKeys;", "modifier": "private", "type": "List", "declarator": "rowKeys", "var_name": "rowKeys"}, {"original_string": "private List columnKeys;", "modifier": "private", "type": "List", "declarator": "columnKeys", "var_name": "columnKeys"}, {"original_string": "private List rows;", "modifier": "private", "type": "List", "declarator": "rows", "var_name": "rows"}], "methods": [{"identifier": "KeyedObjects2D", "parameters": "()", "modifiers": "public", "return": "", "signature": " KeyedObjects2D()", "full_signature": "public  KeyedObjects2D()", "class_method_signature": "KeyedObjects2D.KeyedObjects2D()", "testcase": false, "constructor": true}, {"identifier": "getRowCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getRowCount()", "full_signature": "public int getRowCount()", "class_method_signature": "KeyedObjects2D.getRowCount()", "testcase": false, "constructor": false}, {"identifier": "getColumnCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getColumnCount()", "full_signature": "public int getColumnCount()", "class_method_signature": "KeyedObjects2D.getColumnCount()", "testcase": false, "constructor": false}, {"identifier": "getObject", "parameters": "(int row, int column)", "modifiers": "public", "return": "Object", "signature": "Object getObject(int row, int column)", "full_signature": "public Object getObject(int row, int column)", "class_method_signature": "KeyedObjects2D.getObject(int row, int column)", "testcase": false, "constructor": false}, {"identifier": "getRowKey", "parameters": "(int row)", "modifiers": "public", "return": "Comparable", "signature": "Comparable getRowKey(int row)", "full_signature": "public Comparable getRowKey(int row)", "class_method_signature": "KeyedObjects2D.getRowKey(int row)", "testcase": false, "constructor": false}, {"identifier": "getRowIndex", "parameters": "(Comparable key)", "modifiers": "public", "return": "int", "signature": "int getRowIndex(Comparable key)", "full_signature": "public int getRowIndex(Comparable key)", "class_method_signature": "KeyedObjects2D.getRowIndex(Comparable key)", "testcase": false, "constructor": false}, {"identifier": "getRowKeys", "parameters": "()", "modifiers": "public", "return": "List", "signature": "List getRowKeys()", "full_signature": "public List getRowKeys()", "class_method_signature": "KeyedObjects2D.getRowKeys()", "testcase": false, "constructor": false}, {"identifier": "getColumnKey", "parameters": "(int column)", "modifiers": "public", "return": "Comparable", "signature": "Comparable getColumnKey(int column)", "full_signature": "public Comparable getColumnKey(int column)", "class_method_signature": "KeyedObjects2D.getColumnKey(int column)", "testcase": false, "constructor": false}, {"identifier": "getColumnIndex", "parameters": "(Comparable key)", "modifiers": "public", "return": "int", "signature": "int getColumnIndex(Comparable key)", "full_signature": "public int getColumnIndex(Comparable key)", "class_method_signature": "KeyedObjects2D.getColumnIndex(Comparable key)", "testcase": false, "constructor": false}, {"identifier": "getColumnKeys", "parameters": "()", "modifiers": "public", "return": "List", "signature": "List getColumnKeys()", "full_signature": "public List getColumnKeys()", "class_method_signature": "KeyedObjects2D.getColumnKeys()", "testcase": false, "constructor": false}, {"identifier": "getObject", "parameters": "(Comparable rowKey, Comparable columnKey)", "modifiers": "public", "return": "Object", "signature": "Object getObject(Comparable rowKey, Comparable columnKey)", "full_signature": "public Object getObject(Comparable rowKey, Comparable columnKey)", "class_method_signature": "KeyedObjects2D.getObject(Comparable rowKey, Comparable columnKey)", "testcase": false, "constructor": false}, {"identifier": "addObject", "parameters": "(Object object, Comparable rowKey,\n            Comparable columnKey)", "modifiers": "public", "return": "void", "signature": "void addObject(Object object, Comparable rowKey,\n            Comparable columnKey)", "full_signature": "public void addObject(Object object, Comparable rowKey,\n            Comparable columnKey)", "class_method_signature": "KeyedObjects2D.addObject(Object object, Comparable rowKey,\n            Comparable columnKey)", "testcase": false, "constructor": false}, {"identifier": "setObject", "parameters": "(Object object, Comparable rowKey,\n            Comparable columnKey)", "modifiers": "public", "return": "void", "signature": "void setObject(Object object, Comparable rowKey,\n            Comparable columnKey)", "full_signature": "public void setObject(Object object, Comparable rowKey,\n            Comparable columnKey)", "class_method_signature": "KeyedObjects2D.setObject(Object object, Comparable rowKey,\n            Comparable columnKey)", "testcase": false, "constructor": false}, {"identifier": "removeObject", "parameters": "(Comparable rowKey, Comparable columnKey)", "modifiers": "public", "return": "void", "signature": "void removeObject(Comparable rowKey, Comparable columnKey)", "full_signature": "public void removeObject(Comparable rowKey, Comparable columnKey)", "class_method_signature": "KeyedObjects2D.removeObject(Comparable rowKey, Comparable columnKey)", "testcase": false, "constructor": false}, {"identifier": "removeRow", "parameters": "(int rowIndex)", "modifiers": "public", "return": "void", "signature": "void removeRow(int rowIndex)", "full_signature": "public void removeRow(int rowIndex)", "class_method_signature": "KeyedObjects2D.removeRow(int rowIndex)", "testcase": false, "constructor": false}, {"identifier": "removeRow", "parameters": "(Comparable rowKey)", "modifiers": "public", "return": "void", "signature": "void removeRow(Comparable rowKey)", "full_signature": "public void removeRow(Comparable rowKey)", "class_method_signature": "KeyedObjects2D.removeRow(Comparable rowKey)", "testcase": false, "constructor": false}, {"identifier": "removeColumn", "parameters": "(int columnIndex)", "modifiers": "public", "return": "void", "signature": "void removeColumn(int columnIndex)", "full_signature": "public void removeColumn(int columnIndex)", "class_method_signature": "KeyedObjects2D.removeColumn(int columnIndex)", "testcase": false, "constructor": false}, {"identifier": "removeColumn", "parameters": "(Comparable columnKey)", "modifiers": "public", "return": "void", "signature": "void removeColumn(Comparable columnKey)", "full_signature": "public void removeColumn(Comparable columnKey)", "class_method_signature": "KeyedObjects2D.removeColumn(Comparable columnKey)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "KeyedObjects2D.clear()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "KeyedObjects2D.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "KeyedObjects2D.hashCode()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object clone()", "full_signature": "public Object clone()", "class_method_signature": "KeyedObjects2D.clone()", "testcase": false, "constructor": false}], "file": "source/org/jfree/data/KeyedObjects2D.java"}, "focal_method": {"identifier": "setObject", "parameters": "(Object object, Comparable rowKey,\n            Comparable columnKey)", "modifiers": "public", "return": "void", "body": "public void setObject(Object object, Comparable rowKey,\n            Comparable columnKey) {\n\n        if (rowKey == null) {\n            throw new IllegalArgumentException(\"Null 'rowKey' argument.\");\n        }\n        if (columnKey == null) {\n            throw new IllegalArgumentException(\"Null 'columnKey' argument.\");\n        }\n        KeyedObjects row;\n        int rowIndex = this.rowKeys.indexOf(rowKey);\n        if (rowIndex >= 0) {\n            row = (KeyedObjects) this.rows.get(rowIndex);\n        }\n        else {\n            this.rowKeys.add(rowKey);\n            row = new KeyedObjects();\n            this.rows.add(row);\n        }\n        row.setObject(columnKey, object);\n        int columnIndex = this.columnKeys.indexOf(columnKey);\n        if (columnIndex < 0) {\n            this.columnKeys.add(columnKey);\n        }\n\n    }", "signature": "void setObject(Object object, Comparable rowKey,\n            Comparable columnKey)", "full_signature": "public void setObject(Object object, Comparable rowKey,\n            Comparable columnKey)", "class_method_signature": "KeyedObjects2D.setObject(Object object, Comparable rowKey,\n            Comparable columnKey)", "testcase": false, "constructor": false, "invocations": ["indexOf", "get", "add", "add", "setObject", "indexOf", "add"]}, "repository": {"repo_id": "Chart_1_buggy"}}