{"test_class": {"identifier": "MatrixSeriesTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/data/xy/junit/MatrixSeriesTests.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testEquals() {\n\n        MatrixSeries m1 = new MatrixSeries(\"Test\", 8, 3);\n        m1.update(0, 0, 11.0);\n        m1.update(7, 2, 22.0);\n        MatrixSeries m2 = new MatrixSeries(\"Test\", 8, 3);\n        m2.update(0, 0, 11.0);\n        m2.update(7, 2, 22.0);\n        assertTrue(m1.equals(m2));\n        assertTrue(m2.equals(m1));\n\n        m1 = new MatrixSeries(\"Test 2\", 8, 3);\n        assertFalse(m1.equals(m2));\n        m2 = new MatrixSeries(\"Test 2\", 8, 3);\n        assertTrue(m1.equals(m2));\n\n        m1 = new MatrixSeries(\"Test 2\", 10, 3);\n        assertFalse(m1.equals(m2));\n        m2 = new MatrixSeries(\"Test 2\", 10, 3);\n        assertTrue(m1.equals(m2));\n\n        m1 = new MatrixSeries(\"Test 2\", 10, 5);\n        assertFalse(m1.equals(m2));\n        m2 = new MatrixSeries(\"Test 2\", 10, 5);\n        assertTrue(m1.equals(m2));\n\n        m1.update(0, 0, 99);\n        assertFalse(m1.equals(m2));\n        m2.update(0, 0, 99);\n        assertTrue(m1.equals(m2));\n    }", "signature": "void testEquals()", "full_signature": "public void testEquals()", "class_method_signature": "MatrixSeriesTests.testEquals()", "testcase": true, "constructor": false, "invocations": ["update", "update", "update", "update", "assertTrue", "equals", "assertTrue", "equals", "assertFalse", "equals", "assertTrue", "equals", "assertFalse", "equals", "assertTrue", "equals", "assertFalse", "equals", "assertTrue", "equals", "update", "assertFalse", "equals", "update", "assertTrue", "equals"]}, "focal_class": {"identifier": "MatrixSeries", "superclass": "extends Series", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final long serialVersionUID = 7934188527308315704L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 7934188527308315704L", "var_name": "serialVersionUID"}, {"original_string": "protected double[][] data;", "modifier": "protected", "type": "double[][]", "declarator": "data", "var_name": "data"}], "methods": [{"identifier": "MatrixSeries", "parameters": "(String name, int rows, int columns)", "modifiers": "public", "return": "", "signature": " MatrixSeries(String name, int rows, int columns)", "full_signature": "public  MatrixSeries(String name, int rows, int columns)", "class_method_signature": "MatrixSeries.MatrixSeries(String name, int rows, int columns)", "testcase": false, "constructor": true}, {"identifier": "getColumnsCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getColumnsCount()", "full_signature": "public int getColumnsCount()", "class_method_signature": "MatrixSeries.getColumnsCount()", "testcase": false, "constructor": false}, {"identifier": "getItem", "parameters": "(int itemIndex)", "modifiers": "public", "return": "Number", "signature": "Number getItem(int itemIndex)", "full_signature": "public Number getItem(int itemIndex)", "class_method_signature": "MatrixSeries.getItem(int itemIndex)", "testcase": false, "constructor": false}, {"identifier": "getItemColumn", "parameters": "(int itemIndex)", "modifiers": "public", "return": "int", "signature": "int getItemColumn(int itemIndex)", "full_signature": "public int getItemColumn(int itemIndex)", "class_method_signature": "MatrixSeries.getItemColumn(int itemIndex)", "testcase": false, "constructor": false}, {"identifier": "getItemCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getItemCount()", "full_signature": "public int getItemCount()", "class_method_signature": "MatrixSeries.getItemCount()", "testcase": false, "constructor": false}, {"identifier": "getItemRow", "parameters": "(int itemIndex)", "modifiers": "public", "return": "int", "signature": "int getItemRow(int itemIndex)", "full_signature": "public int getItemRow(int itemIndex)", "class_method_signature": "MatrixSeries.getItemRow(int itemIndex)", "testcase": false, "constructor": false}, {"identifier": "getRowCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getRowCount()", "full_signature": "public int getRowCount()", "class_method_signature": "MatrixSeries.getRowCount()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(int i, int j)", "modifiers": "public", "return": "double", "signature": "double get(int i, int j)", "full_signature": "public double get(int i, int j)", "class_method_signature": "MatrixSeries.get(int i, int j)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(int i, int j, double mij)", "modifiers": "public", "return": "void", "signature": "void update(int i, int j, double mij)", "full_signature": "public void update(int i, int j, double mij)", "class_method_signature": "MatrixSeries.update(int i, int j, double mij)", "testcase": false, "constructor": false}, {"identifier": "zeroAll", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void zeroAll()", "full_signature": "public void zeroAll()", "class_method_signature": "MatrixSeries.zeroAll()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "MatrixSeries.equals(Object obj)", "testcase": false, "constructor": false}], "file": "source/org/jfree/data/xy/MatrixSeries.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "body": "public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof MatrixSeries)) {\n            return false;\n        }\n        MatrixSeries that = (MatrixSeries) obj;\n        if (!(getRowCount() == that.getRowCount())) {\n            return false;\n        }\n        if (!(getColumnsCount() == that.getColumnsCount())) {\n            return false;\n        }\n        for (int r = 0; r < getRowCount(); r++) {\n            for (int c = 0; c < getColumnsCount(); c++) {\n                if (get(r, c) != that.get(r, c)) {\n                    return false;\n                }\n            }\n        }\n        return super.equals(obj);\n    }", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "MatrixSeries.equals(Object obj)", "testcase": false, "constructor": false, "invocations": ["getRowCount", "getRowCount", "getColumnsCount", "getColumnsCount", "getRowCount", "getColumnsCount", "get", "get", "equals"]}, "repository": {"repo_id": "Chart_1_buggy"}}