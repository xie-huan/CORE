{"test_class": {"identifier": "DefaultOHLCDatasetTests", "superclass": "extends TestCase", "interfaces": "", "fields": [{"original_string": "private static final double EPSILON = 0.0000000001;", "modifier": "private static final", "type": "double", "declarator": "EPSILON = 0.0000000001", "var_name": "EPSILON"}], "file": "tests/org/jfree/data/xy/junit/DefaultOHLCDatasetTests.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testEquals() {\n        DefaultOHLCDataset d1 = new DefaultOHLCDataset(\"Series 1\",\n                new OHLCDataItem[0]);\n        DefaultOHLCDataset d2 = new DefaultOHLCDataset(\"Series 1\",\n                new OHLCDataItem[0]);\n        assertTrue(d1.equals(d2));\n        assertTrue(d2.equals(d1));\n\n        d1 = new DefaultOHLCDataset(\"Series 2\", new OHLCDataItem[0]);\n        assertFalse(d1.equals(d2));\n        d2 = new DefaultOHLCDataset(\"Series 2\", new OHLCDataItem[0]);\n        assertTrue(d1.equals(d2));\n\n        d1 = new DefaultOHLCDataset(\"Series 2\", new OHLCDataItem[] {\n                new OHLCDataItem(new Date(123L), 1.2, 3.4, 5.6, 7.8, 99.9)});\n        assertFalse(d1.equals(d2));\n        d2 = new DefaultOHLCDataset(\"Series 2\", new OHLCDataItem[] {\n                new OHLCDataItem(new Date(123L), 1.2, 3.4, 5.6, 7.8, 99.9)});\n        assertTrue(d1.equals(d2));\n\n    }", "signature": "void testEquals()", "full_signature": "public void testEquals()", "class_method_signature": "DefaultOHLCDatasetTests.testEquals()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "equals", "assertTrue", "equals", "assertFalse", "equals", "assertTrue", "equals", "assertFalse", "equals", "assertTrue", "equals"]}, "focal_class": {"identifier": "DefaultOHLCDataset", "superclass": "extends AbstractXYDataset", "interfaces": "implements OHLCDataset, PublicCloneable", "fields": [{"original_string": "private Comparable key;", "modifier": "private", "type": "Comparable", "declarator": "key", "var_name": "key"}, {"original_string": "private OHLCDataItem[] data;", "modifier": "private", "type": "OHLCDataItem[]", "declarator": "data", "var_name": "data"}], "methods": [{"identifier": "DefaultOHLCDataset", "parameters": "(Comparable key, OHLCDataItem[] data)", "modifiers": "public", "return": "", "signature": " DefaultOHLCDataset(Comparable key, OHLCDataItem[] data)", "full_signature": "public  DefaultOHLCDataset(Comparable key, OHLCDataItem[] data)", "class_method_signature": "DefaultOHLCDataset.DefaultOHLCDataset(Comparable key, OHLCDataItem[] data)", "testcase": false, "constructor": true}, {"identifier": "getSeriesKey", "parameters": "(int series)", "modifiers": "public", "return": "Comparable", "signature": "Comparable getSeriesKey(int series)", "full_signature": "public Comparable getSeriesKey(int series)", "class_method_signature": "DefaultOHLCDataset.getSeriesKey(int series)", "testcase": false, "constructor": false}, {"identifier": "getX", "parameters": "(int series, int item)", "modifiers": "public", "return": "Number", "signature": "Number getX(int series, int item)", "full_signature": "public Number getX(int series, int item)", "class_method_signature": "DefaultOHLCDataset.getX(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "getXDate", "parameters": "(int series, int item)", "modifiers": "public", "return": "Date", "signature": "Date getXDate(int series, int item)", "full_signature": "public Date getXDate(int series, int item)", "class_method_signature": "DefaultOHLCDataset.getXDate(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "getY", "parameters": "(int series, int item)", "modifiers": "public", "return": "Number", "signature": "Number getY(int series, int item)", "full_signature": "public Number getY(int series, int item)", "class_method_signature": "DefaultOHLCDataset.getY(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "getHigh", "parameters": "(int series, int item)", "modifiers": "public", "return": "Number", "signature": "Number getHigh(int series, int item)", "full_signature": "public Number getHigh(int series, int item)", "class_method_signature": "DefaultOHLCDataset.getHigh(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "getHighValue", "parameters": "(int series, int item)", "modifiers": "public", "return": "double", "signature": "double getHighValue(int series, int item)", "full_signature": "public double getHighValue(int series, int item)", "class_method_signature": "DefaultOHLCDataset.getHighValue(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "getLow", "parameters": "(int series, int item)", "modifiers": "public", "return": "Number", "signature": "Number getLow(int series, int item)", "full_signature": "public Number getLow(int series, int item)", "class_method_signature": "DefaultOHLCDataset.getLow(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "getLowValue", "parameters": "(int series, int item)", "modifiers": "public", "return": "double", "signature": "double getLowValue(int series, int item)", "full_signature": "public double getLowValue(int series, int item)", "class_method_signature": "DefaultOHLCDataset.getLowValue(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "getOpen", "parameters": "(int series, int item)", "modifiers": "public", "return": "Number", "signature": "Number getOpen(int series, int item)", "full_signature": "public Number getOpen(int series, int item)", "class_method_signature": "DefaultOHLCDataset.getOpen(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "getOpenValue", "parameters": "(int series, int item)", "modifiers": "public", "return": "double", "signature": "double getOpenValue(int series, int item)", "full_signature": "public double getOpenValue(int series, int item)", "class_method_signature": "DefaultOHLCDataset.getOpenValue(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "getClose", "parameters": "(int series, int item)", "modifiers": "public", "return": "Number", "signature": "Number getClose(int series, int item)", "full_signature": "public Number getClose(int series, int item)", "class_method_signature": "DefaultOHLCDataset.getClose(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "getCloseValue", "parameters": "(int series, int item)", "modifiers": "public", "return": "double", "signature": "double getCloseValue(int series, int item)", "full_signature": "public double getCloseValue(int series, int item)", "class_method_signature": "DefaultOHLCDataset.getCloseValue(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "getVolume", "parameters": "(int series, int item)", "modifiers": "public", "return": "Number", "signature": "Number getVolume(int series, int item)", "full_signature": "public Number getVolume(int series, int item)", "class_method_signature": "DefaultOHLCDataset.getVolume(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "getVolumeValue", "parameters": "(int series, int item)", "modifiers": "public", "return": "double", "signature": "double getVolumeValue(int series, int item)", "full_signature": "public double getVolumeValue(int series, int item)", "class_method_signature": "DefaultOHLCDataset.getVolumeValue(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "getSeriesCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSeriesCount()", "full_signature": "public int getSeriesCount()", "class_method_signature": "DefaultOHLCDataset.getSeriesCount()", "testcase": false, "constructor": false}, {"identifier": "getItemCount", "parameters": "(int series)", "modifiers": "public", "return": "int", "signature": "int getItemCount(int series)", "full_signature": "public int getItemCount(int series)", "class_method_signature": "DefaultOHLCDataset.getItemCount(int series)", "testcase": false, "constructor": false}, {"identifier": "sortDataByDate", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void sortDataByDate()", "full_signature": "public void sortDataByDate()", "class_method_signature": "DefaultOHLCDataset.sortDataByDate()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "DefaultOHLCDataset.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object clone()", "full_signature": "public Object clone()", "class_method_signature": "DefaultOHLCDataset.clone()", "testcase": false, "constructor": false}], "file": "source/org/jfree/data/xy/DefaultOHLCDataset.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "body": "public boolean equals(Object obj) {\n        if (this == obj) {\n            return true;\n        }\n        if (!(obj instanceof DefaultOHLCDataset)) {\n            return false;\n        }\n        DefaultOHLCDataset that = (DefaultOHLCDataset) obj;\n        if (!this.key.equals(that.key)) {\n            return false;\n        }\n        if (!Arrays.equals(this.data, that.data)) {\n            return false;\n        }\n        return true;\n    }", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "DefaultOHLCDataset.equals(Object obj)", "testcase": false, "constructor": false, "invocations": ["equals", "equals"]}, "repository": {"repo_id": "Chart_1_buggy"}}