{"test_class": {"identifier": "OHLCSeriesTests", "superclass": "extends TestCase", "interfaces": "implements SeriesChangeListener", "fields": [{"original_string": "SeriesChangeEvent lastEvent;", "modifier": "", "type": "SeriesChangeEvent", "declarator": "lastEvent", "var_name": "lastEvent"}], "file": "tests/org/jfree/data/time/ohlc/junit/OHLCSeriesTests.java"}, "test_case": {"identifier": "testCloning", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testCloning() {\n        OHLCSeries s1 = new OHLCSeries(\"s1\");\n        s1.add(new Year(2006), 2.0, 4.0, 1.0, 3.0);\n        OHLCSeries s2 = null;\n        try {\n            s2 = (OHLCSeries) s1.clone();\n        }\n        catch (CloneNotSupportedException e) {\n            e.printStackTrace();\n        }\n        assertTrue(s1 != s2);\n        assertTrue(s1.getClass() == s2.getClass());\n        assertTrue(s1.equals(s2));\n    }", "signature": "void testCloning()", "full_signature": "public void testCloning()", "class_method_signature": "OHLCSeriesTests.testCloning()", "testcase": true, "constructor": false, "invocations": ["add", "clone", "printStackTrace", "assertTrue", "assertTrue", "getClass", "getClass", "assertTrue", "equals"]}, "focal_class": {"identifier": "OHLCSeries", "superclass": "extends ComparableObjectSeries", "interfaces": "", "fields": [], "methods": [{"identifier": "OHLCSeries", "parameters": "(Comparable key)", "modifiers": "public", "return": "", "signature": " OHLCSeries(Comparable key)", "full_signature": "public  OHLCSeries(Comparable key)", "class_method_signature": "OHLCSeries.OHLCSeries(Comparable key)", "testcase": false, "constructor": true}, {"identifier": "getPeriod", "parameters": "(int index)", "modifiers": "public", "return": "RegularTimePeriod", "signature": "RegularTimePeriod getPeriod(int index)", "full_signature": "public RegularTimePeriod getPeriod(int index)", "class_method_signature": "OHLCSeries.getPeriod(int index)", "testcase": false, "constructor": false}, {"identifier": "getDataItem", "parameters": "(int index)", "modifiers": "public", "return": "ComparableObjectItem", "signature": "ComparableObjectItem getDataItem(int index)", "full_signature": "public ComparableObjectItem getDataItem(int index)", "class_method_signature": "OHLCSeries.getDataItem(int index)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(RegularTimePeriod period, double open, double high,\n            double low, double close)", "modifiers": "public", "return": "void", "signature": "void add(RegularTimePeriod period, double open, double high,\n            double low, double close)", "full_signature": "public void add(RegularTimePeriod period, double open, double high,\n            double low, double close)", "class_method_signature": "OHLCSeries.add(RegularTimePeriod period, double open, double high,\n            double low, double close)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(int index)", "modifiers": "public", "return": "ComparableObjectItem", "signature": "ComparableObjectItem remove(int index)", "full_signature": "public ComparableObjectItem remove(int index)", "class_method_signature": "OHLCSeries.remove(int index)", "testcase": false, "constructor": false}], "file": "source/org/jfree/data/time/ohlc/OHLCSeries.java"}, "focal_method": {"identifier": "add", "parameters": "(RegularTimePeriod period, double open, double high,\n            double low, double close)", "modifiers": "public", "return": "void", "body": "public void add(RegularTimePeriod period, double open, double high,\n            double low, double close) {\n        if (getItemCount() > 0) {\n            OHLCItem item0 = (OHLCItem) this.getDataItem(0);\n            if (!period.getClass().equals(item0.getPeriod().getClass())) {\n                throw new IllegalArgumentException(\n                        \"Can't mix RegularTimePeriod class types.\");\n            }\n        }\n        super.add(new OHLCItem(period, open, high, low, close), true);\n    }", "signature": "void add(RegularTimePeriod period, double open, double high,\n            double low, double close)", "full_signature": "public void add(RegularTimePeriod period, double open, double high,\n            double low, double close)", "class_method_signature": "OHLCSeries.add(RegularTimePeriod period, double open, double high,\n            double low, double close)", "testcase": false, "constructor": false, "invocations": ["getItemCount", "getDataItem", "equals", "getClass", "getClass", "getPeriod", "add"]}, "repository": {"repo_id": "Chart_1_buggy"}}