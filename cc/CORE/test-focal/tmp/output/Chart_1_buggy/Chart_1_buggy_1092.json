{"test_class": {"identifier": "DefaultStatisticalCategoryDatasetTests", "superclass": "extends TestCase", "interfaces": "", "fields": [{"original_string": "private static final double EPSILON = 0.0000000001;", "modifier": "private static final", "type": "double", "declarator": "EPSILON = 0.0000000001", "var_name": "EPSILON"}], "file": "tests/org/jfree/data/statistics/junit/DefaultStatisticalCategoryDatasetTests.java"}, "test_case": {"identifier": "testSerialization1", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testSerialization1() {\n        DefaultStatisticalCategoryDataset d1\n            = new DefaultStatisticalCategoryDataset();\n        d1.add(1.1, 2.2, \"R1\", \"C1\");\n        d1.add(3.3, 4.4, \"R1\", \"C2\");\n        d1.add(null, new Double(5.5), \"R1\", \"C3\");\n        d1.add(new Double(6.6), null, \"R2\", \"C3\");\n        DefaultStatisticalCategoryDataset d2 = null;\n        try {\n            ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n            ObjectOutput out = new ObjectOutputStream(buffer);\n            out.writeObject(d1);\n            out.close();\n\n            ObjectInput in = new ObjectInputStream(\n                    new ByteArrayInputStream(buffer.toByteArray()));\n            d2 = (DefaultStatisticalCategoryDataset) in.readObject();\n            in.close();\n        }\n        catch (Exception e) {\n            fail(e.toString());\n        }\n        assertEquals(d1, d2);\n    }", "signature": "void testSerialization1()", "full_signature": "public void testSerialization1()", "class_method_signature": "DefaultStatisticalCategoryDatasetTests.testSerialization1()", "testcase": true, "constructor": false, "invocations": ["add", "add", "add", "add", "writeObject", "close", "toByteArray", "readObject", "close", "fail", "toString", "assertEquals"]}, "focal_class": {"identifier": "DefaultStatisticalCategoryDataset", "superclass": "extends AbstractDataset", "interfaces": "implements StatisticalCategoryDataset, RangeInfo, PublicCloneable", "fields": [{"original_string": "private KeyedObjects2D data;", "modifier": "private", "type": "KeyedObjects2D", "declarator": "data", "var_name": "data"}, {"original_string": "private double minimumRangeValue;", "modifier": "private", "type": "double", "declarator": "minimumRangeValue", "var_name": "minimumRangeValue"}, {"original_string": "private int minimumRangeValueRow;", "modifier": "private", "type": "int", "declarator": "minimumRangeValueRow", "var_name": "minimumRangeValueRow"}, {"original_string": "private int minimumRangeValueColumn;", "modifier": "private", "type": "int", "declarator": "minimumRangeValueColumn", "var_name": "minimumRangeValueColumn"}, {"original_string": "private double minimumRangeValueIncStdDev;", "modifier": "private", "type": "double", "declarator": "minimumRangeValueIncStdDev", "var_name": "minimumRangeValueIncStdDev"}, {"original_string": "private int minimumRangeValueIncStdDevRow;", "modifier": "private", "type": "int", "declarator": "minimumRangeValueIncStdDevRow", "var_name": "minimumRangeValueIncStdDevRow"}, {"original_string": "private int minimumRangeValueIncStdDevColumn;", "modifier": "private", "type": "int", "declarator": "minimumRangeValueIncStdDevColumn", "var_name": "minimumRangeValueIncStdDevColumn"}, {"original_string": "private double maximumRangeValue;", "modifier": "private", "type": "double", "declarator": "maximumRangeValue", "var_name": "maximumRangeValue"}, {"original_string": "private int maximumRangeValueRow;", "modifier": "private", "type": "int", "declarator": "maximumRangeValueRow", "var_name": "maximumRangeValueRow"}, {"original_string": "private int maximumRangeValueColumn;", "modifier": "private", "type": "int", "declarator": "maximumRangeValueColumn", "var_name": "maximumRangeValueColumn"}, {"original_string": "private double maximumRangeValueIncStdDev;", "modifier": "private", "type": "double", "declarator": "maximumRangeValueIncStdDev", "var_name": "maximumRangeValueIncStdDev"}, {"original_string": "private int maximumRangeValueIncStdDevRow;", "modifier": "private", "type": "int", "declarator": "maximumRangeValueIncStdDevRow", "var_name": "maximumRangeValueIncStdDevRow"}, {"original_string": "private int maximumRangeValueIncStdDevColumn;", "modifier": "private", "type": "int", "declarator": "maximumRangeValueIncStdDevColumn", "var_name": "maximumRangeValueIncStdDevColumn"}], "methods": [{"identifier": "DefaultStatisticalCategoryDataset", "parameters": "()", "modifiers": "public", "return": "", "signature": " DefaultStatisticalCategoryDataset()", "full_signature": "public  DefaultStatisticalCategoryDataset()", "class_method_signature": "DefaultStatisticalCategoryDataset.DefaultStatisticalCategoryDataset()", "testcase": false, "constructor": true}, {"identifier": "getMeanValue", "parameters": "(int row, int column)", "modifiers": "public", "return": "Number", "signature": "Number getMeanValue(int row, int column)", "full_signature": "public Number getMeanValue(int row, int column)", "class_method_signature": "DefaultStatisticalCategoryDataset.getMeanValue(int row, int column)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(int row, int column)", "modifiers": "public", "return": "Number", "signature": "Number getValue(int row, int column)", "full_signature": "public Number getValue(int row, int column)", "class_method_signature": "DefaultStatisticalCategoryDataset.getValue(int row, int column)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(Comparable rowKey, Comparable columnKey)", "modifiers": "public", "return": "Number", "signature": "Number getValue(Comparable rowKey, Comparable columnKey)", "full_signature": "public Number getValue(Comparable rowKey, Comparable columnKey)", "class_method_signature": "DefaultStatisticalCategoryDataset.getValue(Comparable rowKey, Comparable columnKey)", "testcase": false, "constructor": false}, {"identifier": "getMeanValue", "parameters": "(Comparable rowKey, Comparable columnKey)", "modifiers": "public", "return": "Number", "signature": "Number getMeanValue(Comparable rowKey, Comparable columnKey)", "full_signature": "public Number getMeanValue(Comparable rowKey, Comparable columnKey)", "class_method_signature": "DefaultStatisticalCategoryDataset.getMeanValue(Comparable rowKey, Comparable columnKey)", "testcase": false, "constructor": false}, {"identifier": "getStdDevValue", "parameters": "(int row, int column)", "modifiers": "public", "return": "Number", "signature": "Number getStdDevValue(int row, int column)", "full_signature": "public Number getStdDevValue(int row, int column)", "class_method_signature": "DefaultStatisticalCategoryDataset.getStdDevValue(int row, int column)", "testcase": false, "constructor": false}, {"identifier": "getStdDevValue", "parameters": "(Comparable rowKey, Comparable columnKey)", "modifiers": "public", "return": "Number", "signature": "Number getStdDevValue(Comparable rowKey, Comparable columnKey)", "full_signature": "public Number getStdDevValue(Comparable rowKey, Comparable columnKey)", "class_method_signature": "DefaultStatisticalCategoryDataset.getStdDevValue(Comparable rowKey, Comparable columnKey)", "testcase": false, "constructor": false}, {"identifier": "getColumnIndex", "parameters": "(Comparable key)", "modifiers": "public", "return": "int", "signature": "int getColumnIndex(Comparable key)", "full_signature": "public int getColumnIndex(Comparable key)", "class_method_signature": "DefaultStatisticalCategoryDataset.getColumnIndex(Comparable key)", "testcase": false, "constructor": false}, {"identifier": "getColumnKey", "parameters": "(int column)", "modifiers": "public", "return": "Comparable", "signature": "Comparable getColumnKey(int column)", "full_signature": "public Comparable getColumnKey(int column)", "class_method_signature": "DefaultStatisticalCategoryDataset.getColumnKey(int column)", "testcase": false, "constructor": false}, {"identifier": "getColumnKeys", "parameters": "()", "modifiers": "public", "return": "List", "signature": "List getColumnKeys()", "full_signature": "public List getColumnKeys()", "class_method_signature": "DefaultStatisticalCategoryDataset.getColumnKeys()", "testcase": false, "constructor": false}, {"identifier": "getRowIndex", "parameters": "(Comparable key)", "modifiers": "public", "return": "int", "signature": "int getRowIndex(Comparable key)", "full_signature": "public int getRowIndex(Comparable key)", "class_method_signature": "DefaultStatisticalCategoryDataset.getRowIndex(Comparable key)", "testcase": false, "constructor": false}, {"identifier": "getRowKey", "parameters": "(int row)", "modifiers": "public", "return": "Comparable", "signature": "Comparable getRowKey(int row)", "full_signature": "public Comparable getRowKey(int row)", "class_method_signature": "DefaultStatisticalCategoryDataset.getRowKey(int row)", "testcase": false, "constructor": false}, {"identifier": "getRowKeys", "parameters": "()", "modifiers": "public", "return": "List", "signature": "List getRowKeys()", "full_signature": "public List getRowKeys()", "class_method_signature": "DefaultStatisticalCategoryDataset.getRowKeys()", "testcase": false, "constructor": false}, {"identifier": "getRowCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getRowCount()", "full_signature": "public int getRowCount()", "class_method_signature": "DefaultStatisticalCategoryDataset.getRowCount()", "testcase": false, "constructor": false}, {"identifier": "getColumnCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getColumnCount()", "full_signature": "public int getColumnCount()", "class_method_signature": "DefaultStatisticalCategoryDataset.getColumnCount()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(double mean, double standardDeviation,\n                    Comparable rowKey, Comparable columnKey)", "modifiers": "public", "return": "void", "signature": "void add(double mean, double standardDeviation,\n                    Comparable rowKey, Comparable columnKey)", "full_signature": "public void add(double mean, double standardDeviation,\n                    Comparable rowKey, Comparable columnKey)", "class_method_signature": "DefaultStatisticalCategoryDataset.add(double mean, double standardDeviation,\n                    Comparable rowKey, Comparable columnKey)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(Number mean, Number standardDeviation,\n                    Comparable rowKey, Comparable columnKey)", "modifiers": "public", "return": "void", "signature": "void add(Number mean, Number standardDeviation,\n                    Comparable rowKey, Comparable columnKey)", "full_signature": "public void add(Number mean, Number standardDeviation,\n                    Comparable rowKey, Comparable columnKey)", "class_method_signature": "DefaultStatisticalCategoryDataset.add(Number mean, Number standardDeviation,\n                    Comparable rowKey, Comparable columnKey)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(Comparable rowKey, Comparable columnKey)", "modifiers": "public", "return": "void", "signature": "void remove(Comparable rowKey, Comparable columnKey)", "full_signature": "public void remove(Comparable rowKey, Comparable columnKey)", "class_method_signature": "DefaultStatisticalCategoryDataset.remove(Comparable rowKey, Comparable columnKey)", "testcase": false, "constructor": false}, {"identifier": "removeRow", "parameters": "(int rowIndex)", "modifiers": "public", "return": "void", "signature": "void removeRow(int rowIndex)", "full_signature": "public void removeRow(int rowIndex)", "class_method_signature": "DefaultStatisticalCategoryDataset.removeRow(int rowIndex)", "testcase": false, "constructor": false}, {"identifier": "removeRow", "parameters": "(Comparable rowKey)", "modifiers": "public", "return": "void", "signature": "void removeRow(Comparable rowKey)", "full_signature": "public void removeRow(Comparable rowKey)", "class_method_signature": "DefaultStatisticalCategoryDataset.removeRow(Comparable rowKey)", "testcase": false, "constructor": false}, {"identifier": "removeColumn", "parameters": "(int columnIndex)", "modifiers": "public", "return": "void", "signature": "void removeColumn(int columnIndex)", "full_signature": "public void removeColumn(int columnIndex)", "class_method_signature": "DefaultStatisticalCategoryDataset.removeColumn(int columnIndex)", "testcase": false, "constructor": false}, {"identifier": "removeColumn", "parameters": "(Comparable columnKey)", "modifiers": "public", "return": "void", "signature": "void removeColumn(Comparable columnKey)", "full_signature": "public void removeColumn(Comparable columnKey)", "class_method_signature": "DefaultStatisticalCategoryDataset.removeColumn(Comparable columnKey)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "DefaultStatisticalCategoryDataset.clear()", "testcase": false, "constructor": false}, {"identifier": "updateBounds", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void updateBounds()", "full_signature": "private void updateBounds()", "class_method_signature": "DefaultStatisticalCategoryDataset.updateBounds()", "testcase": false, "constructor": false}, {"identifier": "getRangeLowerBound", "parameters": "(boolean includeInterval)", "modifiers": "public", "return": "double", "signature": "double getRangeLowerBound(boolean includeInterval)", "full_signature": "public double getRangeLowerBound(boolean includeInterval)", "class_method_signature": "DefaultStatisticalCategoryDataset.getRangeLowerBound(boolean includeInterval)", "testcase": false, "constructor": false}, {"identifier": "getRangeUpperBound", "parameters": "(boolean includeInterval)", "modifiers": "public", "return": "double", "signature": "double getRangeUpperBound(boolean includeInterval)", "full_signature": "public double getRangeUpperBound(boolean includeInterval)", "class_method_signature": "DefaultStatisticalCategoryDataset.getRangeUpperBound(boolean includeInterval)", "testcase": false, "constructor": false}, {"identifier": "getRangeBounds", "parameters": "(boolean includeInterval)", "modifiers": "public", "return": "Range", "signature": "Range getRangeBounds(boolean includeInterval)", "full_signature": "public Range getRangeBounds(boolean includeInterval)", "class_method_signature": "DefaultStatisticalCategoryDataset.getRangeBounds(boolean includeInterval)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "DefaultStatisticalCategoryDataset.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object clone()", "full_signature": "public Object clone()", "class_method_signature": "DefaultStatisticalCategoryDataset.clone()", "testcase": false, "constructor": false}], "file": "source/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java"}, "focal_method": {"identifier": "add", "parameters": "(double mean, double standardDeviation,\n                    Comparable rowKey, Comparable columnKey)", "modifiers": "public", "return": "void", "body": "public void add(double mean, double standardDeviation,\n                    Comparable rowKey, Comparable columnKey) {\n        add(new Double(mean), new Double(standardDeviation), rowKey, columnKey);\n    }", "signature": "void add(double mean, double standardDeviation,\n                    Comparable rowKey, Comparable columnKey)", "full_signature": "public void add(double mean, double standardDeviation,\n                    Comparable rowKey, Comparable columnKey)", "class_method_signature": "DefaultStatisticalCategoryDataset.add(double mean, double standardDeviation,\n                    Comparable rowKey, Comparable columnKey)", "testcase": false, "constructor": false, "invocations": ["add"]}, "repository": {"repo_id": "Chart_1_buggy"}}