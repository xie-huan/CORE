{"test_class": {"identifier": "CategoryLineAnnotationTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/chart/annotations/junit/CategoryLineAnnotationTests.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testEquals() {\n\n        BasicStroke s1 = new BasicStroke(1.0f);\n        BasicStroke s2 = new BasicStroke(2.0f);\n        CategoryLineAnnotation a1 = new CategoryLineAnnotation(\"Category 1\",\n                1.0, \"Category 2\", 2.0, Color.red, s1);\n        CategoryLineAnnotation a2 = new CategoryLineAnnotation(\"Category 1\",\n                1.0, \"Category 2\", 2.0, Color.red, s1);\n        assertTrue(a1.equals(a2));\n        assertTrue(a2.equals(a1));\n\n        // category 1\n        a1.setCategory1(\"Category A\");\n        assertFalse(a1.equals(a2));\n        a2.setCategory1(\"Category A\");\n        assertTrue(a1.equals(a2));\n\n        // value 1\n        a1.setValue1(0.15);\n        assertFalse(a1.equals(a2));\n        a2.setValue1(0.15);\n        assertTrue(a1.equals(a2));\n\n        // category 2\n        a1.setCategory2(\"Category B\");\n        assertFalse(a1.equals(a2));\n        a2.setCategory2(\"Category B\");\n        assertTrue(a1.equals(a2));\n\n        // value 2\n        a1.setValue2(0.25);\n        assertFalse(a1.equals(a2));\n        a2.setValue2(0.25);\n        assertTrue(a1.equals(a2));\n\n        // paint\n        a1.setPaint(Color.yellow);\n        assertFalse(a1.equals(a2));\n        a2.setPaint(Color.yellow);\n        assertTrue(a1.equals(a2));\n\n        // stroke\n        a1.setStroke(s2);\n        assertFalse(a1.equals(a2));\n        a2.setStroke(s2);\n        assertTrue(a1.equals(a2));\n    }", "signature": "void testEquals()", "full_signature": "public void testEquals()", "class_method_signature": "CategoryLineAnnotationTests.testEquals()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "equals", "assertTrue", "equals", "setCategory1", "assertFalse", "equals", "setCategory1", "assertTrue", "equals", "setValue1", "assertFalse", "equals", "setValue1", "assertTrue", "equals", "setCategory2", "assertFalse", "equals", "setCategory2", "assertTrue", "equals", "setValue2", "assertFalse", "equals", "setValue2", "assertTrue", "equals", "setPaint", "assertFalse", "equals", "setPaint", "assertTrue", "equals", "setStroke", "assertFalse", "equals", "setStroke", "assertTrue", "equals"]}, "focal_class": {"identifier": "CategoryLineAnnotation", "superclass": "extends AbstractAnnotation", "interfaces": "implements CategoryAnnotation, Cloneable, PublicCloneable,\n        Serializable", "fields": [{"original_string": "static final long serialVersionUID = 3477740483341587984L;", "modifier": "static final", "type": "long", "declarator": "serialVersionUID = 3477740483341587984L", "var_name": "serialVersionUID"}, {"original_string": "private Comparable category1;", "modifier": "private", "type": "Comparable", "declarator": "category1", "var_name": "category1"}, {"original_string": "private double value1;", "modifier": "private", "type": "double", "declarator": "value1", "var_name": "value1"}, {"original_string": "private Comparable category2;", "modifier": "private", "type": "Comparable", "declarator": "category2", "var_name": "category2"}, {"original_string": "private double value2;", "modifier": "private", "type": "double", "declarator": "value2", "var_name": "value2"}, {"original_string": "private transient Paint paint = Color.black;", "modifier": "private transient", "type": "Paint", "declarator": "paint = Color.black", "var_name": "paint"}, {"original_string": "private transient Stroke stroke = new BasicStroke(1.0f);", "modifier": "private transient", "type": "Stroke", "declarator": "stroke = new BasicStroke(1.0f)", "var_name": "stroke"}], "methods": [{"identifier": "CategoryLineAnnotation", "parameters": "(Comparable category1, double value1,\n                                  Comparable category2, double value2,\n                                  Paint paint, Stroke stroke)", "modifiers": "public", "return": "", "signature": " CategoryLineAnnotation(Comparable category1, double value1,\n                                  Comparable category2, double value2,\n                                  Paint paint, Stroke stroke)", "full_signature": "public  CategoryLineAnnotation(Comparable category1, double value1,\n                                  Comparable category2, double value2,\n                                  Paint paint, Stroke stroke)", "class_method_signature": "CategoryLineAnnotation.CategoryLineAnnotation(Comparable category1, double value1,\n                                  Comparable category2, double value2,\n                                  Paint paint, Stroke stroke)", "testcase": false, "constructor": true}, {"identifier": "getCategory1", "parameters": "()", "modifiers": "public", "return": "Comparable", "signature": "Comparable getCategory1()", "full_signature": "public Comparable getCategory1()", "class_method_signature": "CategoryLineAnnotation.getCategory1()", "testcase": false, "constructor": false}, {"identifier": "setCategory1", "parameters": "(Comparable category)", "modifiers": "public", "return": "void", "signature": "void setCategory1(Comparable category)", "full_signature": "public void setCategory1(Comparable category)", "class_method_signature": "CategoryLineAnnotation.setCategory1(Comparable category)", "testcase": false, "constructor": false}, {"identifier": "getValue1", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getValue1()", "full_signature": "public double getValue1()", "class_method_signature": "CategoryLineAnnotation.getValue1()", "testcase": false, "constructor": false}, {"identifier": "setValue1", "parameters": "(double value)", "modifiers": "public", "return": "void", "signature": "void setValue1(double value)", "full_signature": "public void setValue1(double value)", "class_method_signature": "CategoryLineAnnotation.setValue1(double value)", "testcase": false, "constructor": false}, {"identifier": "getCategory2", "parameters": "()", "modifiers": "public", "return": "Comparable", "signature": "Comparable getCategory2()", "full_signature": "public Comparable getCategory2()", "class_method_signature": "CategoryLineAnnotation.getCategory2()", "testcase": false, "constructor": false}, {"identifier": "setCategory2", "parameters": "(Comparable category)", "modifiers": "public", "return": "void", "signature": "void setCategory2(Comparable category)", "full_signature": "public void setCategory2(Comparable category)", "class_method_signature": "CategoryLineAnnotation.setCategory2(Comparable category)", "testcase": false, "constructor": false}, {"identifier": "getValue2", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getValue2()", "full_signature": "public double getValue2()", "class_method_signature": "CategoryLineAnnotation.getValue2()", "testcase": false, "constructor": false}, {"identifier": "setValue2", "parameters": "(double value)", "modifiers": "public", "return": "void", "signature": "void setValue2(double value)", "full_signature": "public void setValue2(double value)", "class_method_signature": "CategoryLineAnnotation.setValue2(double value)", "testcase": false, "constructor": false}, {"identifier": "getPaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getPaint()", "full_signature": "public Paint getPaint()", "class_method_signature": "CategoryLineAnnotation.getPaint()", "testcase": false, "constructor": false}, {"identifier": "setPaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setPaint(Paint paint)", "full_signature": "public void setPaint(Paint paint)", "class_method_signature": "CategoryLineAnnotation.setPaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "getStroke", "parameters": "()", "modifiers": "public", "return": "Stroke", "signature": "Stroke getStroke()", "full_signature": "public Stroke getStroke()", "class_method_signature": "CategoryLineAnnotation.getStroke()", "testcase": false, "constructor": false}, {"identifier": "setStroke", "parameters": "(Stroke stroke)", "modifiers": "public", "return": "void", "signature": "void setStroke(Stroke stroke)", "full_signature": "public void setStroke(Stroke stroke)", "class_method_signature": "CategoryLineAnnotation.setStroke(Stroke stroke)", "testcase": false, "constructor": false}, {"identifier": "draw", "parameters": "(Graphics2D g2, CategoryPlot plot, Rectangle2D dataArea,\n            CategoryAxis domainAxis, ValueAxis rangeAxis,\n            int rendererIndex, PlotRenderingInfo info)", "modifiers": "public", "return": "void", "signature": "void draw(Graphics2D g2, CategoryPlot plot, Rectangle2D dataArea,\n            CategoryAxis domainAxis, ValueAxis rangeAxis,\n            int rendererIndex, PlotRenderingInfo info)", "full_signature": "public void draw(Graphics2D g2, CategoryPlot plot, Rectangle2D dataArea,\n            CategoryAxis domainAxis, ValueAxis rangeAxis,\n            int rendererIndex, PlotRenderingInfo info)", "class_method_signature": "CategoryLineAnnotation.draw(Graphics2D g2, CategoryPlot plot, Rectangle2D dataArea,\n            CategoryAxis domainAxis, ValueAxis rangeAxis,\n            int rendererIndex, PlotRenderingInfo info)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "CategoryLineAnnotation.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "CategoryLineAnnotation.hashCode()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object clone()", "full_signature": "public Object clone()", "class_method_signature": "CategoryLineAnnotation.clone()", "testcase": false, "constructor": false}, {"identifier": "writeObject", "parameters": "(ObjectOutputStream stream)", "modifiers": "private", "return": "void", "signature": "void writeObject(ObjectOutputStream stream)", "full_signature": "private void writeObject(ObjectOutputStream stream)", "class_method_signature": "CategoryLineAnnotation.writeObject(ObjectOutputStream stream)", "testcase": false, "constructor": false}, {"identifier": "readObject", "parameters": "(ObjectInputStream stream)", "modifiers": "private", "return": "void", "signature": "void readObject(ObjectInputStream stream)", "full_signature": "private void readObject(ObjectInputStream stream)", "class_method_signature": "CategoryLineAnnotation.readObject(ObjectInputStream stream)", "testcase": false, "constructor": false}], "file": "source/org/jfree/chart/annotations/CategoryLineAnnotation.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "body": "public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof CategoryLineAnnotation)) {\n            return false;\n        }\n        CategoryLineAnnotation that = (CategoryLineAnnotation) obj;\n        if (!this.category1.equals(that.getCategory1())) {\n            return false;\n        }\n        if (this.value1 != that.getValue1()) {\n            return false;\n        }\n        if (!this.category2.equals(that.getCategory2())) {\n            return false;\n        }\n        if (this.value2 != that.getValue2()) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.paint, that.paint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.stroke, that.stroke)) {\n            return false;\n        }\n        return true;\n    }", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "CategoryLineAnnotation.equals(Object obj)", "testcase": false, "constructor": false, "invocations": ["equals", "getCategory1", "getValue1", "equals", "getCategory2", "getValue2", "equal", "equal"]}, "repository": {"repo_id": "Chart_1_buggy"}}