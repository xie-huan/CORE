{"test_class": {"identifier": "WeekTests", "superclass": "extends TestCase", "interfaces": "", "fields": [{"original_string": "private Week w1Y1900;", "modifier": "private", "type": "Week", "declarator": "w1Y1900", "var_name": "w1Y1900"}, {"original_string": "private Week w2Y1900;", "modifier": "private", "type": "Week", "declarator": "w2Y1900", "var_name": "w2Y1900"}, {"original_string": "private Week w51Y9999;", "modifier": "private", "type": "Week", "declarator": "w51Y9999", "var_name": "w51Y9999"}, {"original_string": "private Week w52Y9999;", "modifier": "private", "type": "Week", "declarator": "w52Y9999", "var_name": "w52Y9999"}], "file": "tests/org/jfree/data/time/junit/WeekTests.java"}, "test_case": {"identifier": "testHashcode", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testHashcode() {\n        Week w1 = new Week(2, 2003);\n        Week w2 = new Week(2, 2003);\n        assertTrue(w1.equals(w2));\n        int h1 = w1.hashCode();\n        int h2 = w2.hashCode();\n        assertEquals(h1, h2);\n    }", "signature": "void testHashcode()", "full_signature": "public void testHashcode()", "class_method_signature": "WeekTests.testHashcode()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "equals", "hashCode", "hashCode", "assertEquals"]}, "focal_class": {"identifier": "Week", "superclass": "extends RegularTimePeriod", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final long serialVersionUID = 1856387786939865061L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1856387786939865061L", "var_name": "serialVersionUID"}, {"original_string": "public static final int FIRST_WEEK_IN_YEAR = 1;", "modifier": "public static final", "type": "int", "declarator": "FIRST_WEEK_IN_YEAR = 1", "var_name": "FIRST_WEEK_IN_YEAR"}, {"original_string": "public static final int LAST_WEEK_IN_YEAR = 53;", "modifier": "public static final", "type": "int", "declarator": "LAST_WEEK_IN_YEAR = 53", "var_name": "LAST_WEEK_IN_YEAR"}, {"original_string": "private short year;", "modifier": "private", "type": "short", "declarator": "year", "var_name": "year"}, {"original_string": "private byte week;", "modifier": "private", "type": "byte", "declarator": "week", "var_name": "week"}, {"original_string": "private long firstMillisecond;", "modifier": "private", "type": "long", "declarator": "firstMillisecond", "var_name": "firstMillisecond"}, {"original_string": "private long lastMillisecond;", "modifier": "private", "type": "long", "declarator": "lastMillisecond", "var_name": "lastMillisecond"}], "methods": [{"identifier": "Week", "parameters": "()", "modifiers": "public", "return": "", "signature": " Week()", "full_signature": "public  Week()", "class_method_signature": "Week.Week()", "testcase": false, "constructor": true}, {"identifier": "Week", "parameters": "(int week, int year)", "modifiers": "public", "return": "", "signature": " Week(int week, int year)", "full_signature": "public  Week(int week, int year)", "class_method_signature": "Week.Week(int week, int year)", "testcase": false, "constructor": true}, {"identifier": "Week", "parameters": "(int week, Year year)", "modifiers": "public", "return": "", "signature": " Week(int week, Year year)", "full_signature": "public  Week(int week, Year year)", "class_method_signature": "Week.Week(int week, Year year)", "testcase": false, "constructor": true}, {"identifier": "Week", "parameters": "(Date time)", "modifiers": "public", "return": "", "signature": " Week(Date time)", "full_signature": "public  Week(Date time)", "class_method_signature": "Week.Week(Date time)", "testcase": false, "constructor": true}, {"identifier": "Week", "parameters": "(Date time, TimeZone zone)", "modifiers": "public", "return": "", "signature": " Week(Date time, TimeZone zone)", "full_signature": "public  Week(Date time, TimeZone zone)", "class_method_signature": "Week.Week(Date time, TimeZone zone)", "testcase": false, "constructor": true}, {"identifier": "Week", "parameters": "(Date time, TimeZone zone, Locale locale)", "modifiers": "public", "return": "", "signature": " Week(Date time, TimeZone zone, Locale locale)", "full_signature": "public  Week(Date time, TimeZone zone, Locale locale)", "class_method_signature": "Week.Week(Date time, TimeZone zone, Locale locale)", "testcase": false, "constructor": true}, {"identifier": "getYear", "parameters": "()", "modifiers": "public", "return": "Year", "signature": "Year getYear()", "full_signature": "public Year getYear()", "class_method_signature": "Week.getYear()", "testcase": false, "constructor": false}, {"identifier": "getYearValue", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getYearValue()", "full_signature": "public int getYearValue()", "class_method_signature": "Week.getYearValue()", "testcase": false, "constructor": false}, {"identifier": "getWeek", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getWeek()", "full_signature": "public int getWeek()", "class_method_signature": "Week.getWeek()", "testcase": false, "constructor": false}, {"identifier": "getFirstMillisecond", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getFirstMillisecond()", "full_signature": "public long getFirstMillisecond()", "class_method_signature": "Week.getFirstMillisecond()", "testcase": false, "constructor": false}, {"identifier": "getLastMillisecond", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getLastMillisecond()", "full_signature": "public long getLastMillisecond()", "class_method_signature": "Week.getLastMillisecond()", "testcase": false, "constructor": false}, {"identifier": "peg", "parameters": "(Calendar calendar)", "modifiers": "public", "return": "void", "signature": "void peg(Calendar calendar)", "full_signature": "public void peg(Calendar calendar)", "class_method_signature": "Week.peg(Calendar calendar)", "testcase": false, "constructor": false}, {"identifier": "previous", "parameters": "()", "modifiers": "public", "return": "RegularTimePeriod", "signature": "RegularTimePeriod previous()", "full_signature": "public RegularTimePeriod previous()", "class_method_signature": "Week.previous()", "testcase": false, "constructor": false}, {"identifier": "next", "parameters": "()", "modifiers": "public", "return": "RegularTimePeriod", "signature": "RegularTimePeriod next()", "full_signature": "public RegularTimePeriod next()", "class_method_signature": "Week.next()", "testcase": false, "constructor": false}, {"identifier": "getSerialIndex", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getSerialIndex()", "full_signature": "public long getSerialIndex()", "class_method_signature": "Week.getSerialIndex()", "testcase": false, "constructor": false}, {"identifier": "getFirstMillisecond", "parameters": "(Calendar calendar)", "modifiers": "public", "return": "long", "signature": "long getFirstMillisecond(Calendar calendar)", "full_signature": "public long getFirstMillisecond(Calendar calendar)", "class_method_signature": "Week.getFirstMillisecond(Calendar calendar)", "testcase": false, "constructor": false}, {"identifier": "getLastMillisecond", "parameters": "(Calendar calendar)", "modifiers": "public", "return": "long", "signature": "long getLastMillisecond(Calendar calendar)", "full_signature": "public long getLastMillisecond(Calendar calendar)", "class_method_signature": "Week.getLastMillisecond(Calendar calendar)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "Week.toString()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "Week.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "Week.hashCode()", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(Object o1)", "modifiers": "public", "return": "int", "signature": "int compareTo(Object o1)", "full_signature": "public int compareTo(Object o1)", "class_method_signature": "Week.compareTo(Object o1)", "testcase": false, "constructor": false}, {"identifier": "parseWeek", "parameters": "(String s)", "modifiers": "public static", "return": "Week", "signature": "Week parseWeek(String s)", "full_signature": "public static Week parseWeek(String s)", "class_method_signature": "Week.parseWeek(String s)", "testcase": false, "constructor": false}, {"identifier": "findSeparator", "parameters": "(String s)", "modifiers": "private static", "return": "int", "signature": "int findSeparator(String s)", "full_signature": "private static int findSeparator(String s)", "class_method_signature": "Week.findSeparator(String s)", "testcase": false, "constructor": false}, {"identifier": "evaluateAsYear", "parameters": "(String s)", "modifiers": "private static", "return": "Year", "signature": "Year evaluateAsYear(String s)", "full_signature": "private static Year evaluateAsYear(String s)", "class_method_signature": "Week.evaluateAsYear(String s)", "testcase": false, "constructor": false}, {"identifier": "stringToWeek", "parameters": "(String s)", "modifiers": "private static", "return": "int", "signature": "int stringToWeek(String s)", "full_signature": "private static int stringToWeek(String s)", "class_method_signature": "Week.stringToWeek(String s)", "testcase": false, "constructor": false}], "file": "source/org/jfree/data/time/Week.java"}, "focal_method": {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "body": "public int hashCode() {\n        int result = 17;\n        result = 37 * result + this.week;\n        result = 37 * result + this.year;\n        return result;\n    }", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "Week.hashCode()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": "Chart_1_buggy"}}