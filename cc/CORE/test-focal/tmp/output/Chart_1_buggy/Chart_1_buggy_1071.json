{"test_class": {"identifier": "SimpleHistogramBinTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/data/statistics/junit/SimpleHistogramBinTests.java"}, "test_case": {"identifier": "testSerialization", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testSerialization() {\n\n        SimpleHistogramBin b1 = new SimpleHistogramBin(1.0, 2.0, false, true);\n        b1.setItemCount(123);\n        SimpleHistogramBin b2 = null;\n        try {\n            ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n            ObjectOutput out = new ObjectOutputStream(buffer);\n            out.writeObject(b1);\n            out.close();\n            ObjectInput in = new ObjectInputStream(\n                new ByteArrayInputStream(buffer.toByteArray())\n            );\n            b2 = (SimpleHistogramBin) in.readObject();\n            in.close();\n        }\n        catch (Exception e) {\n            System.out.println(e.toString());\n        }\n        assertEquals(b1, b2);\n    }", "signature": "void testSerialization()", "full_signature": "public void testSerialization()", "class_method_signature": "SimpleHistogramBinTests.testSerialization()", "testcase": true, "constructor": false, "invocations": ["setItemCount", "writeObject", "close", "toByteArray", "readObject", "close", "println", "toString", "assertEquals"]}, "focal_class": {"identifier": "SimpleHistogramBin", "superclass": "", "interfaces": "implements Comparable,\n        Cloneable, PublicCloneable, Serializable", "fields": [{"original_string": "private static final long serialVersionUID = 3480862537505941742L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 3480862537505941742L", "var_name": "serialVersionUID"}, {"original_string": "private double lowerBound;", "modifier": "private", "type": "double", "declarator": "lowerBound", "var_name": "lowerBound"}, {"original_string": "private double upperBound;", "modifier": "private", "type": "double", "declarator": "upperBound", "var_name": "upperBound"}, {"original_string": "private boolean includeLowerBound;", "modifier": "private", "type": "boolean", "declarator": "includeLowerBound", "var_name": "includeLowerBound"}, {"original_string": "private boolean includeUpperBound;", "modifier": "private", "type": "boolean", "declarator": "includeUpperBound", "var_name": "includeUpperBound"}, {"original_string": "private int itemCount;", "modifier": "private", "type": "int", "declarator": "itemCount", "var_name": "itemCount"}, {"original_string": "private boolean selected;", "modifier": "private", "type": "boolean", "declarator": "selected", "var_name": "selected"}], "methods": [{"identifier": "SimpleHistogramBin", "parameters": "(double lowerBound, double upperBound)", "modifiers": "public", "return": "", "signature": " SimpleHistogramBin(double lowerBound, double upperBound)", "full_signature": "public  SimpleHistogramBin(double lowerBound, double upperBound)", "class_method_signature": "SimpleHistogramBin.SimpleHistogramBin(double lowerBound, double upperBound)", "testcase": false, "constructor": true}, {"identifier": "SimpleHistogramBin", "parameters": "(double lowerBound, double upperBound,\n                              boolean includeLowerBound,\n                              boolean includeUpperBound)", "modifiers": "public", "return": "", "signature": " SimpleHistogramBin(double lowerBound, double upperBound,\n                              boolean includeLowerBound,\n                              boolean includeUpperBound)", "full_signature": "public  SimpleHistogramBin(double lowerBound, double upperBound,\n                              boolean includeLowerBound,\n                              boolean includeUpperBound)", "class_method_signature": "SimpleHistogramBin.SimpleHistogramBin(double lowerBound, double upperBound,\n                              boolean includeLowerBound,\n                              boolean includeUpperBound)", "testcase": false, "constructor": true}, {"identifier": "getLowerBound", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getLowerBound()", "full_signature": "public double getLowerBound()", "class_method_signature": "SimpleHistogramBin.getLowerBound()", "testcase": false, "constructor": false}, {"identifier": "getUpperBound", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getUpperBound()", "full_signature": "public double getUpperBound()", "class_method_signature": "SimpleHistogramBin.getUpperBound()", "testcase": false, "constructor": false}, {"identifier": "getItemCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getItemCount()", "full_signature": "public int getItemCount()", "class_method_signature": "SimpleHistogramBin.getItemCount()", "testcase": false, "constructor": false}, {"identifier": "setItemCount", "parameters": "(int count)", "modifiers": "public", "return": "void", "signature": "void setItemCount(int count)", "full_signature": "public void setItemCount(int count)", "class_method_signature": "SimpleHistogramBin.setItemCount(int count)", "testcase": false, "constructor": false}, {"identifier": "isSelected", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isSelected()", "full_signature": "public boolean isSelected()", "class_method_signature": "SimpleHistogramBin.isSelected()", "testcase": false, "constructor": false}, {"identifier": "setSelected", "parameters": "(boolean selected)", "modifiers": "public", "return": "void", "signature": "void setSelected(boolean selected)", "full_signature": "public void setSelected(boolean selected)", "class_method_signature": "SimpleHistogramBin.setSelected(boolean selected)", "testcase": false, "constructor": false}, {"identifier": "accepts", "parameters": "(double value)", "modifiers": "public", "return": "boolean", "signature": "boolean accepts(double value)", "full_signature": "public boolean accepts(double value)", "class_method_signature": "SimpleHistogramBin.accepts(double value)", "testcase": false, "constructor": false}, {"identifier": "overlapsWith", "parameters": "(SimpleHistogramBin bin)", "modifiers": "public", "return": "boolean", "signature": "boolean overlapsWith(SimpleHistogramBin bin)", "full_signature": "public boolean overlapsWith(SimpleHistogramBin bin)", "class_method_signature": "SimpleHistogramBin.overlapsWith(SimpleHistogramBin bin)", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(Object obj)", "modifiers": "public", "return": "int", "signature": "int compareTo(Object obj)", "full_signature": "public int compareTo(Object obj)", "class_method_signature": "SimpleHistogramBin.compareTo(Object obj)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "SimpleHistogramBin.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object clone()", "full_signature": "public Object clone()", "class_method_signature": "SimpleHistogramBin.clone()", "testcase": false, "constructor": false}], "file": "source/org/jfree/data/statistics/SimpleHistogramBin.java"}, "focal_method": {"identifier": "setItemCount", "parameters": "(int count)", "modifiers": "public", "return": "void", "body": "public void setItemCount(int count) {\n        this.itemCount = count;\n    }", "signature": "void setItemCount(int count)", "full_signature": "public void setItemCount(int count)", "class_method_signature": "SimpleHistogramBin.setItemCount(int count)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": "Chart_1_buggy"}}