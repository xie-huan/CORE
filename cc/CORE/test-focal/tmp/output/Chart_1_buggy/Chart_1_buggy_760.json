{"test_class": {"identifier": "DefaultWindDatasetTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/data/xy/junit/DefaultWindDatasetTests.java"}, "test_case": {"identifier": "testGetSeriesKey", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testGetSeriesKey() {\n        DefaultWindDataset d = createSampleDataset1();\n        assertEquals(\"Series 1\", d.getSeriesKey(0));\n        assertEquals(\"Series 2\", d.getSeriesKey(1));\n\n        // check for series key out of bounds\n        boolean pass = false;\n        try {\n            /*Comparable k =*/ d.getSeriesKey(-1);\n        }\n        catch (IllegalArgumentException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n\n        pass = false;\n        try {\n            /*Comparable k =*/ d.getSeriesKey(2);\n        }\n        catch (IllegalArgumentException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }", "signature": "void testGetSeriesKey()", "full_signature": "public void testGetSeriesKey()", "class_method_signature": "DefaultWindDatasetTests.testGetSeriesKey()", "testcase": true, "constructor": false, "invocations": ["createSampleDataset1", "assertEquals", "getSeriesKey", "assertEquals", "getSeriesKey", "getSeriesKey", "assertTrue", "getSeriesKey", "assertTrue"]}, "focal_class": {"identifier": "DefaultWindDataset", "superclass": "extends AbstractXYDataset", "interfaces": "implements WindDataset, PublicCloneable", "fields": [{"original_string": "private List seriesKeys;", "modifier": "private", "type": "List", "declarator": "seriesKeys", "var_name": "seriesKeys"}, {"original_string": "private List allSeriesData;", "modifier": "private", "type": "List", "declarator": "allSeriesData", "var_name": "allSeriesData"}], "methods": [{"identifier": "DefaultWindDataset", "parameters": "()", "modifiers": "public", "return": "", "signature": " DefaultWindDataset()", "full_signature": "public  DefaultWindDataset()", "class_method_signature": "DefaultWindDataset.DefaultWindDataset()", "testcase": false, "constructor": true}, {"identifier": "DefaultWindDataset", "parameters": "(Object[][][] data)", "modifiers": "public", "return": "", "signature": " DefaultWindDataset(Object[][][] data)", "full_signature": "public  DefaultWindDataset(Object[][][] data)", "class_method_signature": "DefaultWindDataset.DefaultWindDataset(Object[][][] data)", "testcase": false, "constructor": true}, {"identifier": "DefaultWindDataset", "parameters": "(String[] seriesNames, Object[][][] data)", "modifiers": "public", "return": "", "signature": " DefaultWindDataset(String[] seriesNames, Object[][][] data)", "full_signature": "public  DefaultWindDataset(String[] seriesNames, Object[][][] data)", "class_method_signature": "DefaultWindDataset.DefaultWindDataset(String[] seriesNames, Object[][][] data)", "testcase": false, "constructor": true}, {"identifier": "DefaultWindDataset", "parameters": "(List seriesKeys, Object[][][] data)", "modifiers": "public", "return": "", "signature": " DefaultWindDataset(List seriesKeys, Object[][][] data)", "full_signature": "public  DefaultWindDataset(List seriesKeys, Object[][][] data)", "class_method_signature": "DefaultWindDataset.DefaultWindDataset(List seriesKeys, Object[][][] data)", "testcase": false, "constructor": true}, {"identifier": "getSeriesCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSeriesCount()", "full_signature": "public int getSeriesCount()", "class_method_signature": "DefaultWindDataset.getSeriesCount()", "testcase": false, "constructor": false}, {"identifier": "getItemCount", "parameters": "(int series)", "modifiers": "public", "return": "int", "signature": "int getItemCount(int series)", "full_signature": "public int getItemCount(int series)", "class_method_signature": "DefaultWindDataset.getItemCount(int series)", "testcase": false, "constructor": false}, {"identifier": "getSeriesKey", "parameters": "(int series)", "modifiers": "public", "return": "Comparable", "signature": "Comparable getSeriesKey(int series)", "full_signature": "public Comparable getSeriesKey(int series)", "class_method_signature": "DefaultWindDataset.getSeriesKey(int series)", "testcase": false, "constructor": false}, {"identifier": "getX", "parameters": "(int series, int item)", "modifiers": "public", "return": "Number", "signature": "Number getX(int series, int item)", "full_signature": "public Number getX(int series, int item)", "class_method_signature": "DefaultWindDataset.getX(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "getY", "parameters": "(int series, int item)", "modifiers": "public", "return": "Number", "signature": "Number getY(int series, int item)", "full_signature": "public Number getY(int series, int item)", "class_method_signature": "DefaultWindDataset.getY(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "getWindDirection", "parameters": "(int series, int item)", "modifiers": "public", "return": "Number", "signature": "Number getWindDirection(int series, int item)", "full_signature": "public Number getWindDirection(int series, int item)", "class_method_signature": "DefaultWindDataset.getWindDirection(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "getWindForce", "parameters": "(int series, int item)", "modifiers": "public", "return": "Number", "signature": "Number getWindForce(int series, int item)", "full_signature": "public Number getWindForce(int series, int item)", "class_method_signature": "DefaultWindDataset.getWindForce(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "seriesNameListFromDataArray", "parameters": "(Object[][] data)", "modifiers": "public static", "return": "List", "signature": "List seriesNameListFromDataArray(Object[][] data)", "full_signature": "public static List seriesNameListFromDataArray(Object[][] data)", "class_method_signature": "DefaultWindDataset.seriesNameListFromDataArray(Object[][] data)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "DefaultWindDataset.equals(Object obj)", "testcase": false, "constructor": false}], "file": "source/org/jfree/data/xy/DefaultWindDataset.java"}, "focal_method": {"identifier": "getSeriesKey", "parameters": "(int series)", "modifiers": "public", "return": "Comparable", "body": "public Comparable getSeriesKey(int series) {\n        if (series < 0 || series >= getSeriesCount()) {\n            throw new IllegalArgumentException(\"Invalid series index: \"\n                    + series);\n        }\n        return (Comparable) this.seriesKeys.get(series);\n    }", "signature": "Comparable getSeriesKey(int series)", "full_signature": "public Comparable getSeriesKey(int series)", "class_method_signature": "DefaultWindDataset.getSeriesKey(int series)", "testcase": false, "constructor": false, "invocations": ["getSeriesCount", "get"]}, "repository": {"repo_id": "Chart_1_buggy"}}