{"test_class": {"identifier": "AbstractRendererTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/chart/renderer/junit/AbstractRendererTests.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testEquals() {\n        // have to use a concrete subclass...\n        BarRenderer r1 = new BarRenderer();\n        BarRenderer r2 = new BarRenderer();\n        assertTrue(r1.equals(r2));\n        assertTrue(r2.equals(r1));\n\n        // seriesVisibleList\n        r1.setSeriesVisible(2, Boolean.TRUE);\n        assertFalse(r1.equals(r2));\n        r2.setSeriesVisible(2, Boolean.TRUE);\n        assertTrue(r1.equals(r2));\n\n        // baseSeriesVisible\n        r1.setBaseSeriesVisible(false);\n        assertFalse(r1.equals(r2));\n        r2.setBaseSeriesVisible(false);\n        assertTrue(r1.equals(r2));\n\n        // seriesVisibleInLegendList\n        r1.setSeriesVisibleInLegend(1, Boolean.TRUE);\n        assertFalse(r1.equals(r2));\n        r2.setSeriesVisibleInLegend(1, Boolean.TRUE);\n        assertTrue(r1.equals(r2));\n\n        // baseSeriesVisibleInLegend\n        r1.setBaseSeriesVisibleInLegend(false);\n        assertFalse(r1.equals(r2));\n        r2.setBaseSeriesVisibleInLegend(false);\n        assertTrue(r1.equals(r2));\n\n        // paintList\n        r1.setSeriesPaint(0, new GradientPaint(1.0f, 2.0f, Color.red,\n                3.0f, 4.0f, Color.white));\n        assertFalse(r1.equals(r2));\n        r2.setSeriesPaint(0, new GradientPaint(1.0f, 2.0f, Color.red,\n                3.0f, 4.0f, Color.white));\n        assertTrue(r1.equals(r2));\n\n        // basePaint\n        r1.setBasePaint(new GradientPaint(1.0f, 2.0f, Color.blue,\n                3.0f, 4.0f, Color.red));\n        assertFalse(r1.equals(r2));\n        r2.setBasePaint(new GradientPaint(1.0f, 2.0f, Color.blue,\n                3.0f, 4.0f, Color.red));\n        assertTrue(r1.equals(r2));\n\n        // fillPaintList\n        r1.setSeriesFillPaint(0, new GradientPaint(1.0f, 2.0f, Color.blue,\n                3.0f, 4.0f, Color.red));\n        assertFalse(r1.equals(r2));\n        r2.setSeriesFillPaint(0, new GradientPaint(1.0f, 2.0f, Color.blue,\n                3.0f, 4.0f, Color.red));\n        assertTrue(r1.equals(r2));\n\n        // baseFillPaint\n        r1.setBaseFillPaint(new GradientPaint(1.0f, 2.0f, Color.blue,\n                3.0f, 4.0f, Color.red));\n        assertFalse(r1.equals(r2));\n        r2.setBaseFillPaint(new GradientPaint(1.0f, 2.0f, Color.blue,\n                3.0f, 4.0f, Color.red));\n        assertTrue(r1.equals(r2));\n\n        // outlinePaintList\n        r1.setSeriesOutlinePaint(0, new GradientPaint(1.0f, 2.0f, Color.blue,\n                3.0f, 4.0f, Color.red));\n        assertFalse(r1.equals(r2));\n        r2.setSeriesOutlinePaint(0, new GradientPaint(1.0f, 2.0f, Color.blue,\n                3.0f, 4.0f, Color.red));\n        assertTrue(r1.equals(r2));\n\n        // baseOutlinePaint\n        r1.setBaseOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.blue,\n                3.0f, 4.0f, Color.red));\n        assertFalse(r1.equals(r2));\n        r2.setBaseOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.blue,\n                3.0f, 4.0f, Color.red));\n        assertTrue(r1.equals(r2));\n\n        // strokeList\n        Stroke s = new BasicStroke(3.21f);\n        r1.setSeriesStroke(1, s);\n        assertFalse(r1.equals(r2));\n        r2.setSeriesStroke(1, s);\n        assertTrue(r1.equals(r2));\n\n        // baseStroke\n        r1.setBaseStroke(s);\n        assertFalse(r1.equals(r2));\n        r2.setBaseStroke(s);\n        assertTrue(r1.equals(r2));\n\n        // outlineStrokeList\n        r1.setSeriesOutlineStroke(0, s);\n        assertFalse(r1.equals(r2));\n        r2.setSeriesOutlineStroke(0, s);\n        assertTrue(r1.equals(r2));\n\n        // baseOutlineStroke\n        r1.setBaseOutlineStroke(s);\n        assertFalse(r1.equals(r2));\n        r2.setBaseOutlineStroke(s);\n        assertTrue(r1.equals(r2));\n\n        // shapeList\n        r1.setSeriesShape(1, new Ellipse2D.Double(1, 2, 3, 4));\n        assertFalse(r1.equals(r2));\n        r2.setSeriesShape(1, new Ellipse2D.Double(1, 2, 3, 4));\n        assertTrue(r1.equals(r2));\n\n        // baseShape\n        r1.setBaseShape(new Ellipse2D.Double(1, 2, 3, 4));\n        assertFalse(r1.equals(r2));\n        r2.setBaseShape(new Ellipse2D.Double(1, 2, 3, 4));\n        assertTrue(r1.equals(r2));\n\n        // itemLabelsVisibleList\n        r1.setSeriesItemLabelsVisible(1, Boolean.TRUE);\n        assertFalse(r1.equals(r2));\n        r2.setSeriesItemLabelsVisible(1, Boolean.TRUE);\n        assertTrue(r1.equals(r2));\n\n        // baseItemLabelsVisible\n        r1.setBaseItemLabelsVisible(true);\n        assertFalse(r1.equals(r2));\n        r2.setBaseItemLabelsVisible(true);\n        assertTrue(r1.equals(r2));\n\n        // itemLabelFontList\n        r1.setSeriesItemLabelFont(1, new Font(\"Serif\", Font.BOLD, 9));\n        assertFalse(r1.equals(r2));\n        r2.setSeriesItemLabelFont(1, new Font(\"Serif\", Font.BOLD, 9));\n        assertTrue(r1.equals(r2));\n\n        // baseItemLabelFont\n        r1.setBaseItemLabelFont(new Font(\"Serif\", Font.PLAIN, 10));\n        assertFalse(r1.equals(r2));\n        r2.setBaseItemLabelFont(new Font(\"Serif\", Font.PLAIN, 10));\n        assertTrue(r1.equals(r2));\n\n        // itemLabelPaintList\n        r1.setSeriesItemLabelPaint(0, new GradientPaint(1.0f, 2.0f, Color.red,\n                3.0f, 4.0f, Color.gray));\n        assertFalse(r1.equals(r2));\n        r2.setSeriesItemLabelPaint(0, new GradientPaint(1.0f, 2.0f, Color.red,\n                3.0f, 4.0f, Color.gray));\n        assertTrue(r1.equals(r2));\n\n        // baseItemLabelPaint\n        r1.setBaseItemLabelPaint(new GradientPaint(1.0f, 2.0f, Color.red,\n                3.0f, 4.0f, Color.gray));\n        assertFalse(r1.equals(r2));\n        r2.setBaseItemLabelPaint(new GradientPaint(1.0f, 2.0f, Color.red,\n                3.0f, 4.0f, Color.gray));\n        assertTrue(r1.equals(r2));\n\n        // positiveItemLabelPositionList;\n        r1.setSeriesPositiveItemLabelPosition(0, new ItemLabelPosition());\n        assertFalse(r1.equals(r2));\n        r2.setSeriesPositiveItemLabelPosition(0, new ItemLabelPosition());\n        assertTrue(r1.equals(r2));\n\n        // basePositiveItemLabelPosition;\n        r1.setBasePositiveItemLabelPosition(new ItemLabelPosition(\n                ItemLabelAnchor.INSIDE10, TextAnchor.BASELINE_RIGHT));\n        assertFalse(r1.equals(r2));\n        r2.setBasePositiveItemLabelPosition(new ItemLabelPosition(\n                ItemLabelAnchor.INSIDE10, TextAnchor.BASELINE_RIGHT));\n        assertTrue(r1.equals(r2));\n\n        // negativeItemLabelPositionList;\n        r1.setSeriesNegativeItemLabelPosition(1, new ItemLabelPosition(\n                ItemLabelAnchor.INSIDE10, TextAnchor.BASELINE_RIGHT));\n        assertFalse(r1.equals(r2));\n        r2.setSeriesNegativeItemLabelPosition(1, new ItemLabelPosition(\n                ItemLabelAnchor.INSIDE10, TextAnchor.BASELINE_RIGHT));\n        assertTrue(r1.equals(r2));\n\n        // baseNegativeItemLabelPosition;\n        r1.setBaseNegativeItemLabelPosition(new ItemLabelPosition(\n                ItemLabelAnchor.INSIDE10, TextAnchor.BASELINE_RIGHT));\n        assertFalse(r1.equals(r2));\n        r2.setBaseNegativeItemLabelPosition(new ItemLabelPosition(\n                ItemLabelAnchor.INSIDE10, TextAnchor.BASELINE_RIGHT));\n        assertTrue(r1.equals(r2));\n\n        // itemLabelAnchorOffset\n        r1.setItemLabelAnchorOffset(3.0);\n        assertFalse(r1.equals(r2));\n        r2.setItemLabelAnchorOffset(3.0);\n        assertTrue(r1.equals(r2));\n\n        // createEntitiesList;\n        r1.setSeriesCreateEntities(0, Boolean.TRUE);\n        assertFalse(r1.equals(r2));\n        r2.setSeriesCreateEntities(0, Boolean.TRUE);\n        assertTrue(r1.equals(r2));\n\n        // baseCreateEntities;\n        r1.setBaseCreateEntities(false);\n        assertFalse(r1.equals(r2));\n        r2.setBaseCreateEntities(false);\n        assertTrue(r1.equals(r2));\n\n        // legendShape\n        r1.setLegendShape(0, new Ellipse2D.Double(1.0, 2.0, 3.0, 4.0));\n        assertFalse(r1.equals(r2));\n        r2.setLegendShape(0, new Ellipse2D.Double(1.0, 2.0, 3.0, 4.0));\n        assertTrue(r1.equals(r2));\n\n        // baseLegendShape\n        r1.setBaseLegendShape(new Ellipse2D.Double(5.0, 6.0, 7.0, 8.0));\n        assertFalse(r1.equals(r2));\n        r2.setBaseLegendShape(new Ellipse2D.Double(5.0, 6.0, 7.0, 8.0));\n        assertTrue(r1.equals(r2));\n\n        // legendTextFont\n        r1.setLegendTextFont(0, new Font(\"Dialog\", Font.PLAIN, 7));\n        assertFalse(r1.equals(r2));\n        r2.setLegendTextFont(0, new Font(\"Dialog\", Font.PLAIN, 7));\n        assertTrue(r1.equals(r2));\n\n        // baseLegendTextFont\n        r1.setBaseLegendTextFont(new Font(\"Dialog\", Font.PLAIN, 7));\n        assertFalse(r1.equals(r2));\n        r2.setBaseLegendTextFont(new Font(\"Dialog\", Font.PLAIN, 7));\n        assertTrue(r1.equals(r2));\n\n        // legendTextPaint\n        r1.setLegendTextPaint(0, new GradientPaint(1.0f, 2.0f, Color.blue,\n                3.0f, 4.0f, Color.red));\n        assertFalse(r1.equals(r2));\n        r2.setLegendTextPaint(0, new GradientPaint(1.0f, 2.0f, Color.blue,\n                3.0f, 4.0f, Color.red));\n        assertTrue(r1.equals(r2));\n\n        // baseOutlinePaint\n        r1.setBaseLegendTextPaint(new GradientPaint(1.0f, 2.0f, Color.blue,\n                3.0f, 4.0f, Color.red));\n        assertFalse(r1.equals(r2));\n        r2.setBaseLegendTextPaint(new GradientPaint(1.0f, 2.0f, Color.blue,\n                3.0f, 4.0f, Color.red));\n        assertTrue(r1.equals(r2));\n\n    }", "signature": "void testEquals()", "full_signature": "public void testEquals()", "class_method_signature": "AbstractRendererTests.testEquals()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "equals", "assertTrue", "equals", "setSeriesVisible", "assertFalse", "equals", "setSeriesVisible", "assertTrue", "equals", "setBaseSeriesVisible", "assertFalse", "equals", "setBaseSeriesVisible", "assertTrue", "equals", "setSeriesVisibleInLegend", "assertFalse", "equals", "setSeriesVisibleInLegend", "assertTrue", "equals", "setBaseSeriesVisibleInLegend", "assertFalse", "equals", "setBaseSeriesVisibleInLegend", "assertTrue", "equals", "setSeriesPaint", "assertFalse", "equals", "setSeriesPaint", "assertTrue", "equals", "setBasePaint", "assertFalse", "equals", "setBasePaint", "assertTrue", "equals", "setSeriesFillPaint", "assertFalse", "equals", "setSeriesFillPaint", "assertTrue", "equals", "setBaseFillPaint", "assertFalse", "equals", "setBaseFillPaint", "assertTrue", "equals", "setSeriesOutlinePaint", "assertFalse", "equals", "setSeriesOutlinePaint", "assertTrue", "equals", "setBaseOutlinePaint", "assertFalse", "equals", "setBaseOutlinePaint", "assertTrue", "equals", "setSeriesStroke", "assertFalse", "equals", "setSeriesStroke", "assertTrue", "equals", "setBaseStroke", "assertFalse", "equals", "setBaseStroke", "assertTrue", "equals", "setSeriesOutlineStroke", "assertFalse", "equals", "setSeriesOutlineStroke", "assertTrue", "equals", "setBaseOutlineStroke", "assertFalse", "equals", "setBaseOutlineStroke", "assertTrue", "equals", "setSeriesShape", "assertFalse", "equals", "setSeriesShape", "assertTrue", "equals", "setBaseShape", "assertFalse", "equals", "setBaseShape", "assertTrue", "equals", "setSeriesItemLabelsVisible", "assertFalse", "equals", "setSeriesItemLabelsVisible", "assertTrue", "equals", "setBaseItemLabelsVisible", "assertFalse", "equals", "setBaseItemLabelsVisible", "assertTrue", "equals", "setSeriesItemLabelFont", "assertFalse", "equals", "setSeriesItemLabelFont", "assertTrue", "equals", "setBaseItemLabelFont", "assertFalse", "equals", "setBaseItemLabelFont", "assertTrue", "equals", "setSeriesItemLabelPaint", "assertFalse", "equals", "setSeriesItemLabelPaint", "assertTrue", "equals", "setBaseItemLabelPaint", "assertFalse", "equals", "setBaseItemLabelPaint", "assertTrue", "equals", "setSeriesPositiveItemLabelPosition", "assertFalse", "equals", "setSeriesPositiveItemLabelPosition", "assertTrue", "equals", "setBasePositiveItemLabelPosition", "assertFalse", "equals", "setBasePositiveItemLabelPosition", "assertTrue", "equals", "setSeriesNegativeItemLabelPosition", "assertFalse", "equals", "setSeriesNegativeItemLabelPosition", "assertTrue", "equals", "setBaseNegativeItemLabelPosition", "assertFalse", "equals", "setBaseNegativeItemLabelPosition", "assertTrue", "equals", "setItemLabelAnchorOffset", "assertFalse", "equals", "setItemLabelAnchorOffset", "assertTrue", "equals", "setSeriesCreateEntities", "assertFalse", "equals", "setSeriesCreateEntities", "assertTrue", "equals", "setBaseCreateEntities", "assertFalse", "equals", "setBaseCreateEntities", "assertTrue", "equals", "setLegendShape", "assertFalse", "equals", "setLegendShape", "assertTrue", "equals", "setBaseLegendShape", "assertFalse", "equals", "setBaseLegendShape", "assertTrue", "equals", "setLegendTextFont", "assertFalse", "equals", "setLegendTextFont", "assertTrue", "equals", "setBaseLegendTextFont", "assertFalse", "equals", "setBaseLegendTextFont", "assertTrue", "equals", "setLegendTextPaint", "assertFalse", "equals", "setLegendTextPaint", "assertTrue", "equals", "setBaseLegendTextPaint", "assertFalse", "equals", "setBaseLegendTextPaint", "assertTrue", "equals"]}, "focal_class": {"identifier": "AbstractRenderer", "superclass": "", "interfaces": "implements Cloneable, Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -828267569428206075L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -828267569428206075L", "var_name": "serialVersionUID"}, {"original_string": "public static final Double ZERO = new Double(0.0);", "modifier": "public static final", "type": "Double", "declarator": "ZERO = new Double(0.0)", "var_name": "ZERO"}, {"original_string": "public static final Paint DEFAULT_PAINT = Color.blue;", "modifier": "public static final", "type": "Paint", "declarator": "DEFAULT_PAINT = Color.blue", "var_name": "DEFAULT_PAINT"}, {"original_string": "public static final Paint DEFAULT_OUTLINE_PAINT = Color.gray;", "modifier": "public static final", "type": "Paint", "declarator": "DEFAULT_OUTLINE_PAINT = Color.gray", "var_name": "DEFAULT_OUTLINE_PAINT"}, {"original_string": "public static final Stroke DEFAULT_STROKE = new BasicStroke(1.0f);", "modifier": "public static final", "type": "Stroke", "declarator": "DEFAULT_STROKE = new BasicStroke(1.0f)", "var_name": "DEFAULT_STROKE"}, {"original_string": "public static final Stroke DEFAULT_OUTLINE_STROKE = new BasicStroke(1.0f);", "modifier": "public static final", "type": "Stroke", "declarator": "DEFAULT_OUTLINE_STROKE = new BasicStroke(1.0f)", "var_name": "DEFAULT_OUTLINE_STROKE"}, {"original_string": "public static final Shape DEFAULT_SHAPE\n            = new Rectangle2D.Double(-3.0, -3.0, 6.0, 6.0);", "modifier": "public static final", "type": "Shape", "declarator": "DEFAULT_SHAPE\n            = new Rectangle2D.Double(-3.0, -3.0, 6.0, 6.0)", "var_name": "DEFAULT_SHAPE"}, {"original_string": "public static final Font DEFAULT_VALUE_LABEL_FONT = new Font(\"Tahoma\",\n            Font.PLAIN, 10);", "modifier": "public static final", "type": "Font", "declarator": "DEFAULT_VALUE_LABEL_FONT = new Font(\"Tahoma\",\n            Font.PLAIN, 10)", "var_name": "DEFAULT_VALUE_LABEL_FONT"}, {"original_string": "public static final Paint DEFAULT_VALUE_LABEL_PAINT = Color.black;", "modifier": "public static final", "type": "Paint", "declarator": "DEFAULT_VALUE_LABEL_PAINT = Color.black", "var_name": "DEFAULT_VALUE_LABEL_PAINT"}, {"original_string": "private BooleanList seriesVisibleList;", "modifier": "private", "type": "BooleanList", "declarator": "seriesVisibleList", "var_name": "seriesVisibleList"}, {"original_string": "private boolean baseSeriesVisible;", "modifier": "private", "type": "boolean", "declarator": "baseSeriesVisible", "var_name": "baseSeriesVisible"}, {"original_string": "private BooleanList seriesVisibleInLegendList;", "modifier": "private", "type": "BooleanList", "declarator": "seriesVisibleInLegendList", "var_name": "seriesVisibleInLegendList"}, {"original_string": "private boolean baseSeriesVisibleInLegend;", "modifier": "private", "type": "boolean", "declarator": "baseSeriesVisibleInLegend", "var_name": "baseSeriesVisibleInLegend"}, {"original_string": "private PaintList paintList;", "modifier": "private", "type": "PaintList", "declarator": "paintList", "var_name": "paintList"}, {"original_string": "private boolean autoPopulateSeriesPaint;", "modifier": "private", "type": "boolean", "declarator": "autoPopulateSeriesPaint", "var_name": "autoPopulateSeriesPaint"}, {"original_string": "private transient Paint basePaint;", "modifier": "private transient", "type": "Paint", "declarator": "basePaint", "var_name": "basePaint"}, {"original_string": "private PaintList fillPaintList;", "modifier": "private", "type": "PaintList", "declarator": "fillPaintList", "var_name": "fillPaintList"}, {"original_string": "private boolean autoPopulateSeriesFillPaint;", "modifier": "private", "type": "boolean", "declarator": "autoPopulateSeriesFillPaint", "var_name": "autoPopulateSeriesFillPaint"}, {"original_string": "private transient Paint baseFillPaint;", "modifier": "private transient", "type": "Paint", "declarator": "baseFillPaint", "var_name": "baseFillPaint"}, {"original_string": "private PaintList outlinePaintList;", "modifier": "private", "type": "PaintList", "declarator": "outlinePaintList", "var_name": "outlinePaintList"}, {"original_string": "private boolean autoPopulateSeriesOutlinePaint;", "modifier": "private", "type": "boolean", "declarator": "autoPopulateSeriesOutlinePaint", "var_name": "autoPopulateSeriesOutlinePaint"}, {"original_string": "private transient Paint baseOutlinePaint;", "modifier": "private transient", "type": "Paint", "declarator": "baseOutlinePaint", "var_name": "baseOutlinePaint"}, {"original_string": "private StrokeList strokeList;", "modifier": "private", "type": "StrokeList", "declarator": "strokeList", "var_name": "strokeList"}, {"original_string": "private boolean autoPopulateSeriesStroke;", "modifier": "private", "type": "boolean", "declarator": "autoPopulateSeriesStroke", "var_name": "autoPopulateSeriesStroke"}, {"original_string": "private transient Stroke baseStroke;", "modifier": "private transient", "type": "Stroke", "declarator": "baseStroke", "var_name": "baseStroke"}, {"original_string": "private StrokeList outlineStrokeList;", "modifier": "private", "type": "StrokeList", "declarator": "outlineStrokeList", "var_name": "outlineStrokeList"}, {"original_string": "private transient Stroke baseOutlineStroke;", "modifier": "private transient", "type": "Stroke", "declarator": "baseOutlineStroke", "var_name": "baseOutlineStroke"}, {"original_string": "private boolean autoPopulateSeriesOutlineStroke;", "modifier": "private", "type": "boolean", "declarator": "autoPopulateSeriesOutlineStroke", "var_name": "autoPopulateSeriesOutlineStroke"}, {"original_string": "private ShapeList shapeList;", "modifier": "private", "type": "ShapeList", "declarator": "shapeList", "var_name": "shapeList"}, {"original_string": "private boolean autoPopulateSeriesShape;", "modifier": "private", "type": "boolean", "declarator": "autoPopulateSeriesShape", "var_name": "autoPopulateSeriesShape"}, {"original_string": "private transient Shape baseShape;", "modifier": "private transient", "type": "Shape", "declarator": "baseShape", "var_name": "baseShape"}, {"original_string": "private BooleanList itemLabelsVisibleList;", "modifier": "private", "type": "BooleanList", "declarator": "itemLabelsVisibleList", "var_name": "itemLabelsVisibleList"}, {"original_string": "private boolean baseItemLabelsVisible;", "modifier": "private", "type": "boolean", "declarator": "baseItemLabelsVisible", "var_name": "baseItemLabelsVisible"}, {"original_string": "private ObjectList itemLabelFontList;", "modifier": "private", "type": "ObjectList", "declarator": "itemLabelFontList", "var_name": "itemLabelFontList"}, {"original_string": "private Font baseItemLabelFont;", "modifier": "private", "type": "Font", "declarator": "baseItemLabelFont", "var_name": "baseItemLabelFont"}, {"original_string": "private PaintList itemLabelPaintList;", "modifier": "private", "type": "PaintList", "declarator": "itemLabelPaintList", "var_name": "itemLabelPaintList"}, {"original_string": "private transient Paint baseItemLabelPaint;", "modifier": "private transient", "type": "Paint", "declarator": "baseItemLabelPaint", "var_name": "baseItemLabelPaint"}, {"original_string": "private ObjectList positiveItemLabelPositionList;", "modifier": "private", "type": "ObjectList", "declarator": "positiveItemLabelPositionList", "var_name": "positiveItemLabelPositionList"}, {"original_string": "private ItemLabelPosition basePositiveItemLabelPosition;", "modifier": "private", "type": "ItemLabelPosition", "declarator": "basePositiveItemLabelPosition", "var_name": "basePositiveItemLabelPosition"}, {"original_string": "private ObjectList negativeItemLabelPositionList;", "modifier": "private", "type": "ObjectList", "declarator": "negativeItemLabelPositionList", "var_name": "negativeItemLabelPositionList"}, {"original_string": "private ItemLabelPosition baseNegativeItemLabelPosition;", "modifier": "private", "type": "ItemLabelPosition", "declarator": "baseNegativeItemLabelPosition", "var_name": "baseNegativeItemLabelPosition"}, {"original_string": "private double itemLabelAnchorOffset = 2.0;", "modifier": "private", "type": "double", "declarator": "itemLabelAnchorOffset = 2.0", "var_name": "itemLabelAnchorOffset"}, {"original_string": "private BooleanList createEntitiesList;", "modifier": "private", "type": "BooleanList", "declarator": "createEntitiesList", "var_name": "createEntitiesList"}, {"original_string": "private boolean baseCreateEntities;", "modifier": "private", "type": "boolean", "declarator": "baseCreateEntities", "var_name": "baseCreateEntities"}, {"original_string": "private ShapeList legendShapeList;", "modifier": "private", "type": "ShapeList", "declarator": "legendShapeList", "var_name": "legendShapeList"}, {"original_string": "private transient Shape baseLegendShape;", "modifier": "private transient", "type": "Shape", "declarator": "baseLegendShape", "var_name": "baseLegendShape"}, {"original_string": "private boolean treatLegendShapeAsLine;", "modifier": "private", "type": "boolean", "declarator": "treatLegendShapeAsLine", "var_name": "treatLegendShapeAsLine"}, {"original_string": "private ObjectList legendTextFont;", "modifier": "private", "type": "ObjectList", "declarator": "legendTextFont", "var_name": "legendTextFont"}, {"original_string": "private Font baseLegendTextFont;", "modifier": "private", "type": "Font", "declarator": "baseLegendTextFont", "var_name": "baseLegendTextFont"}, {"original_string": "private PaintList legendTextPaint;", "modifier": "private", "type": "PaintList", "declarator": "legendTextPaint", "var_name": "legendTextPaint"}, {"original_string": "private transient Paint baseLegendTextPaint;", "modifier": "private transient", "type": "Paint", "declarator": "baseLegendTextPaint", "var_name": "baseLegendTextPaint"}, {"original_string": "private boolean dataBoundsIncludesVisibleSeriesOnly = true;", "modifier": "private", "type": "boolean", "declarator": "dataBoundsIncludesVisibleSeriesOnly = true", "var_name": "dataBoundsIncludesVisibleSeriesOnly"}, {"original_string": "private int defaultEntityRadius;", "modifier": "private", "type": "int", "declarator": "defaultEntityRadius", "var_name": "defaultEntityRadius"}, {"original_string": "private transient EventListenerList listenerList;", "modifier": "private transient", "type": "EventListenerList", "declarator": "listenerList", "var_name": "listenerList"}, {"original_string": "private RenderAttributes selectedItemAttributes;", "modifier": "private", "type": "RenderAttributes", "declarator": "selectedItemAttributes", "var_name": "selectedItemAttributes"}, {"original_string": "private static final double ADJ = Math.cos(Math.PI / 6.0);", "modifier": "private static final", "type": "double", "declarator": "ADJ = Math.cos(Math.PI / 6.0)", "var_name": "ADJ"}, {"original_string": "private static final double OPP = Math.sin(Math.PI / 6.0);", "modifier": "private static final", "type": "double", "declarator": "OPP = Math.sin(Math.PI / 6.0)", "var_name": "OPP"}], "methods": [{"identifier": "AbstractRenderer", "parameters": "()", "modifiers": "public", "return": "", "signature": " AbstractRenderer()", "full_signature": "public  AbstractRenderer()", "class_method_signature": "AbstractRenderer.AbstractRenderer()", "testcase": false, "constructor": true}, {"identifier": "getDrawingSupplier", "parameters": "()", "modifiers": "public abstract", "return": "DrawingSupplier", "signature": "DrawingSupplier getDrawingSupplier()", "full_signature": "public abstract DrawingSupplier getDrawingSupplier()", "class_method_signature": "AbstractRenderer.getDrawingSupplier()", "testcase": false, "constructor": false}, {"identifier": "getSelectedItemAttributes", "parameters": "()", "modifiers": "public", "return": "RenderAttributes", "signature": "RenderAttributes getSelectedItemAttributes()", "full_signature": "public RenderAttributes getSelectedItemAttributes()", "class_method_signature": "AbstractRenderer.getSelectedItemAttributes()", "testcase": false, "constructor": false}, {"identifier": "getItemVisible", "parameters": "(int series, int item)", "modifiers": "public", "return": "boolean", "signature": "boolean getItemVisible(int series, int item)", "full_signature": "public boolean getItemVisible(int series, int item)", "class_method_signature": "AbstractRenderer.getItemVisible(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "isSeriesVisible", "parameters": "(int series)", "modifiers": "public", "return": "boolean", "signature": "boolean isSeriesVisible(int series)", "full_signature": "public boolean isSeriesVisible(int series)", "class_method_signature": "AbstractRenderer.isSeriesVisible(int series)", "testcase": false, "constructor": false}, {"identifier": "getSeriesVisible", "parameters": "(int series)", "modifiers": "public", "return": "Boolean", "signature": "Boolean getSeriesVisible(int series)", "full_signature": "public Boolean getSeriesVisible(int series)", "class_method_signature": "AbstractRenderer.getSeriesVisible(int series)", "testcase": false, "constructor": false}, {"identifier": "setSeriesVisible", "parameters": "(int series, Boolean visible)", "modifiers": "public", "return": "void", "signature": "void setSeriesVisible(int series, Boolean visible)", "full_signature": "public void setSeriesVisible(int series, Boolean visible)", "class_method_signature": "AbstractRenderer.setSeriesVisible(int series, Boolean visible)", "testcase": false, "constructor": false}, {"identifier": "setSeriesVisible", "parameters": "(int series, Boolean visible, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setSeriesVisible(int series, Boolean visible, boolean notify)", "full_signature": "public void setSeriesVisible(int series, Boolean visible, boolean notify)", "class_method_signature": "AbstractRenderer.setSeriesVisible(int series, Boolean visible, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getBaseSeriesVisible", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getBaseSeriesVisible()", "full_signature": "public boolean getBaseSeriesVisible()", "class_method_signature": "AbstractRenderer.getBaseSeriesVisible()", "testcase": false, "constructor": false}, {"identifier": "setBaseSeriesVisible", "parameters": "(boolean visible)", "modifiers": "public", "return": "void", "signature": "void setBaseSeriesVisible(boolean visible)", "full_signature": "public void setBaseSeriesVisible(boolean visible)", "class_method_signature": "AbstractRenderer.setBaseSeriesVisible(boolean visible)", "testcase": false, "constructor": false}, {"identifier": "setBaseSeriesVisible", "parameters": "(boolean visible, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setBaseSeriesVisible(boolean visible, boolean notify)", "full_signature": "public void setBaseSeriesVisible(boolean visible, boolean notify)", "class_method_signature": "AbstractRenderer.setBaseSeriesVisible(boolean visible, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "isSeriesVisibleInLegend", "parameters": "(int series)", "modifiers": "public", "return": "boolean", "signature": "boolean isSeriesVisibleInLegend(int series)", "full_signature": "public boolean isSeriesVisibleInLegend(int series)", "class_method_signature": "AbstractRenderer.isSeriesVisibleInLegend(int series)", "testcase": false, "constructor": false}, {"identifier": "getSeriesVisibleInLegend", "parameters": "(int series)", "modifiers": "public", "return": "Boolean", "signature": "Boolean getSeriesVisibleInLegend(int series)", "full_signature": "public Boolean getSeriesVisibleInLegend(int series)", "class_method_signature": "AbstractRenderer.getSeriesVisibleInLegend(int series)", "testcase": false, "constructor": false}, {"identifier": "setSeriesVisibleInLegend", "parameters": "(int series, Boolean visible)", "modifiers": "public", "return": "void", "signature": "void setSeriesVisibleInLegend(int series, Boolean visible)", "full_signature": "public void setSeriesVisibleInLegend(int series, Boolean visible)", "class_method_signature": "AbstractRenderer.setSeriesVisibleInLegend(int series, Boolean visible)", "testcase": false, "constructor": false}, {"identifier": "setSeriesVisibleInLegend", "parameters": "(int series, Boolean visible,\n                                         boolean notify)", "modifiers": "public", "return": "void", "signature": "void setSeriesVisibleInLegend(int series, Boolean visible,\n                                         boolean notify)", "full_signature": "public void setSeriesVisibleInLegend(int series, Boolean visible,\n                                         boolean notify)", "class_method_signature": "AbstractRenderer.setSeriesVisibleInLegend(int series, Boolean visible,\n                                         boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getBaseSeriesVisibleInLegend", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getBaseSeriesVisibleInLegend()", "full_signature": "public boolean getBaseSeriesVisibleInLegend()", "class_method_signature": "AbstractRenderer.getBaseSeriesVisibleInLegend()", "testcase": false, "constructor": false}, {"identifier": "setBaseSeriesVisibleInLegend", "parameters": "(boolean visible)", "modifiers": "public", "return": "void", "signature": "void setBaseSeriesVisibleInLegend(boolean visible)", "full_signature": "public void setBaseSeriesVisibleInLegend(boolean visible)", "class_method_signature": "AbstractRenderer.setBaseSeriesVisibleInLegend(boolean visible)", "testcase": false, "constructor": false}, {"identifier": "setBaseSeriesVisibleInLegend", "parameters": "(boolean visible, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setBaseSeriesVisibleInLegend(boolean visible, boolean notify)", "full_signature": "public void setBaseSeriesVisibleInLegend(boolean visible, boolean notify)", "class_method_signature": "AbstractRenderer.setBaseSeriesVisibleInLegend(boolean visible, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getItemPaint", "parameters": "(int series, int item, boolean selected)", "modifiers": "public", "return": "Paint", "signature": "Paint getItemPaint(int series, int item, boolean selected)", "full_signature": "public Paint getItemPaint(int series, int item, boolean selected)", "class_method_signature": "AbstractRenderer.getItemPaint(int series, int item, boolean selected)", "testcase": false, "constructor": false}, {"identifier": "lookupSeriesPaint", "parameters": "(int series)", "modifiers": "public", "return": "Paint", "signature": "Paint lookupSeriesPaint(int series)", "full_signature": "public Paint lookupSeriesPaint(int series)", "class_method_signature": "AbstractRenderer.lookupSeriesPaint(int series)", "testcase": false, "constructor": false}, {"identifier": "getSeriesPaint", "parameters": "(int series)", "modifiers": "public", "return": "Paint", "signature": "Paint getSeriesPaint(int series)", "full_signature": "public Paint getSeriesPaint(int series)", "class_method_signature": "AbstractRenderer.getSeriesPaint(int series)", "testcase": false, "constructor": false}, {"identifier": "setSeriesPaint", "parameters": "(int series, Paint paint)", "modifiers": "public", "return": "void", "signature": "void setSeriesPaint(int series, Paint paint)", "full_signature": "public void setSeriesPaint(int series, Paint paint)", "class_method_signature": "AbstractRenderer.setSeriesPaint(int series, Paint paint)", "testcase": false, "constructor": false}, {"identifier": "setSeriesPaint", "parameters": "(int series, Paint paint, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setSeriesPaint(int series, Paint paint, boolean notify)", "full_signature": "public void setSeriesPaint(int series, Paint paint, boolean notify)", "class_method_signature": "AbstractRenderer.setSeriesPaint(int series, Paint paint, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "clearSeriesPaints", "parameters": "(boolean notify)", "modifiers": "public", "return": "void", "signature": "void clearSeriesPaints(boolean notify)", "full_signature": "public void clearSeriesPaints(boolean notify)", "class_method_signature": "AbstractRenderer.clearSeriesPaints(boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getBasePaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getBasePaint()", "full_signature": "public Paint getBasePaint()", "class_method_signature": "AbstractRenderer.getBasePaint()", "testcase": false, "constructor": false}, {"identifier": "setBasePaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setBasePaint(Paint paint)", "full_signature": "public void setBasePaint(Paint paint)", "class_method_signature": "AbstractRenderer.setBasePaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "setBasePaint", "parameters": "(Paint paint, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setBasePaint(Paint paint, boolean notify)", "full_signature": "public void setBasePaint(Paint paint, boolean notify)", "class_method_signature": "AbstractRenderer.setBasePaint(Paint paint, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getAutoPopulateSeriesPaint", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getAutoPopulateSeriesPaint()", "full_signature": "public boolean getAutoPopulateSeriesPaint()", "class_method_signature": "AbstractRenderer.getAutoPopulateSeriesPaint()", "testcase": false, "constructor": false}, {"identifier": "setAutoPopulateSeriesPaint", "parameters": "(boolean auto)", "modifiers": "public", "return": "void", "signature": "void setAutoPopulateSeriesPaint(boolean auto)", "full_signature": "public void setAutoPopulateSeriesPaint(boolean auto)", "class_method_signature": "AbstractRenderer.setAutoPopulateSeriesPaint(boolean auto)", "testcase": false, "constructor": false}, {"identifier": "getItemFillPaint", "parameters": "(int series, int item, boolean selected)", "modifiers": "public", "return": "Paint", "signature": "Paint getItemFillPaint(int series, int item, boolean selected)", "full_signature": "public Paint getItemFillPaint(int series, int item, boolean selected)", "class_method_signature": "AbstractRenderer.getItemFillPaint(int series, int item, boolean selected)", "testcase": false, "constructor": false}, {"identifier": "lookupSeriesFillPaint", "parameters": "(int series)", "modifiers": "public", "return": "Paint", "signature": "Paint lookupSeriesFillPaint(int series)", "full_signature": "public Paint lookupSeriesFillPaint(int series)", "class_method_signature": "AbstractRenderer.lookupSeriesFillPaint(int series)", "testcase": false, "constructor": false}, {"identifier": "getSeriesFillPaint", "parameters": "(int series)", "modifiers": "public", "return": "Paint", "signature": "Paint getSeriesFillPaint(int series)", "full_signature": "public Paint getSeriesFillPaint(int series)", "class_method_signature": "AbstractRenderer.getSeriesFillPaint(int series)", "testcase": false, "constructor": false}, {"identifier": "setSeriesFillPaint", "parameters": "(int series, Paint paint)", "modifiers": "public", "return": "void", "signature": "void setSeriesFillPaint(int series, Paint paint)", "full_signature": "public void setSeriesFillPaint(int series, Paint paint)", "class_method_signature": "AbstractRenderer.setSeriesFillPaint(int series, Paint paint)", "testcase": false, "constructor": false}, {"identifier": "setSeriesFillPaint", "parameters": "(int series, Paint paint, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setSeriesFillPaint(int series, Paint paint, boolean notify)", "full_signature": "public void setSeriesFillPaint(int series, Paint paint, boolean notify)", "class_method_signature": "AbstractRenderer.setSeriesFillPaint(int series, Paint paint, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getBaseFillPaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getBaseFillPaint()", "full_signature": "public Paint getBaseFillPaint()", "class_method_signature": "AbstractRenderer.getBaseFillPaint()", "testcase": false, "constructor": false}, {"identifier": "setBaseFillPaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setBaseFillPaint(Paint paint)", "full_signature": "public void setBaseFillPaint(Paint paint)", "class_method_signature": "AbstractRenderer.setBaseFillPaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "setBaseFillPaint", "parameters": "(Paint paint, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setBaseFillPaint(Paint paint, boolean notify)", "full_signature": "public void setBaseFillPaint(Paint paint, boolean notify)", "class_method_signature": "AbstractRenderer.setBaseFillPaint(Paint paint, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getAutoPopulateSeriesFillPaint", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getAutoPopulateSeriesFillPaint()", "full_signature": "public boolean getAutoPopulateSeriesFillPaint()", "class_method_signature": "AbstractRenderer.getAutoPopulateSeriesFillPaint()", "testcase": false, "constructor": false}, {"identifier": "setAutoPopulateSeriesFillPaint", "parameters": "(boolean auto)", "modifiers": "public", "return": "void", "signature": "void setAutoPopulateSeriesFillPaint(boolean auto)", "full_signature": "public void setAutoPopulateSeriesFillPaint(boolean auto)", "class_method_signature": "AbstractRenderer.setAutoPopulateSeriesFillPaint(boolean auto)", "testcase": false, "constructor": false}, {"identifier": "getItemOutlinePaint", "parameters": "(int series, int item, boolean selected)", "modifiers": "public", "return": "Paint", "signature": "Paint getItemOutlinePaint(int series, int item, boolean selected)", "full_signature": "public Paint getItemOutlinePaint(int series, int item, boolean selected)", "class_method_signature": "AbstractRenderer.getItemOutlinePaint(int series, int item, boolean selected)", "testcase": false, "constructor": false}, {"identifier": "lookupSeriesOutlinePaint", "parameters": "(int series)", "modifiers": "public", "return": "Paint", "signature": "Paint lookupSeriesOutlinePaint(int series)", "full_signature": "public Paint lookupSeriesOutlinePaint(int series)", "class_method_signature": "AbstractRenderer.lookupSeriesOutlinePaint(int series)", "testcase": false, "constructor": false}, {"identifier": "getSeriesOutlinePaint", "parameters": "(int series)", "modifiers": "public", "return": "Paint", "signature": "Paint getSeriesOutlinePaint(int series)", "full_signature": "public Paint getSeriesOutlinePaint(int series)", "class_method_signature": "AbstractRenderer.getSeriesOutlinePaint(int series)", "testcase": false, "constructor": false}, {"identifier": "setSeriesOutlinePaint", "parameters": "(int series, Paint paint)", "modifiers": "public", "return": "void", "signature": "void setSeriesOutlinePaint(int series, Paint paint)", "full_signature": "public void setSeriesOutlinePaint(int series, Paint paint)", "class_method_signature": "AbstractRenderer.setSeriesOutlinePaint(int series, Paint paint)", "testcase": false, "constructor": false}, {"identifier": "setSeriesOutlinePaint", "parameters": "(int series, Paint paint, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setSeriesOutlinePaint(int series, Paint paint, boolean notify)", "full_signature": "public void setSeriesOutlinePaint(int series, Paint paint, boolean notify)", "class_method_signature": "AbstractRenderer.setSeriesOutlinePaint(int series, Paint paint, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getBaseOutlinePaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getBaseOutlinePaint()", "full_signature": "public Paint getBaseOutlinePaint()", "class_method_signature": "AbstractRenderer.getBaseOutlinePaint()", "testcase": false, "constructor": false}, {"identifier": "setBaseOutlinePaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setBaseOutlinePaint(Paint paint)", "full_signature": "public void setBaseOutlinePaint(Paint paint)", "class_method_signature": "AbstractRenderer.setBaseOutlinePaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "setBaseOutlinePaint", "parameters": "(Paint paint, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setBaseOutlinePaint(Paint paint, boolean notify)", "full_signature": "public void setBaseOutlinePaint(Paint paint, boolean notify)", "class_method_signature": "AbstractRenderer.setBaseOutlinePaint(Paint paint, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getAutoPopulateSeriesOutlinePaint", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getAutoPopulateSeriesOutlinePaint()", "full_signature": "public boolean getAutoPopulateSeriesOutlinePaint()", "class_method_signature": "AbstractRenderer.getAutoPopulateSeriesOutlinePaint()", "testcase": false, "constructor": false}, {"identifier": "setAutoPopulateSeriesOutlinePaint", "parameters": "(boolean auto)", "modifiers": "public", "return": "void", "signature": "void setAutoPopulateSeriesOutlinePaint(boolean auto)", "full_signature": "public void setAutoPopulateSeriesOutlinePaint(boolean auto)", "class_method_signature": "AbstractRenderer.setAutoPopulateSeriesOutlinePaint(boolean auto)", "testcase": false, "constructor": false}, {"identifier": "getItemStroke", "parameters": "(int series, int item, boolean selected)", "modifiers": "public", "return": "Stroke", "signature": "Stroke getItemStroke(int series, int item, boolean selected)", "full_signature": "public Stroke getItemStroke(int series, int item, boolean selected)", "class_method_signature": "AbstractRenderer.getItemStroke(int series, int item, boolean selected)", "testcase": false, "constructor": false}, {"identifier": "lookupSeriesStroke", "parameters": "(int series)", "modifiers": "public", "return": "Stroke", "signature": "Stroke lookupSeriesStroke(int series)", "full_signature": "public Stroke lookupSeriesStroke(int series)", "class_method_signature": "AbstractRenderer.lookupSeriesStroke(int series)", "testcase": false, "constructor": false}, {"identifier": "getSeriesStroke", "parameters": "(int series)", "modifiers": "public", "return": "Stroke", "signature": "Stroke getSeriesStroke(int series)", "full_signature": "public Stroke getSeriesStroke(int series)", "class_method_signature": "AbstractRenderer.getSeriesStroke(int series)", "testcase": false, "constructor": false}, {"identifier": "setSeriesStroke", "parameters": "(int series, Stroke stroke)", "modifiers": "public", "return": "void", "signature": "void setSeriesStroke(int series, Stroke stroke)", "full_signature": "public void setSeriesStroke(int series, Stroke stroke)", "class_method_signature": "AbstractRenderer.setSeriesStroke(int series, Stroke stroke)", "testcase": false, "constructor": false}, {"identifier": "setSeriesStroke", "parameters": "(int series, Stroke stroke, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setSeriesStroke(int series, Stroke stroke, boolean notify)", "full_signature": "public void setSeriesStroke(int series, Stroke stroke, boolean notify)", "class_method_signature": "AbstractRenderer.setSeriesStroke(int series, Stroke stroke, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "clearSeriesStrokes", "parameters": "(boolean notify)", "modifiers": "public", "return": "void", "signature": "void clearSeriesStrokes(boolean notify)", "full_signature": "public void clearSeriesStrokes(boolean notify)", "class_method_signature": "AbstractRenderer.clearSeriesStrokes(boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getBaseStroke", "parameters": "()", "modifiers": "public", "return": "Stroke", "signature": "Stroke getBaseStroke()", "full_signature": "public Stroke getBaseStroke()", "class_method_signature": "AbstractRenderer.getBaseStroke()", "testcase": false, "constructor": false}, {"identifier": "setBaseStroke", "parameters": "(Stroke stroke)", "modifiers": "public", "return": "void", "signature": "void setBaseStroke(Stroke stroke)", "full_signature": "public void setBaseStroke(Stroke stroke)", "class_method_signature": "AbstractRenderer.setBaseStroke(Stroke stroke)", "testcase": false, "constructor": false}, {"identifier": "setBaseStroke", "parameters": "(Stroke stroke, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setBaseStroke(Stroke stroke, boolean notify)", "full_signature": "public void setBaseStroke(Stroke stroke, boolean notify)", "class_method_signature": "AbstractRenderer.setBaseStroke(Stroke stroke, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getAutoPopulateSeriesStroke", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getAutoPopulateSeriesStroke()", "full_signature": "public boolean getAutoPopulateSeriesStroke()", "class_method_signature": "AbstractRenderer.getAutoPopulateSeriesStroke()", "testcase": false, "constructor": false}, {"identifier": "setAutoPopulateSeriesStroke", "parameters": "(boolean auto)", "modifiers": "public", "return": "void", "signature": "void setAutoPopulateSeriesStroke(boolean auto)", "full_signature": "public void setAutoPopulateSeriesStroke(boolean auto)", "class_method_signature": "AbstractRenderer.setAutoPopulateSeriesStroke(boolean auto)", "testcase": false, "constructor": false}, {"identifier": "getItemOutlineStroke", "parameters": "(int series, int item, boolean selected)", "modifiers": "public", "return": "Stroke", "signature": "Stroke getItemOutlineStroke(int series, int item, boolean selected)", "full_signature": "public Stroke getItemOutlineStroke(int series, int item, boolean selected)", "class_method_signature": "AbstractRenderer.getItemOutlineStroke(int series, int item, boolean selected)", "testcase": false, "constructor": false}, {"identifier": "lookupSeriesOutlineStroke", "parameters": "(int series)", "modifiers": "public", "return": "Stroke", "signature": "Stroke lookupSeriesOutlineStroke(int series)", "full_signature": "public Stroke lookupSeriesOutlineStroke(int series)", "class_method_signature": "AbstractRenderer.lookupSeriesOutlineStroke(int series)", "testcase": false, "constructor": false}, {"identifier": "getSeriesOutlineStroke", "parameters": "(int series)", "modifiers": "public", "return": "Stroke", "signature": "Stroke getSeriesOutlineStroke(int series)", "full_signature": "public Stroke getSeriesOutlineStroke(int series)", "class_method_signature": "AbstractRenderer.getSeriesOutlineStroke(int series)", "testcase": false, "constructor": false}, {"identifier": "setSeriesOutlineStroke", "parameters": "(int series, Stroke stroke)", "modifiers": "public", "return": "void", "signature": "void setSeriesOutlineStroke(int series, Stroke stroke)", "full_signature": "public void setSeriesOutlineStroke(int series, Stroke stroke)", "class_method_signature": "AbstractRenderer.setSeriesOutlineStroke(int series, Stroke stroke)", "testcase": false, "constructor": false}, {"identifier": "setSeriesOutlineStroke", "parameters": "(int series, Stroke stroke,\n                                       boolean notify)", "modifiers": "public", "return": "void", "signature": "void setSeriesOutlineStroke(int series, Stroke stroke,\n                                       boolean notify)", "full_signature": "public void setSeriesOutlineStroke(int series, Stroke stroke,\n                                       boolean notify)", "class_method_signature": "AbstractRenderer.setSeriesOutlineStroke(int series, Stroke stroke,\n                                       boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getBaseOutlineStroke", "parameters": "()", "modifiers": "public", "return": "Stroke", "signature": "Stroke getBaseOutlineStroke()", "full_signature": "public Stroke getBaseOutlineStroke()", "class_method_signature": "AbstractRenderer.getBaseOutlineStroke()", "testcase": false, "constructor": false}, {"identifier": "setBaseOutlineStroke", "parameters": "(Stroke stroke)", "modifiers": "public", "return": "void", "signature": "void setBaseOutlineStroke(Stroke stroke)", "full_signature": "public void setBaseOutlineStroke(Stroke stroke)", "class_method_signature": "AbstractRenderer.setBaseOutlineStroke(Stroke stroke)", "testcase": false, "constructor": false}, {"identifier": "setBaseOutlineStroke", "parameters": "(Stroke stroke, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setBaseOutlineStroke(Stroke stroke, boolean notify)", "full_signature": "public void setBaseOutlineStroke(Stroke stroke, boolean notify)", "class_method_signature": "AbstractRenderer.setBaseOutlineStroke(Stroke stroke, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getAutoPopulateSeriesOutlineStroke", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getAutoPopulateSeriesOutlineStroke()", "full_signature": "public boolean getAutoPopulateSeriesOutlineStroke()", "class_method_signature": "AbstractRenderer.getAutoPopulateSeriesOutlineStroke()", "testcase": false, "constructor": false}, {"identifier": "setAutoPopulateSeriesOutlineStroke", "parameters": "(boolean auto)", "modifiers": "public", "return": "void", "signature": "void setAutoPopulateSeriesOutlineStroke(boolean auto)", "full_signature": "public void setAutoPopulateSeriesOutlineStroke(boolean auto)", "class_method_signature": "AbstractRenderer.setAutoPopulateSeriesOutlineStroke(boolean auto)", "testcase": false, "constructor": false}, {"identifier": "getItemShape", "parameters": "(int series, int item, boolean selected)", "modifiers": "public", "return": "Shape", "signature": "Shape getItemShape(int series, int item, boolean selected)", "full_signature": "public Shape getItemShape(int series, int item, boolean selected)", "class_method_signature": "AbstractRenderer.getItemShape(int series, int item, boolean selected)", "testcase": false, "constructor": false}, {"identifier": "lookupSeriesShape", "parameters": "(int series)", "modifiers": "public", "return": "Shape", "signature": "Shape lookupSeriesShape(int series)", "full_signature": "public Shape lookupSeriesShape(int series)", "class_method_signature": "AbstractRenderer.lookupSeriesShape(int series)", "testcase": false, "constructor": false}, {"identifier": "getSeriesShape", "parameters": "(int series)", "modifiers": "public", "return": "Shape", "signature": "Shape getSeriesShape(int series)", "full_signature": "public Shape getSeriesShape(int series)", "class_method_signature": "AbstractRenderer.getSeriesShape(int series)", "testcase": false, "constructor": false}, {"identifier": "setSeriesShape", "parameters": "(int series, Shape shape)", "modifiers": "public", "return": "void", "signature": "void setSeriesShape(int series, Shape shape)", "full_signature": "public void setSeriesShape(int series, Shape shape)", "class_method_signature": "AbstractRenderer.setSeriesShape(int series, Shape shape)", "testcase": false, "constructor": false}, {"identifier": "setSeriesShape", "parameters": "(int series, Shape shape, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setSeriesShape(int series, Shape shape, boolean notify)", "full_signature": "public void setSeriesShape(int series, Shape shape, boolean notify)", "class_method_signature": "AbstractRenderer.setSeriesShape(int series, Shape shape, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getBaseShape", "parameters": "()", "modifiers": "public", "return": "Shape", "signature": "Shape getBaseShape()", "full_signature": "public Shape getBaseShape()", "class_method_signature": "AbstractRenderer.getBaseShape()", "testcase": false, "constructor": false}, {"identifier": "setBaseShape", "parameters": "(Shape shape)", "modifiers": "public", "return": "void", "signature": "void setBaseShape(Shape shape)", "full_signature": "public void setBaseShape(Shape shape)", "class_method_signature": "AbstractRenderer.setBaseShape(Shape shape)", "testcase": false, "constructor": false}, {"identifier": "setBaseShape", "parameters": "(Shape shape, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setBaseShape(Shape shape, boolean notify)", "full_signature": "public void setBaseShape(Shape shape, boolean notify)", "class_method_signature": "AbstractRenderer.setBaseShape(Shape shape, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getAutoPopulateSeriesShape", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getAutoPopulateSeriesShape()", "full_signature": "public boolean getAutoPopulateSeriesShape()", "class_method_signature": "AbstractRenderer.getAutoPopulateSeriesShape()", "testcase": false, "constructor": false}, {"identifier": "setAutoPopulateSeriesShape", "parameters": "(boolean auto)", "modifiers": "public", "return": "void", "signature": "void setAutoPopulateSeriesShape(boolean auto)", "full_signature": "public void setAutoPopulateSeriesShape(boolean auto)", "class_method_signature": "AbstractRenderer.setAutoPopulateSeriesShape(boolean auto)", "testcase": false, "constructor": false}, {"identifier": "isItemLabelVisible", "parameters": "(int series, int item, boolean selected)", "modifiers": "public", "return": "boolean", "signature": "boolean isItemLabelVisible(int series, int item, boolean selected)", "full_signature": "public boolean isItemLabelVisible(int series, int item, boolean selected)", "class_method_signature": "AbstractRenderer.isItemLabelVisible(int series, int item, boolean selected)", "testcase": false, "constructor": false}, {"identifier": "isSeriesItemLabelsVisible", "parameters": "(int series)", "modifiers": "public", "return": "boolean", "signature": "boolean isSeriesItemLabelsVisible(int series)", "full_signature": "public boolean isSeriesItemLabelsVisible(int series)", "class_method_signature": "AbstractRenderer.isSeriesItemLabelsVisible(int series)", "testcase": false, "constructor": false}, {"identifier": "getSeriesItemLabelsVisible", "parameters": "(int series)", "modifiers": "public", "return": "Boolean", "signature": "Boolean getSeriesItemLabelsVisible(int series)", "full_signature": "public Boolean getSeriesItemLabelsVisible(int series)", "class_method_signature": "AbstractRenderer.getSeriesItemLabelsVisible(int series)", "testcase": false, "constructor": false}, {"identifier": "setSeriesItemLabelsVisible", "parameters": "(int series, boolean visible)", "modifiers": "public", "return": "void", "signature": "void setSeriesItemLabelsVisible(int series, boolean visible)", "full_signature": "public void setSeriesItemLabelsVisible(int series, boolean visible)", "class_method_signature": "AbstractRenderer.setSeriesItemLabelsVisible(int series, boolean visible)", "testcase": false, "constructor": false}, {"identifier": "setSeriesItemLabelsVisible", "parameters": "(int series, Boolean visible)", "modifiers": "public", "return": "void", "signature": "void setSeriesItemLabelsVisible(int series, Boolean visible)", "full_signature": "public void setSeriesItemLabelsVisible(int series, Boolean visible)", "class_method_signature": "AbstractRenderer.setSeriesItemLabelsVisible(int series, Boolean visible)", "testcase": false, "constructor": false}, {"identifier": "setSeriesItemLabelsVisible", "parameters": "(int series, Boolean visible,\n                                           boolean notify)", "modifiers": "public", "return": "void", "signature": "void setSeriesItemLabelsVisible(int series, Boolean visible,\n                                           boolean notify)", "full_signature": "public void setSeriesItemLabelsVisible(int series, Boolean visible,\n                                           boolean notify)", "class_method_signature": "AbstractRenderer.setSeriesItemLabelsVisible(int series, Boolean visible,\n                                           boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getBaseItemLabelsVisible", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getBaseItemLabelsVisible()", "full_signature": "public boolean getBaseItemLabelsVisible()", "class_method_signature": "AbstractRenderer.getBaseItemLabelsVisible()", "testcase": false, "constructor": false}, {"identifier": "setBaseItemLabelsVisible", "parameters": "(boolean visible)", "modifiers": "public", "return": "void", "signature": "void setBaseItemLabelsVisible(boolean visible)", "full_signature": "public void setBaseItemLabelsVisible(boolean visible)", "class_method_signature": "AbstractRenderer.setBaseItemLabelsVisible(boolean visible)", "testcase": false, "constructor": false}, {"identifier": "setBaseItemLabelsVisible", "parameters": "(boolean visible, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setBaseItemLabelsVisible(boolean visible, boolean notify)", "full_signature": "public void setBaseItemLabelsVisible(boolean visible, boolean notify)", "class_method_signature": "AbstractRenderer.setBaseItemLabelsVisible(boolean visible, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getItemLabelFont", "parameters": "(int series, int item, boolean selected)", "modifiers": "public", "return": "Font", "signature": "Font getItemLabelFont(int series, int item, boolean selected)", "full_signature": "public Font getItemLabelFont(int series, int item, boolean selected)", "class_method_signature": "AbstractRenderer.getItemLabelFont(int series, int item, boolean selected)", "testcase": false, "constructor": false}, {"identifier": "getSeriesItemLabelFont", "parameters": "(int series)", "modifiers": "public", "return": "Font", "signature": "Font getSeriesItemLabelFont(int series)", "full_signature": "public Font getSeriesItemLabelFont(int series)", "class_method_signature": "AbstractRenderer.getSeriesItemLabelFont(int series)", "testcase": false, "constructor": false}, {"identifier": "setSeriesItemLabelFont", "parameters": "(int series, Font font)", "modifiers": "public", "return": "void", "signature": "void setSeriesItemLabelFont(int series, Font font)", "full_signature": "public void setSeriesItemLabelFont(int series, Font font)", "class_method_signature": "AbstractRenderer.setSeriesItemLabelFont(int series, Font font)", "testcase": false, "constructor": false}, {"identifier": "setSeriesItemLabelFont", "parameters": "(int series, Font font, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setSeriesItemLabelFont(int series, Font font, boolean notify)", "full_signature": "public void setSeriesItemLabelFont(int series, Font font, boolean notify)", "class_method_signature": "AbstractRenderer.setSeriesItemLabelFont(int series, Font font, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getBaseItemLabelFont", "parameters": "()", "modifiers": "public", "return": "Font", "signature": "Font getBaseItemLabelFont()", "full_signature": "public Font getBaseItemLabelFont()", "class_method_signature": "AbstractRenderer.getBaseItemLabelFont()", "testcase": false, "constructor": false}, {"identifier": "setBaseItemLabelFont", "parameters": "(Font font)", "modifiers": "public", "return": "void", "signature": "void setBaseItemLabelFont(Font font)", "full_signature": "public void setBaseItemLabelFont(Font font)", "class_method_signature": "AbstractRenderer.setBaseItemLabelFont(Font font)", "testcase": false, "constructor": false}, {"identifier": "setBaseItemLabelFont", "parameters": "(Font font, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setBaseItemLabelFont(Font font, boolean notify)", "full_signature": "public void setBaseItemLabelFont(Font font, boolean notify)", "class_method_signature": "AbstractRenderer.setBaseItemLabelFont(Font font, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getItemLabelPaint", "parameters": "(int series, int item, boolean selected)", "modifiers": "public", "return": "Paint", "signature": "Paint getItemLabelPaint(int series, int item, boolean selected)", "full_signature": "public Paint getItemLabelPaint(int series, int item, boolean selected)", "class_method_signature": "AbstractRenderer.getItemLabelPaint(int series, int item, boolean selected)", "testcase": false, "constructor": false}, {"identifier": "getSeriesItemLabelPaint", "parameters": "(int series)", "modifiers": "public", "return": "Paint", "signature": "Paint getSeriesItemLabelPaint(int series)", "full_signature": "public Paint getSeriesItemLabelPaint(int series)", "class_method_signature": "AbstractRenderer.getSeriesItemLabelPaint(int series)", "testcase": false, "constructor": false}, {"identifier": "setSeriesItemLabelPaint", "parameters": "(int series, Paint paint)", "modifiers": "public", "return": "void", "signature": "void setSeriesItemLabelPaint(int series, Paint paint)", "full_signature": "public void setSeriesItemLabelPaint(int series, Paint paint)", "class_method_signature": "AbstractRenderer.setSeriesItemLabelPaint(int series, Paint paint)", "testcase": false, "constructor": false}, {"identifier": "setSeriesItemLabelPaint", "parameters": "(int series, Paint paint,\n                                        boolean notify)", "modifiers": "public", "return": "void", "signature": "void setSeriesItemLabelPaint(int series, Paint paint,\n                                        boolean notify)", "full_signature": "public void setSeriesItemLabelPaint(int series, Paint paint,\n                                        boolean notify)", "class_method_signature": "AbstractRenderer.setSeriesItemLabelPaint(int series, Paint paint,\n                                        boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getBaseItemLabelPaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getBaseItemLabelPaint()", "full_signature": "public Paint getBaseItemLabelPaint()", "class_method_signature": "AbstractRenderer.getBaseItemLabelPaint()", "testcase": false, "constructor": false}, {"identifier": "setBaseItemLabelPaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setBaseItemLabelPaint(Paint paint)", "full_signature": "public void setBaseItemLabelPaint(Paint paint)", "class_method_signature": "AbstractRenderer.setBaseItemLabelPaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "setBaseItemLabelPaint", "parameters": "(Paint paint, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setBaseItemLabelPaint(Paint paint, boolean notify)", "full_signature": "public void setBaseItemLabelPaint(Paint paint, boolean notify)", "class_method_signature": "AbstractRenderer.setBaseItemLabelPaint(Paint paint, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getPositiveItemLabelPosition", "parameters": "(int series, int item,\n            boolean selected)", "modifiers": "public", "return": "ItemLabelPosition", "signature": "ItemLabelPosition getPositiveItemLabelPosition(int series, int item,\n            boolean selected)", "full_signature": "public ItemLabelPosition getPositiveItemLabelPosition(int series, int item,\n            boolean selected)", "class_method_signature": "AbstractRenderer.getPositiveItemLabelPosition(int series, int item,\n            boolean selected)", "testcase": false, "constructor": false}, {"identifier": "getSeriesPositiveItemLabelPosition", "parameters": "(int series)", "modifiers": "public", "return": "ItemLabelPosition", "signature": "ItemLabelPosition getSeriesPositiveItemLabelPosition(int series)", "full_signature": "public ItemLabelPosition getSeriesPositiveItemLabelPosition(int series)", "class_method_signature": "AbstractRenderer.getSeriesPositiveItemLabelPosition(int series)", "testcase": false, "constructor": false}, {"identifier": "setSeriesPositiveItemLabelPosition", "parameters": "(int series,\n                                                   ItemLabelPosition position)", "modifiers": "public", "return": "void", "signature": "void setSeriesPositiveItemLabelPosition(int series,\n                                                   ItemLabelPosition position)", "full_signature": "public void setSeriesPositiveItemLabelPosition(int series,\n                                                   ItemLabelPosition position)", "class_method_signature": "AbstractRenderer.setSeriesPositiveItemLabelPosition(int series,\n                                                   ItemLabelPosition position)", "testcase": false, "constructor": false}, {"identifier": "setSeriesPositiveItemLabelPosition", "parameters": "(int series,\n                                                   ItemLabelPosition position,\n                                                   boolean notify)", "modifiers": "public", "return": "void", "signature": "void setSeriesPositiveItemLabelPosition(int series,\n                                                   ItemLabelPosition position,\n                                                   boolean notify)", "full_signature": "public void setSeriesPositiveItemLabelPosition(int series,\n                                                   ItemLabelPosition position,\n                                                   boolean notify)", "class_method_signature": "AbstractRenderer.setSeriesPositiveItemLabelPosition(int series,\n                                                   ItemLabelPosition position,\n                                                   boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getBasePositiveItemLabelPosition", "parameters": "()", "modifiers": "public", "return": "ItemLabelPosition", "signature": "ItemLabelPosition getBasePositiveItemLabelPosition()", "full_signature": "public ItemLabelPosition getBasePositiveItemLabelPosition()", "class_method_signature": "AbstractRenderer.getBasePositiveItemLabelPosition()", "testcase": false, "constructor": false}, {"identifier": "setBasePositiveItemLabelPosition", "parameters": "(ItemLabelPosition position)", "modifiers": "public", "return": "void", "signature": "void setBasePositiveItemLabelPosition(ItemLabelPosition position)", "full_signature": "public void setBasePositiveItemLabelPosition(ItemLabelPosition position)", "class_method_signature": "AbstractRenderer.setBasePositiveItemLabelPosition(ItemLabelPosition position)", "testcase": false, "constructor": false}, {"identifier": "setBasePositiveItemLabelPosition", "parameters": "(ItemLabelPosition position,\n                                                 boolean notify)", "modifiers": "public", "return": "void", "signature": "void setBasePositiveItemLabelPosition(ItemLabelPosition position,\n                                                 boolean notify)", "full_signature": "public void setBasePositiveItemLabelPosition(ItemLabelPosition position,\n                                                 boolean notify)", "class_method_signature": "AbstractRenderer.setBasePositiveItemLabelPosition(ItemLabelPosition position,\n                                                 boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getNegativeItemLabelPosition", "parameters": "(int series, int item,\n            boolean selected)", "modifiers": "public", "return": "ItemLabelPosition", "signature": "ItemLabelPosition getNegativeItemLabelPosition(int series, int item,\n            boolean selected)", "full_signature": "public ItemLabelPosition getNegativeItemLabelPosition(int series, int item,\n            boolean selected)", "class_method_signature": "AbstractRenderer.getNegativeItemLabelPosition(int series, int item,\n            boolean selected)", "testcase": false, "constructor": false}, {"identifier": "getSeriesNegativeItemLabelPosition", "parameters": "(int series)", "modifiers": "public", "return": "ItemLabelPosition", "signature": "ItemLabelPosition getSeriesNegativeItemLabelPosition(int series)", "full_signature": "public ItemLabelPosition getSeriesNegativeItemLabelPosition(int series)", "class_method_signature": "AbstractRenderer.getSeriesNegativeItemLabelPosition(int series)", "testcase": false, "constructor": false}, {"identifier": "setSeriesNegativeItemLabelPosition", "parameters": "(int series,\n                                                   ItemLabelPosition position)", "modifiers": "public", "return": "void", "signature": "void setSeriesNegativeItemLabelPosition(int series,\n                                                   ItemLabelPosition position)", "full_signature": "public void setSeriesNegativeItemLabelPosition(int series,\n                                                   ItemLabelPosition position)", "class_method_signature": "AbstractRenderer.setSeriesNegativeItemLabelPosition(int series,\n                                                   ItemLabelPosition position)", "testcase": false, "constructor": false}, {"identifier": "setSeriesNegativeItemLabelPosition", "parameters": "(int series,\n                                                   ItemLabelPosition position,\n                                                   boolean notify)", "modifiers": "public", "return": "void", "signature": "void setSeriesNegativeItemLabelPosition(int series,\n                                                   ItemLabelPosition position,\n                                                   boolean notify)", "full_signature": "public void setSeriesNegativeItemLabelPosition(int series,\n                                                   ItemLabelPosition position,\n                                                   boolean notify)", "class_method_signature": "AbstractRenderer.setSeriesNegativeItemLabelPosition(int series,\n                                                   ItemLabelPosition position,\n                                                   boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getBaseNegativeItemLabelPosition", "parameters": "()", "modifiers": "public", "return": "ItemLabelPosition", "signature": "ItemLabelPosition getBaseNegativeItemLabelPosition()", "full_signature": "public ItemLabelPosition getBaseNegativeItemLabelPosition()", "class_method_signature": "AbstractRenderer.getBaseNegativeItemLabelPosition()", "testcase": false, "constructor": false}, {"identifier": "setBaseNegativeItemLabelPosition", "parameters": "(ItemLabelPosition position)", "modifiers": "public", "return": "void", "signature": "void setBaseNegativeItemLabelPosition(ItemLabelPosition position)", "full_signature": "public void setBaseNegativeItemLabelPosition(ItemLabelPosition position)", "class_method_signature": "AbstractRenderer.setBaseNegativeItemLabelPosition(ItemLabelPosition position)", "testcase": false, "constructor": false}, {"identifier": "setBaseNegativeItemLabelPosition", "parameters": "(ItemLabelPosition position,\n                                                 boolean notify)", "modifiers": "public", "return": "void", "signature": "void setBaseNegativeItemLabelPosition(ItemLabelPosition position,\n                                                 boolean notify)", "full_signature": "public void setBaseNegativeItemLabelPosition(ItemLabelPosition position,\n                                                 boolean notify)", "class_method_signature": "AbstractRenderer.setBaseNegativeItemLabelPosition(ItemLabelPosition position,\n                                                 boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getItemLabelAnchorOffset", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getItemLabelAnchorOffset()", "full_signature": "public double getItemLabelAnchorOffset()", "class_method_signature": "AbstractRenderer.getItemLabelAnchorOffset()", "testcase": false, "constructor": false}, {"identifier": "setItemLabelAnchorOffset", "parameters": "(double offset)", "modifiers": "public", "return": "void", "signature": "void setItemLabelAnchorOffset(double offset)", "full_signature": "public void setItemLabelAnchorOffset(double offset)", "class_method_signature": "AbstractRenderer.setItemLabelAnchorOffset(double offset)", "testcase": false, "constructor": false}, {"identifier": "getItemCreateEntity", "parameters": "(int series, int item, boolean selected)", "modifiers": "public", "return": "boolean", "signature": "boolean getItemCreateEntity(int series, int item, boolean selected)", "full_signature": "public boolean getItemCreateEntity(int series, int item, boolean selected)", "class_method_signature": "AbstractRenderer.getItemCreateEntity(int series, int item, boolean selected)", "testcase": false, "constructor": false}, {"identifier": "getSeriesCreateEntities", "parameters": "(int series)", "modifiers": "public", "return": "Boolean", "signature": "Boolean getSeriesCreateEntities(int series)", "full_signature": "public Boolean getSeriesCreateEntities(int series)", "class_method_signature": "AbstractRenderer.getSeriesCreateEntities(int series)", "testcase": false, "constructor": false}, {"identifier": "setSeriesCreateEntities", "parameters": "(int series, Boolean create)", "modifiers": "public", "return": "void", "signature": "void setSeriesCreateEntities(int series, Boolean create)", "full_signature": "public void setSeriesCreateEntities(int series, Boolean create)", "class_method_signature": "AbstractRenderer.setSeriesCreateEntities(int series, Boolean create)", "testcase": false, "constructor": false}, {"identifier": "setSeriesCreateEntities", "parameters": "(int series, Boolean create,\n                                        boolean notify)", "modifiers": "public", "return": "void", "signature": "void setSeriesCreateEntities(int series, Boolean create,\n                                        boolean notify)", "full_signature": "public void setSeriesCreateEntities(int series, Boolean create,\n                                        boolean notify)", "class_method_signature": "AbstractRenderer.setSeriesCreateEntities(int series, Boolean create,\n                                        boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getBaseCreateEntities", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getBaseCreateEntities()", "full_signature": "public boolean getBaseCreateEntities()", "class_method_signature": "AbstractRenderer.getBaseCreateEntities()", "testcase": false, "constructor": false}, {"identifier": "setBaseCreateEntities", "parameters": "(boolean create)", "modifiers": "public", "return": "void", "signature": "void setBaseCreateEntities(boolean create)", "full_signature": "public void setBaseCreateEntities(boolean create)", "class_method_signature": "AbstractRenderer.setBaseCreateEntities(boolean create)", "testcase": false, "constructor": false}, {"identifier": "setBaseCreateEntities", "parameters": "(boolean create, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setBaseCreateEntities(boolean create, boolean notify)", "full_signature": "public void setBaseCreateEntities(boolean create, boolean notify)", "class_method_signature": "AbstractRenderer.setBaseCreateEntities(boolean create, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getDefaultEntityRadius", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getDefaultEntityRadius()", "full_signature": "public int getDefaultEntityRadius()", "class_method_signature": "AbstractRenderer.getDefaultEntityRadius()", "testcase": false, "constructor": false}, {"identifier": "setDefaultEntityRadius", "parameters": "(int radius)", "modifiers": "public", "return": "void", "signature": "void setDefaultEntityRadius(int radius)", "full_signature": "public void setDefaultEntityRadius(int radius)", "class_method_signature": "AbstractRenderer.setDefaultEntityRadius(int radius)", "testcase": false, "constructor": false}, {"identifier": "lookupLegendShape", "parameters": "(int series)", "modifiers": "public", "return": "Shape", "signature": "Shape lookupLegendShape(int series)", "full_signature": "public Shape lookupLegendShape(int series)", "class_method_signature": "AbstractRenderer.lookupLegendShape(int series)", "testcase": false, "constructor": false}, {"identifier": "getLegendShape", "parameters": "(int series)", "modifiers": "public", "return": "Shape", "signature": "Shape getLegendShape(int series)", "full_signature": "public Shape getLegendShape(int series)", "class_method_signature": "AbstractRenderer.getLegendShape(int series)", "testcase": false, "constructor": false}, {"identifier": "setLegendShape", "parameters": "(int series, Shape shape)", "modifiers": "public", "return": "void", "signature": "void setLegendShape(int series, Shape shape)", "full_signature": "public void setLegendShape(int series, Shape shape)", "class_method_signature": "AbstractRenderer.setLegendShape(int series, Shape shape)", "testcase": false, "constructor": false}, {"identifier": "getBaseLegendShape", "parameters": "()", "modifiers": "public", "return": "Shape", "signature": "Shape getBaseLegendShape()", "full_signature": "public Shape getBaseLegendShape()", "class_method_signature": "AbstractRenderer.getBaseLegendShape()", "testcase": false, "constructor": false}, {"identifier": "setBaseLegendShape", "parameters": "(Shape shape)", "modifiers": "public", "return": "void", "signature": "void setBaseLegendShape(Shape shape)", "full_signature": "public void setBaseLegendShape(Shape shape)", "class_method_signature": "AbstractRenderer.setBaseLegendShape(Shape shape)", "testcase": false, "constructor": false}, {"identifier": "getTreatLegendShapeAsLine", "parameters": "()", "modifiers": "protected", "return": "boolean", "signature": "boolean getTreatLegendShapeAsLine()", "full_signature": "protected boolean getTreatLegendShapeAsLine()", "class_method_signature": "AbstractRenderer.getTreatLegendShapeAsLine()", "testcase": false, "constructor": false}, {"identifier": "setTreatLegendShapeAsLine", "parameters": "(boolean treatAsLine)", "modifiers": "protected", "return": "void", "signature": "void setTreatLegendShapeAsLine(boolean treatAsLine)", "full_signature": "protected void setTreatLegendShapeAsLine(boolean treatAsLine)", "class_method_signature": "AbstractRenderer.setTreatLegendShapeAsLine(boolean treatAsLine)", "testcase": false, "constructor": false}, {"identifier": "lookupLegendTextFont", "parameters": "(int series)", "modifiers": "public", "return": "Font", "signature": "Font lookupLegendTextFont(int series)", "full_signature": "public Font lookupLegendTextFont(int series)", "class_method_signature": "AbstractRenderer.lookupLegendTextFont(int series)", "testcase": false, "constructor": false}, {"identifier": "getLegendTextFont", "parameters": "(int series)", "modifiers": "public", "return": "Font", "signature": "Font getLegendTextFont(int series)", "full_signature": "public Font getLegendTextFont(int series)", "class_method_signature": "AbstractRenderer.getLegendTextFont(int series)", "testcase": false, "constructor": false}, {"identifier": "setLegendTextFont", "parameters": "(int series, Font font)", "modifiers": "public", "return": "void", "signature": "void setLegendTextFont(int series, Font font)", "full_signature": "public void setLegendTextFont(int series, Font font)", "class_method_signature": "AbstractRenderer.setLegendTextFont(int series, Font font)", "testcase": false, "constructor": false}, {"identifier": "getBaseLegendTextFont", "parameters": "()", "modifiers": "public", "return": "Font", "signature": "Font getBaseLegendTextFont()", "full_signature": "public Font getBaseLegendTextFont()", "class_method_signature": "AbstractRenderer.getBaseLegendTextFont()", "testcase": false, "constructor": false}, {"identifier": "setBaseLegendTextFont", "parameters": "(Font font)", "modifiers": "public", "return": "void", "signature": "void setBaseLegendTextFont(Font font)", "full_signature": "public void setBaseLegendTextFont(Font font)", "class_method_signature": "AbstractRenderer.setBaseLegendTextFont(Font font)", "testcase": false, "constructor": false}, {"identifier": "lookupLegendTextPaint", "parameters": "(int series)", "modifiers": "public", "return": "Paint", "signature": "Paint lookupLegendTextPaint(int series)", "full_signature": "public Paint lookupLegendTextPaint(int series)", "class_method_signature": "AbstractRenderer.lookupLegendTextPaint(int series)", "testcase": false, "constructor": false}, {"identifier": "getLegendTextPaint", "parameters": "(int series)", "modifiers": "public", "return": "Paint", "signature": "Paint getLegendTextPaint(int series)", "full_signature": "public Paint getLegendTextPaint(int series)", "class_method_signature": "AbstractRenderer.getLegendTextPaint(int series)", "testcase": false, "constructor": false}, {"identifier": "setLegendTextPaint", "parameters": "(int series, Paint paint)", "modifiers": "public", "return": "void", "signature": "void setLegendTextPaint(int series, Paint paint)", "full_signature": "public void setLegendTextPaint(int series, Paint paint)", "class_method_signature": "AbstractRenderer.setLegendTextPaint(int series, Paint paint)", "testcase": false, "constructor": false}, {"identifier": "getBaseLegendTextPaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getBaseLegendTextPaint()", "full_signature": "public Paint getBaseLegendTextPaint()", "class_method_signature": "AbstractRenderer.getBaseLegendTextPaint()", "testcase": false, "constructor": false}, {"identifier": "setBaseLegendTextPaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setBaseLegendTextPaint(Paint paint)", "full_signature": "public void setBaseLegendTextPaint(Paint paint)", "class_method_signature": "AbstractRenderer.setBaseLegendTextPaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "getDataBoundsIncludesVisibleSeriesOnly", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getDataBoundsIncludesVisibleSeriesOnly()", "full_signature": "public boolean getDataBoundsIncludesVisibleSeriesOnly()", "class_method_signature": "AbstractRenderer.getDataBoundsIncludesVisibleSeriesOnly()", "testcase": false, "constructor": false}, {"identifier": "setDataBoundsIncludesVisibleSeriesOnly", "parameters": "(boolean visibleOnly)", "modifiers": "public", "return": "void", "signature": "void setDataBoundsIncludesVisibleSeriesOnly(boolean visibleOnly)", "full_signature": "public void setDataBoundsIncludesVisibleSeriesOnly(boolean visibleOnly)", "class_method_signature": "AbstractRenderer.setDataBoundsIncludesVisibleSeriesOnly(boolean visibleOnly)", "testcase": false, "constructor": false}, {"identifier": "calculateLabelAnchorPoint", "parameters": "(ItemLabelAnchor anchor,\n            double x, double y, PlotOrientation orientation)", "modifiers": "protected", "return": "Point2D", "signature": "Point2D calculateLabelAnchorPoint(ItemLabelAnchor anchor,\n            double x, double y, PlotOrientation orientation)", "full_signature": "protected Point2D calculateLabelAnchorPoint(ItemLabelAnchor anchor,\n            double x, double y, PlotOrientation orientation)", "class_method_signature": "AbstractRenderer.calculateLabelAnchorPoint(ItemLabelAnchor anchor,\n            double x, double y, PlotOrientation orientation)", "testcase": false, "constructor": false}, {"identifier": "addChangeListener", "parameters": "(RendererChangeListener listener)", "modifiers": "public", "return": "void", "signature": "void addChangeListener(RendererChangeListener listener)", "full_signature": "public void addChangeListener(RendererChangeListener listener)", "class_method_signature": "AbstractRenderer.addChangeListener(RendererChangeListener listener)", "testcase": false, "constructor": false}, {"identifier": "removeChangeListener", "parameters": "(RendererChangeListener listener)", "modifiers": "public", "return": "void", "signature": "void removeChangeListener(RendererChangeListener listener)", "full_signature": "public void removeChangeListener(RendererChangeListener listener)", "class_method_signature": "AbstractRenderer.removeChangeListener(RendererChangeListener listener)", "testcase": false, "constructor": false}, {"identifier": "hasListener", "parameters": "(EventListener listener)", "modifiers": "public", "return": "boolean", "signature": "boolean hasListener(EventListener listener)", "full_signature": "public boolean hasListener(EventListener listener)", "class_method_signature": "AbstractRenderer.hasListener(EventListener listener)", "testcase": false, "constructor": false}, {"identifier": "fireChangeEvent", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void fireChangeEvent()", "full_signature": "protected void fireChangeEvent()", "class_method_signature": "AbstractRenderer.fireChangeEvent()", "testcase": false, "constructor": false}, {"identifier": "notifyListeners", "parameters": "(RendererChangeEvent event)", "modifiers": "public", "return": "void", "signature": "void notifyListeners(RendererChangeEvent event)", "full_signature": "public void notifyListeners(RendererChangeEvent event)", "class_method_signature": "AbstractRenderer.notifyListeners(RendererChangeEvent event)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "AbstractRenderer.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "AbstractRenderer.hashCode()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "protected", "return": "Object", "signature": "Object clone()", "full_signature": "protected Object clone()", "class_method_signature": "AbstractRenderer.clone()", "testcase": false, "constructor": false}, {"identifier": "writeObject", "parameters": "(ObjectOutputStream stream)", "modifiers": "private", "return": "void", "signature": "void writeObject(ObjectOutputStream stream)", "full_signature": "private void writeObject(ObjectOutputStream stream)", "class_method_signature": "AbstractRenderer.writeObject(ObjectOutputStream stream)", "testcase": false, "constructor": false}, {"identifier": "readObject", "parameters": "(ObjectInputStream stream)", "modifiers": "private", "return": "void", "signature": "void readObject(ObjectInputStream stream)", "full_signature": "private void readObject(ObjectInputStream stream)", "class_method_signature": "AbstractRenderer.readObject(ObjectInputStream stream)", "testcase": false, "constructor": false}], "file": "source/org/jfree/chart/renderer/AbstractRenderer.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "body": "public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof AbstractRenderer)) {\n            return false;\n        }\n        AbstractRenderer that = (AbstractRenderer) obj;\n        if (this.dataBoundsIncludesVisibleSeriesOnly\n                != that.dataBoundsIncludesVisibleSeriesOnly) {\n            return false;\n        }\n        if (this.treatLegendShapeAsLine != that.treatLegendShapeAsLine) {\n            return false;\n        }\n        if (this.defaultEntityRadius != that.defaultEntityRadius) {\n            return false;\n        }\n        if (!this.seriesVisibleList.equals(that.seriesVisibleList)) {\n            return false;\n        }\n        if (this.baseSeriesVisible != that.baseSeriesVisible) {\n            return false;\n        }\n        if (!this.seriesVisibleInLegendList.equals(\n                that.seriesVisibleInLegendList)) {\n            return false;\n        }\n        if (this.baseSeriesVisibleInLegend != that.baseSeriesVisibleInLegend) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.paintList, that.paintList)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.basePaint, that.basePaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.fillPaintList, that.fillPaintList)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.baseFillPaint, that.baseFillPaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.outlinePaintList,\n                that.outlinePaintList)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.baseOutlinePaint,\n                that.baseOutlinePaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.strokeList, that.strokeList)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.baseStroke, that.baseStroke)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.outlineStrokeList,\n                that.outlineStrokeList)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(\n            this.baseOutlineStroke, that.baseOutlineStroke)\n        ) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.shapeList, that.shapeList)) {\n            return false;\n        }\n        if (!ShapeUtilities.equal(this.baseShape, that.baseShape)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.itemLabelsVisibleList,\n                that.itemLabelsVisibleList)) {\n            return false;\n        }\n        if (this.baseItemLabelsVisible != that.baseItemLabelsVisible) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.itemLabelFontList,\n                that.itemLabelFontList)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.baseItemLabelFont,\n                that.baseItemLabelFont)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.itemLabelPaintList,\n                that.itemLabelPaintList)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.baseItemLabelPaint,\n                that.baseItemLabelPaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.positiveItemLabelPositionList,\n                that.positiveItemLabelPositionList)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.basePositiveItemLabelPosition,\n                that.basePositiveItemLabelPosition)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.negativeItemLabelPositionList,\n                that.negativeItemLabelPositionList)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.baseNegativeItemLabelPosition,\n                that.baseNegativeItemLabelPosition)) {\n            return false;\n        }\n        if (this.itemLabelAnchorOffset != that.itemLabelAnchorOffset) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.createEntitiesList,\n                that.createEntitiesList)) {\n            return false;\n        }\n        if (this.baseCreateEntities != that.baseCreateEntities) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.legendShapeList,\n                that.legendShapeList)) {\n            return false;\n        }\n        if (!ShapeUtilities.equal(this.baseLegendShape,\n                that.baseLegendShape)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.legendTextFont, that.legendTextFont)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.baseLegendTextFont,\n                that.baseLegendTextFont)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.legendTextPaint,\n                that.legendTextPaint)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.baseLegendTextPaint,\n                that.baseLegendTextPaint)) {\n            return false;\n        }\n        return true;\n    }", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "AbstractRenderer.equals(Object obj)", "testcase": false, "constructor": false, "invocations": ["equals", "equals", "equal", "equal", "equal", "equal", "equal", "equal", "equal", "equal", "equal", "equal", "equal", "equal", "equal", "equal", "equal", "equal", "equal", "equal", "equal", "equal", "equal", "equal", "equal", "equal", "equal", "equal", "equal", "equal"]}, "repository": {"repo_id": "Chart_1_buggy"}}