{"test_class": {"identifier": "XYIntervalTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/data/xy/junit/XYIntervalTests.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testEquals() {\n        XYInterval i1 = new XYInterval(1.0, 2.0, 3.0, 2.5, 3.5);\n        XYInterval i2 = new XYInterval(1.0, 2.0, 3.0, 2.5, 3.5);\n        assertEquals(i1, i2);\n\n        i1 = new XYInterval(1.1, 2.0, 3.0, 2.5, 3.5);\n        assertFalse(i1.equals(i2));\n        i2 = new XYInterval(1.1, 2.0, 3.0, 2.5, 3.5);\n        assertTrue(i1.equals(i2));\n\n        i1 = new XYInterval(1.1, 2.2, 3.0, 2.5, 3.5);\n        assertFalse(i1.equals(i2));\n        i2 = new XYInterval(1.1, 2.2, 3.0, 2.5, 3.5);\n        assertTrue(i1.equals(i2));\n\n        i1 = new XYInterval(1.1, 2.2, 3.3, 2.5, 3.5);\n        assertFalse(i1.equals(i2));\n        i2 = new XYInterval(1.1, 2.2, 3.3, 2.5, 3.5);\n        assertTrue(i1.equals(i2));\n\n        i1 = new XYInterval(1.1, 2.2, 3.3, 2.6, 3.5);\n        assertFalse(i1.equals(i2));\n        i2 = new XYInterval(1.1, 2.2, 3.3, 2.6, 3.5);\n        assertTrue(i1.equals(i2));\n\n        i1 = new XYInterval(1.1, 2.2, 3.3, 2.6, 3.6);\n        assertFalse(i1.equals(i2));\n        i2 = new XYInterval(1.1, 2.2, 3.3, 2.6, 3.6);\n        assertTrue(i1.equals(i2));\n    }", "signature": "void testEquals()", "full_signature": "public void testEquals()", "class_method_signature": "XYIntervalTests.testEquals()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "assertFalse", "equals", "assertTrue", "equals", "assertFalse", "equals", "assertTrue", "equals", "assertFalse", "equals", "assertTrue", "equals", "assertFalse", "equals", "assertTrue", "equals", "assertFalse", "equals", "assertTrue", "equals"]}, "focal_class": {"identifier": "XYInterval", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private double xLow;", "modifier": "private", "type": "double", "declarator": "xLow", "var_name": "xLow"}, {"original_string": "private double xHigh;", "modifier": "private", "type": "double", "declarator": "xHigh", "var_name": "xHigh"}, {"original_string": "private double y;", "modifier": "private", "type": "double", "declarator": "y", "var_name": "y"}, {"original_string": "private double yLow;", "modifier": "private", "type": "double", "declarator": "yLow", "var_name": "yLow"}, {"original_string": "private double yHigh;", "modifier": "private", "type": "double", "declarator": "yHigh", "var_name": "yHigh"}], "methods": [{"identifier": "XYInterval", "parameters": "(double xLow, double xHigh, double y, double yLow,\n            double yHigh)", "modifiers": "public", "return": "", "signature": " XYInterval(double xLow, double xHigh, double y, double yLow,\n            double yHigh)", "full_signature": "public  XYInterval(double xLow, double xHigh, double y, double yLow,\n            double yHigh)", "class_method_signature": "XYInterval.XYInterval(double xLow, double xHigh, double y, double yLow,\n            double yHigh)", "testcase": false, "constructor": true}, {"identifier": "getXLow", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getXLow()", "full_signature": "public double getXLow()", "class_method_signature": "XYInterval.getXLow()", "testcase": false, "constructor": false}, {"identifier": "getXHigh", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getXHigh()", "full_signature": "public double getXHigh()", "class_method_signature": "XYInterval.getXHigh()", "testcase": false, "constructor": false}, {"identifier": "getY", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getY()", "full_signature": "public double getY()", "class_method_signature": "XYInterval.getY()", "testcase": false, "constructor": false}, {"identifier": "getYLow", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getYLow()", "full_signature": "public double getYLow()", "class_method_signature": "XYInterval.getYLow()", "testcase": false, "constructor": false}, {"identifier": "getYHigh", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getYHigh()", "full_signature": "public double getYHigh()", "class_method_signature": "XYInterval.getYHigh()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "XYInterval.equals(Object obj)", "testcase": false, "constructor": false}], "file": "source/org/jfree/data/xy/XYInterval.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "body": "public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof XYInterval)) {\n            return false;\n        }\n        XYInterval that = (XYInterval) obj;\n        if (this.xLow != that.xLow) {\n            return false;\n        }\n        if (this.xHigh != that.xHigh) {\n            return false;\n        }\n        if (this.y != that.y) {\n            return false;\n        }\n        if (this.yLow != that.yLow) {\n            return false;\n        }\n        if (this.yHigh != that.yHigh) {\n            return false;\n        }\n        return true;\n    }", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "XYInterval.equals(Object obj)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": "Chart_1_buggy"}}