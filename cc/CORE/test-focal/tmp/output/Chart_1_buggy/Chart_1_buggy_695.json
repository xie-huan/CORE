{"test_class": {"identifier": "YIntervalSeriesTests", "superclass": "extends TestCase", "interfaces": "implements SeriesChangeListener", "fields": [{"original_string": "SeriesChangeEvent lastEvent;", "modifier": "", "type": "SeriesChangeEvent", "declarator": "lastEvent", "var_name": "lastEvent"}, {"original_string": "private static final double EPSILON = 0.0000000001;", "modifier": "private static final", "type": "double", "declarator": "EPSILON = 0.0000000001", "var_name": "EPSILON"}], "file": "tests/org/jfree/data/xy/junit/YIntervalSeriesTests.java"}, "test_case": {"identifier": "testSerialization", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testSerialization() {\n\n        YIntervalSeries s1 = new YIntervalSeries(\"s1\");\n        s1.add(1.0, 0.5, 1.5, 2.0);\n        YIntervalSeries s2 = null;\n\n        try {\n            ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n            ObjectOutput out = new ObjectOutputStream(buffer);\n            out.writeObject(s1);\n            out.close();\n\n            ObjectInput in = new ObjectInputStream(\n                    new ByteArrayInputStream(buffer.toByteArray()));\n            s2 = (YIntervalSeries) in.readObject();\n            in.close();\n        }\n        catch (Exception e) {\n            e.printStackTrace();\n        }\n        assertEquals(s1, s2);\n\n    }", "signature": "void testSerialization()", "full_signature": "public void testSerialization()", "class_method_signature": "YIntervalSeriesTests.testSerialization()", "testcase": true, "constructor": false, "invocations": ["add", "writeObject", "close", "toByteArray", "readObject", "close", "printStackTrace", "assertEquals"]}, "focal_class": {"identifier": "YIntervalSeries", "superclass": "extends ComparableObjectSeries", "interfaces": "", "fields": [], "methods": [{"identifier": "YIntervalSeries", "parameters": "(Comparable key)", "modifiers": "public", "return": "", "signature": " YIntervalSeries(Comparable key)", "full_signature": "public  YIntervalSeries(Comparable key)", "class_method_signature": "YIntervalSeries.YIntervalSeries(Comparable key)", "testcase": false, "constructor": true}, {"identifier": "YIntervalSeries", "parameters": "(Comparable key, boolean autoSort,\n            boolean allowDuplicateXValues)", "modifiers": "public", "return": "", "signature": " YIntervalSeries(Comparable key, boolean autoSort,\n            boolean allowDuplicateXValues)", "full_signature": "public  YIntervalSeries(Comparable key, boolean autoSort,\n            boolean allowDuplicateXValues)", "class_method_signature": "YIntervalSeries.YIntervalSeries(Comparable key, boolean autoSort,\n            boolean allowDuplicateXValues)", "testcase": false, "constructor": true}, {"identifier": "add", "parameters": "(double x, double y, double yLow, double yHigh)", "modifiers": "public", "return": "void", "signature": "void add(double x, double y, double yLow, double yHigh)", "full_signature": "public void add(double x, double y, double yLow, double yHigh)", "class_method_signature": "YIntervalSeries.add(double x, double y, double yLow, double yHigh)", "testcase": false, "constructor": false}, {"identifier": "getX", "parameters": "(int index)", "modifiers": "public", "return": "Number", "signature": "Number getX(int index)", "full_signature": "public Number getX(int index)", "class_method_signature": "YIntervalSeries.getX(int index)", "testcase": false, "constructor": false}, {"identifier": "getYValue", "parameters": "(int index)", "modifiers": "public", "return": "double", "signature": "double getYValue(int index)", "full_signature": "public double getYValue(int index)", "class_method_signature": "YIntervalSeries.getYValue(int index)", "testcase": false, "constructor": false}, {"identifier": "getYLowValue", "parameters": "(int index)", "modifiers": "public", "return": "double", "signature": "double getYLowValue(int index)", "full_signature": "public double getYLowValue(int index)", "class_method_signature": "YIntervalSeries.getYLowValue(int index)", "testcase": false, "constructor": false}, {"identifier": "getYHighValue", "parameters": "(int index)", "modifiers": "public", "return": "double", "signature": "double getYHighValue(int index)", "full_signature": "public double getYHighValue(int index)", "class_method_signature": "YIntervalSeries.getYHighValue(int index)", "testcase": false, "constructor": false}, {"identifier": "getDataItem", "parameters": "(int index)", "modifiers": "public", "return": "ComparableObjectItem", "signature": "ComparableObjectItem getDataItem(int index)", "full_signature": "public ComparableObjectItem getDataItem(int index)", "class_method_signature": "YIntervalSeries.getDataItem(int index)", "testcase": false, "constructor": false}], "file": "source/org/jfree/data/xy/YIntervalSeries.java"}, "focal_method": {"identifier": "add", "parameters": "(double x, double y, double yLow, double yHigh)", "modifiers": "public", "return": "void", "body": "public void add(double x, double y, double yLow, double yHigh) {\n        super.add(new YIntervalDataItem(x, y, yLow, yHigh), true);\n    }", "signature": "void add(double x, double y, double yLow, double yHigh)", "full_signature": "public void add(double x, double y, double yLow, double yHigh)", "class_method_signature": "YIntervalSeries.add(double x, double y, double yLow, double yHigh)", "testcase": false, "constructor": false, "invocations": ["add"]}, "repository": {"repo_id": "Chart_1_buggy"}}