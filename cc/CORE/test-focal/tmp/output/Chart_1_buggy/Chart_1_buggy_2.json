{"test_class": {"identifier": "DialCapTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/chart/plot/dial/junit/DialCapTests.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testEquals() {\n        DialCap c1 = new DialCap();\n        DialCap c2 = new DialCap();\n        assertTrue(c1.equals(c2));\n\n        // radius\n        c1.setRadius(0.5);\n        assertFalse(c1.equals(c2));\n        c2.setRadius(0.5);\n        assertTrue(c1.equals(c2));\n\n        // fill paint\n        c1.setFillPaint(new GradientPaint(1.0f, 2.0f, Color.blue,\n                3.0f, 4.0f, Color.green));\n        assertFalse(c1.equals(c2));\n        c2.setFillPaint(new GradientPaint(1.0f, 2.0f, Color.blue,\n                3.0f, 4.0f, Color.green));\n\n        // outline paint\n        c1.setOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.white,\n                3.0f, 4.0f, Color.gray));\n        assertFalse(c1.equals(c2));\n        c2.setOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.white,\n                3.0f, 4.0f, Color.gray));\n\n        assertTrue(c1.equals(c2));\n\n        // outline stroke\n        c1.setOutlineStroke(new BasicStroke(1.1f));\n        assertFalse(c1.equals(c2));\n        c2.setOutlineStroke(new BasicStroke(1.1f));\n        assertTrue(c1.equals(c2));\n\n        // check an inherited attribute\n        c1.setVisible(false);\n        assertFalse(c1.equals(c2));\n        c2.setVisible(false);\n        assertTrue(c1.equals(c2));\n    }", "signature": "void testEquals()", "full_signature": "public void testEquals()", "class_method_signature": "DialCapTests.testEquals()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "equals", "setRadius", "assertFalse", "equals", "setRadius", "assertTrue", "equals", "setFillPaint", "assertFalse", "equals", "setFillPaint", "setOutlinePaint", "assertFalse", "equals", "setOutlinePaint", "assertTrue", "equals", "setOutlineStroke", "assertFalse", "equals", "setOutlineStroke", "assertTrue", "equals", "setVisible", "assertFalse", "equals", "setVisible", "assertTrue", "equals"]}, "focal_class": {"identifier": "DialCap", "superclass": "extends AbstractDialLayer", "interfaces": "implements DialLayer, Cloneable,\n        PublicCloneable, Serializable", "fields": [{"original_string": "static final long serialVersionUID = -2929484264982524463L;", "modifier": "static final", "type": "long", "declarator": "serialVersionUID = -2929484264982524463L", "var_name": "serialVersionUID"}, {"original_string": "private double radius;", "modifier": "private", "type": "double", "declarator": "radius", "var_name": "radius"}, {"original_string": "private transient Paint fillPaint;", "modifier": "private transient", "type": "Paint", "declarator": "fillPaint", "var_name": "fillPaint"}, {"original_string": "private transient Paint outlinePaint;", "modifier": "private transient", "type": "Paint", "declarator": "outlinePaint", "var_name": "outlinePaint"}, {"original_string": "private transient Stroke outlineStroke;", "modifier": "private transient", "type": "Stroke", "declarator": "outlineStroke", "var_name": "outlineStroke"}], "methods": [{"identifier": "DialCap", "parameters": "()", "modifiers": "public", "return": "", "signature": " DialCap()", "full_signature": "public  DialCap()", "class_method_signature": "DialCap.DialCap()", "testcase": false, "constructor": true}, {"identifier": "getRadius", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getRadius()", "full_signature": "public double getRadius()", "class_method_signature": "DialCap.getRadius()", "testcase": false, "constructor": false}, {"identifier": "setRadius", "parameters": "(double radius)", "modifiers": "public", "return": "void", "signature": "void setRadius(double radius)", "full_signature": "public void setRadius(double radius)", "class_method_signature": "DialCap.setRadius(double radius)", "testcase": false, "constructor": false}, {"identifier": "getFillPaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getFillPaint()", "full_signature": "public Paint getFillPaint()", "class_method_signature": "DialCap.getFillPaint()", "testcase": false, "constructor": false}, {"identifier": "setFillPaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setFillPaint(Paint paint)", "full_signature": "public void setFillPaint(Paint paint)", "class_method_signature": "DialCap.setFillPaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "getOutlinePaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getOutlinePaint()", "full_signature": "public Paint getOutlinePaint()", "class_method_signature": "DialCap.getOutlinePaint()", "testcase": false, "constructor": false}, {"identifier": "setOutlinePaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setOutlinePaint(Paint paint)", "full_signature": "public void setOutlinePaint(Paint paint)", "class_method_signature": "DialCap.setOutlinePaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "getOutlineStroke", "parameters": "()", "modifiers": "public", "return": "Stroke", "signature": "Stroke getOutlineStroke()", "full_signature": "public Stroke getOutlineStroke()", "class_method_signature": "DialCap.getOutlineStroke()", "testcase": false, "constructor": false}, {"identifier": "setOutlineStroke", "parameters": "(Stroke stroke)", "modifiers": "public", "return": "void", "signature": "void setOutlineStroke(Stroke stroke)", "full_signature": "public void setOutlineStroke(Stroke stroke)", "class_method_signature": "DialCap.setOutlineStroke(Stroke stroke)", "testcase": false, "constructor": false}, {"identifier": "isClippedToWindow", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isClippedToWindow()", "full_signature": "public boolean isClippedToWindow()", "class_method_signature": "DialCap.isClippedToWindow()", "testcase": false, "constructor": false}, {"identifier": "draw", "parameters": "(Graphics2D g2, DialPlot plot, Rectangle2D frame,\n            Rectangle2D view)", "modifiers": "public", "return": "void", "signature": "void draw(Graphics2D g2, DialPlot plot, Rectangle2D frame,\n            Rectangle2D view)", "full_signature": "public void draw(Graphics2D g2, DialPlot plot, Rectangle2D frame,\n            Rectangle2D view)", "class_method_signature": "DialCap.draw(Graphics2D g2, DialPlot plot, Rectangle2D frame,\n            Rectangle2D view)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "DialCap.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "DialCap.hashCode()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object clone()", "full_signature": "public Object clone()", "class_method_signature": "DialCap.clone()", "testcase": false, "constructor": false}, {"identifier": "writeObject", "parameters": "(ObjectOutputStream stream)", "modifiers": "private", "return": "void", "signature": "void writeObject(ObjectOutputStream stream)", "full_signature": "private void writeObject(ObjectOutputStream stream)", "class_method_signature": "DialCap.writeObject(ObjectOutputStream stream)", "testcase": false, "constructor": false}, {"identifier": "readObject", "parameters": "(ObjectInputStream stream)", "modifiers": "private", "return": "void", "signature": "void readObject(ObjectInputStream stream)", "full_signature": "private void readObject(ObjectInputStream stream)", "class_method_signature": "DialCap.readObject(ObjectInputStream stream)", "testcase": false, "constructor": false}], "file": "source/org/jfree/chart/plot/dial/DialCap.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "body": "public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof DialCap)) {\n            return false;\n        }\n        DialCap that = (DialCap) obj;\n        if (this.radius != that.radius) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.fillPaint, that.fillPaint)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.outlinePaint, that.outlinePaint)) {\n            return false;\n        }\n        if (!this.outlineStroke.equals(that.outlineStroke)) {\n            return false;\n        }\n        return super.equals(obj);\n    }", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "DialCap.equals(Object obj)", "testcase": false, "constructor": false, "invocations": ["equal", "equal", "equals", "equals"]}, "repository": {"repo_id": "Chart_1_buggy"}}