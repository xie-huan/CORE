{"test_class": {"identifier": "TextTitleTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/chart/title/junit/TextTitleTests.java"}, "test_case": {"identifier": "testHashcode", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testHashcode() {\n        TextTitle t1 = new TextTitle();\n        TextTitle t2 = new TextTitle();\n        assertTrue(t1.equals(t2));\n        int h1 = t1.hashCode();\n        int h2 = t2.hashCode();\n        assertEquals(h1, h2);\n    }", "signature": "void testHashcode()", "full_signature": "public void testHashcode()", "class_method_signature": "TextTitleTests.testHashcode()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "equals", "hashCode", "hashCode", "assertEquals"]}, "focal_class": {"identifier": "TextTitle", "superclass": "extends Title", "interfaces": "implements Serializable, Cloneable, PublicCloneable", "fields": [{"original_string": "private static final long serialVersionUID = 8372008692127477443L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 8372008692127477443L", "var_name": "serialVersionUID"}, {"original_string": "public static final Font DEFAULT_FONT = new Font(\"Tahoma\", Font.BOLD,\n            12);", "modifier": "public static final", "type": "Font", "declarator": "DEFAULT_FONT = new Font(\"Tahoma\", Font.BOLD,\n            12)", "var_name": "DEFAULT_FONT"}, {"original_string": "public static final Paint DEFAULT_TEXT_PAINT = Color.black;", "modifier": "public static final", "type": "Paint", "declarator": "DEFAULT_TEXT_PAINT = Color.black", "var_name": "DEFAULT_TEXT_PAINT"}, {"original_string": "private String text;", "modifier": "private", "type": "String", "declarator": "text", "var_name": "text"}, {"original_string": "private Font font;", "modifier": "private", "type": "Font", "declarator": "font", "var_name": "font"}, {"original_string": "private HorizontalAlignment textAlignment;", "modifier": "private", "type": "HorizontalAlignment", "declarator": "textAlignment", "var_name": "textAlignment"}, {"original_string": "private transient Paint paint;", "modifier": "private transient", "type": "Paint", "declarator": "paint", "var_name": "paint"}, {"original_string": "private transient Paint backgroundPaint;", "modifier": "private transient", "type": "Paint", "declarator": "backgroundPaint", "var_name": "backgroundPaint"}, {"original_string": "private String toolTipText;", "modifier": "private", "type": "String", "declarator": "toolTipText", "var_name": "toolTipText"}, {"original_string": "private String urlText;", "modifier": "private", "type": "String", "declarator": "urlText", "var_name": "urlText"}, {"original_string": "private TextBlock content;", "modifier": "private", "type": "TextBlock", "declarator": "content", "var_name": "content"}, {"original_string": "private boolean expandToFitSpace = false;", "modifier": "private", "type": "boolean", "declarator": "expandToFitSpace = false", "var_name": "expandToFitSpace"}, {"original_string": "private int maximumLinesToDisplay = Integer.MAX_VALUE;", "modifier": "private", "type": "int", "declarator": "maximumLinesToDisplay = Integer.MAX_VALUE", "var_name": "maximumLinesToDisplay"}], "methods": [{"identifier": "TextTitle", "parameters": "()", "modifiers": "public", "return": "", "signature": " TextTitle()", "full_signature": "public  TextTitle()", "class_method_signature": "TextTitle.TextTitle()", "testcase": false, "constructor": true}, {"identifier": "TextTitle", "parameters": "(String text)", "modifiers": "public", "return": "", "signature": " TextTitle(String text)", "full_signature": "public  TextTitle(String text)", "class_method_signature": "TextTitle.TextTitle(String text)", "testcase": false, "constructor": true}, {"identifier": "TextTitle", "parameters": "(String text, Font font)", "modifiers": "public", "return": "", "signature": " TextTitle(String text, Font font)", "full_signature": "public  TextTitle(String text, Font font)", "class_method_signature": "TextTitle.TextTitle(String text, Font font)", "testcase": false, "constructor": true}, {"identifier": "TextTitle", "parameters": "(String text, Font font, Paint paint,\n                     RectangleEdge position,\n                     HorizontalAlignment horizontalAlignment,\n                     VerticalAlignment verticalAlignment,\n                     RectangleInsets padding)", "modifiers": "public", "return": "", "signature": " TextTitle(String text, Font font, Paint paint,\n                     RectangleEdge position,\n                     HorizontalAlignment horizontalAlignment,\n                     VerticalAlignment verticalAlignment,\n                     RectangleInsets padding)", "full_signature": "public  TextTitle(String text, Font font, Paint paint,\n                     RectangleEdge position,\n                     HorizontalAlignment horizontalAlignment,\n                     VerticalAlignment verticalAlignment,\n                     RectangleInsets padding)", "class_method_signature": "TextTitle.TextTitle(String text, Font font, Paint paint,\n                     RectangleEdge position,\n                     HorizontalAlignment horizontalAlignment,\n                     VerticalAlignment verticalAlignment,\n                     RectangleInsets padding)", "testcase": false, "constructor": true}, {"identifier": "getText", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getText()", "full_signature": "public String getText()", "class_method_signature": "TextTitle.getText()", "testcase": false, "constructor": false}, {"identifier": "setText", "parameters": "(String text)", "modifiers": "public", "return": "void", "signature": "void setText(String text)", "full_signature": "public void setText(String text)", "class_method_signature": "TextTitle.setText(String text)", "testcase": false, "constructor": false}, {"identifier": "getTextAlignment", "parameters": "()", "modifiers": "public", "return": "HorizontalAlignment", "signature": "HorizontalAlignment getTextAlignment()", "full_signature": "public HorizontalAlignment getTextAlignment()", "class_method_signature": "TextTitle.getTextAlignment()", "testcase": false, "constructor": false}, {"identifier": "setTextAlignment", "parameters": "(HorizontalAlignment alignment)", "modifiers": "public", "return": "void", "signature": "void setTextAlignment(HorizontalAlignment alignment)", "full_signature": "public void setTextAlignment(HorizontalAlignment alignment)", "class_method_signature": "TextTitle.setTextAlignment(HorizontalAlignment alignment)", "testcase": false, "constructor": false}, {"identifier": "getFont", "parameters": "()", "modifiers": "public", "return": "Font", "signature": "Font getFont()", "full_signature": "public Font getFont()", "class_method_signature": "TextTitle.getFont()", "testcase": false, "constructor": false}, {"identifier": "setFont", "parameters": "(Font font)", "modifiers": "public", "return": "void", "signature": "void setFont(Font font)", "full_signature": "public void setFont(Font font)", "class_method_signature": "TextTitle.setFont(Font font)", "testcase": false, "constructor": false}, {"identifier": "getPaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getPaint()", "full_signature": "public Paint getPaint()", "class_method_signature": "TextTitle.getPaint()", "testcase": false, "constructor": false}, {"identifier": "setPaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setPaint(Paint paint)", "full_signature": "public void setPaint(Paint paint)", "class_method_signature": "TextTitle.setPaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "getBackgroundPaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getBackgroundPaint()", "full_signature": "public Paint getBackgroundPaint()", "class_method_signature": "TextTitle.getBackgroundPaint()", "testcase": false, "constructor": false}, {"identifier": "setBackgroundPaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setBackgroundPaint(Paint paint)", "full_signature": "public void setBackgroundPaint(Paint paint)", "class_method_signature": "TextTitle.setBackgroundPaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "getToolTipText", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getToolTipText()", "full_signature": "public String getToolTipText()", "class_method_signature": "TextTitle.getToolTipText()", "testcase": false, "constructor": false}, {"identifier": "setToolTipText", "parameters": "(String text)", "modifiers": "public", "return": "void", "signature": "void setToolTipText(String text)", "full_signature": "public void setToolTipText(String text)", "class_method_signature": "TextTitle.setToolTipText(String text)", "testcase": false, "constructor": false}, {"identifier": "getURLText", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getURLText()", "full_signature": "public String getURLText()", "class_method_signature": "TextTitle.getURLText()", "testcase": false, "constructor": false}, {"identifier": "setURLText", "parameters": "(String text)", "modifiers": "public", "return": "void", "signature": "void setURLText(String text)", "full_signature": "public void setURLText(String text)", "class_method_signature": "TextTitle.setURLText(String text)", "testcase": false, "constructor": false}, {"identifier": "getExpandToFitSpace", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getExpandToFitSpace()", "full_signature": "public boolean getExpandToFitSpace()", "class_method_signature": "TextTitle.getExpandToFitSpace()", "testcase": false, "constructor": false}, {"identifier": "setExpandToFitSpace", "parameters": "(boolean expand)", "modifiers": "public", "return": "void", "signature": "void setExpandToFitSpace(boolean expand)", "full_signature": "public void setExpandToFitSpace(boolean expand)", "class_method_signature": "TextTitle.setExpandToFitSpace(boolean expand)", "testcase": false, "constructor": false}, {"identifier": "getMaximumLinesToDisplay", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaximumLinesToDisplay()", "full_signature": "public int getMaximumLinesToDisplay()", "class_method_signature": "TextTitle.getMaximumLinesToDisplay()", "testcase": false, "constructor": false}, {"identifier": "setMaximumLinesToDisplay", "parameters": "(int max)", "modifiers": "public", "return": "void", "signature": "void setMaximumLinesToDisplay(int max)", "full_signature": "public void setMaximumLinesToDisplay(int max)", "class_method_signature": "TextTitle.setMaximumLinesToDisplay(int max)", "testcase": false, "constructor": false}, {"identifier": "arrange", "parameters": "(Graphics2D g2, RectangleConstraint constraint)", "modifiers": "public", "return": "Size2D", "signature": "Size2D arrange(Graphics2D g2, RectangleConstraint constraint)", "full_signature": "public Size2D arrange(Graphics2D g2, RectangleConstraint constraint)", "class_method_signature": "TextTitle.arrange(Graphics2D g2, RectangleConstraint constraint)", "testcase": false, "constructor": false}, {"identifier": "arrangeNN", "parameters": "(Graphics2D g2)", "modifiers": "protected", "return": "Size2D", "signature": "Size2D arrangeNN(Graphics2D g2)", "full_signature": "protected Size2D arrangeNN(Graphics2D g2)", "class_method_signature": "TextTitle.arrangeNN(Graphics2D g2)", "testcase": false, "constructor": false}, {"identifier": "arrangeFN", "parameters": "(Graphics2D g2, double w)", "modifiers": "protected", "return": "Size2D", "signature": "Size2D arrangeFN(Graphics2D g2, double w)", "full_signature": "protected Size2D arrangeFN(Graphics2D g2, double w)", "class_method_signature": "TextTitle.arrangeFN(Graphics2D g2, double w)", "testcase": false, "constructor": false}, {"identifier": "arrangeRN", "parameters": "(Graphics2D g2, Range widthRange)", "modifiers": "protected", "return": "Size2D", "signature": "Size2D arrangeRN(Graphics2D g2, Range widthRange)", "full_signature": "protected Size2D arrangeRN(Graphics2D g2, Range widthRange)", "class_method_signature": "TextTitle.arrangeRN(Graphics2D g2, Range widthRange)", "testcase": false, "constructor": false}, {"identifier": "arrangeRR", "parameters": "(Graphics2D g2, Range widthRange,\n            Range heightRange)", "modifiers": "protected", "return": "Size2D", "signature": "Size2D arrangeRR(Graphics2D g2, Range widthRange,\n            Range heightRange)", "full_signature": "protected Size2D arrangeRR(Graphics2D g2, Range widthRange,\n            Range heightRange)", "class_method_signature": "TextTitle.arrangeRR(Graphics2D g2, Range widthRange,\n            Range heightRange)", "testcase": false, "constructor": false}, {"identifier": "draw", "parameters": "(Graphics2D g2, Rectangle2D area)", "modifiers": "public", "return": "void", "signature": "void draw(Graphics2D g2, Rectangle2D area)", "full_signature": "public void draw(Graphics2D g2, Rectangle2D area)", "class_method_signature": "TextTitle.draw(Graphics2D g2, Rectangle2D area)", "testcase": false, "constructor": false}, {"identifier": "draw", "parameters": "(Graphics2D g2, Rectangle2D area, Object params)", "modifiers": "public", "return": "Object", "signature": "Object draw(Graphics2D g2, Rectangle2D area, Object params)", "full_signature": "public Object draw(Graphics2D g2, Rectangle2D area, Object params)", "class_method_signature": "TextTitle.draw(Graphics2D g2, Rectangle2D area, Object params)", "testcase": false, "constructor": false}, {"identifier": "drawHorizontal", "parameters": "(Graphics2D g2, Rectangle2D area)", "modifiers": "protected", "return": "void", "signature": "void drawHorizontal(Graphics2D g2, Rectangle2D area)", "full_signature": "protected void drawHorizontal(Graphics2D g2, Rectangle2D area)", "class_method_signature": "TextTitle.drawHorizontal(Graphics2D g2, Rectangle2D area)", "testcase": false, "constructor": false}, {"identifier": "drawVertical", "parameters": "(Graphics2D g2, Rectangle2D area)", "modifiers": "protected", "return": "void", "signature": "void drawVertical(Graphics2D g2, Rectangle2D area)", "full_signature": "protected void drawVertical(Graphics2D g2, Rectangle2D area)", "class_method_signature": "TextTitle.drawVertical(Graphics2D g2, Rectangle2D area)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "TextTitle.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "TextTitle.hashCode()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object clone()", "full_signature": "public Object clone()", "class_method_signature": "TextTitle.clone()", "testcase": false, "constructor": false}, {"identifier": "writeObject", "parameters": "(ObjectOutputStream stream)", "modifiers": "private", "return": "void", "signature": "void writeObject(ObjectOutputStream stream)", "full_signature": "private void writeObject(ObjectOutputStream stream)", "class_method_signature": "TextTitle.writeObject(ObjectOutputStream stream)", "testcase": false, "constructor": false}, {"identifier": "readObject", "parameters": "(ObjectInputStream stream)", "modifiers": "private", "return": "void", "signature": "void readObject(ObjectInputStream stream)", "full_signature": "private void readObject(ObjectInputStream stream)", "class_method_signature": "TextTitle.readObject(ObjectInputStream stream)", "testcase": false, "constructor": false}], "file": "source/org/jfree/chart/title/TextTitle.java"}, "focal_method": {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "body": "public int hashCode() {\n        int result = super.hashCode();\n        result = 29 * result + (this.text != null ? this.text.hashCode() : 0);\n        result = 29 * result + (this.font != null ? this.font.hashCode() : 0);\n        result = 29 * result + (this.paint != null ? this.paint.hashCode() : 0);\n        result = 29 * result + (this.backgroundPaint != null\n                ? this.backgroundPaint.hashCode() : 0);\n        return result;\n    }", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "TextTitle.hashCode()", "testcase": false, "constructor": false, "invocations": ["hashCode", "hashCode", "hashCode", "hashCode", "hashCode"]}, "repository": {"repo_id": "Chart_1_buggy"}}