{"test_class": {"identifier": "WindNeedleTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/chart/needle/junit/WindNeedleTests.java"}, "test_case": {"identifier": "testCloning", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testCloning() {\n        WindNeedle n1 = new WindNeedle();\n        WindNeedle n2 = null;\n        try {\n            n2 = (WindNeedle) n1.clone();\n        }\n        catch (CloneNotSupportedException e) {\n            e.printStackTrace();\n            System.err.println(\"Failed to clone.\");\n        }\n        assertTrue(n1 != n2);\n        assertTrue(n1.getClass() == n2.getClass());\n        assertTrue(n1.equals(n2));\n    }", "signature": "void testCloning()", "full_signature": "public void testCloning()", "class_method_signature": "WindNeedleTests.testCloning()", "testcase": true, "constructor": false, "invocations": ["clone", "printStackTrace", "println", "assertTrue", "assertTrue", "getClass", "getClass", "assertTrue", "equals"]}, "focal_class": {"identifier": "WindNeedle", "superclass": "extends ArrowNeedle", "interfaces": "implements Cloneable, Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -2861061368907167834L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -2861061368907167834L", "var_name": "serialVersionUID"}], "methods": [{"identifier": "WindNeedle", "parameters": "()", "modifiers": "public", "return": "", "signature": " WindNeedle()", "full_signature": "public  WindNeedle()", "class_method_signature": "WindNeedle.WindNeedle()", "testcase": false, "constructor": true}, {"identifier": "drawNeedle", "parameters": "(Graphics2D g2, Rectangle2D plotArea,\n                              Point2D rotate, double angle)", "modifiers": "protected", "return": "void", "signature": "void drawNeedle(Graphics2D g2, Rectangle2D plotArea,\n                              Point2D rotate, double angle)", "full_signature": "protected void drawNeedle(Graphics2D g2, Rectangle2D plotArea,\n                              Point2D rotate, double angle)", "class_method_signature": "WindNeedle.drawNeedle(Graphics2D g2, Rectangle2D plotArea,\n                              Point2D rotate, double angle)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object object)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object object)", "full_signature": "public boolean equals(Object object)", "class_method_signature": "WindNeedle.equals(Object object)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "WindNeedle.hashCode()", "testcase": false, "constructor": false}], "file": "source/org/jfree/chart/needle/WindNeedle.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object object)", "modifiers": "public", "return": "boolean", "body": "public boolean equals(Object object) {\n        if (object == null) {\n            return false;\n        }\n        if (object == this) {\n            return true;\n        }\n        if (super.equals(object) && object instanceof WindNeedle) {\n            return true;\n        }\n        return false;\n    }", "signature": "boolean equals(Object object)", "full_signature": "public boolean equals(Object object)", "class_method_signature": "WindNeedle.equals(Object object)", "testcase": false, "constructor": false, "invocations": ["equals"]}, "repository": {"repo_id": "Chart_1_buggy"}}