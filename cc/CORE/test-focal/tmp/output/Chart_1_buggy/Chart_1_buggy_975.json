{"test_class": {"identifier": "TimeTableXYDatasetTests", "superclass": "extends TestCase", "interfaces": "", "fields": [{"original_string": "private static final double DELTA = 0.0000000001;", "modifier": "private static final", "type": "double", "declarator": "DELTA = 0.0000000001", "var_name": "DELTA"}], "file": "tests/org/jfree/data/time/junit/TimeTableXYDatasetTests.java"}, "test_case": {"identifier": "testClear", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testClear() {\n        TimeTableXYDataset d = new TimeTableXYDataset();\n        d.add(new Year(1999), 1.0, \"Series 1\");\n        assertEquals(d.getItemCount(), 1);\n        assertEquals(d.getSeriesCount(), 1);\n        d.add(new Year(2000), 2.0, \"Series 2\");\n\n        d.clear();\n        // Make sure there's nothing left\n        assertEquals(0, d.getItemCount());\n        assertEquals(0, d.getSeriesCount());\n    }", "signature": "void testClear()", "full_signature": "public void testClear()", "class_method_signature": "TimeTableXYDatasetTests.testClear()", "testcase": true, "constructor": false, "invocations": ["add", "assertEquals", "getItemCount", "assertEquals", "getSeriesCount", "add", "clear", "assertEquals", "getItemCount", "assertEquals", "getSeriesCount"]}, "focal_class": {"identifier": "TimeTableXYDataset", "superclass": "extends AbstractIntervalXYDataset", "interfaces": "implements Cloneable, PublicCloneable, IntervalXYDataset, DomainInfo,\n                   TableXYDataset", "fields": [{"original_string": "private DefaultKeyedValues2D values;", "modifier": "private", "type": "DefaultKeyedValues2D", "declarator": "values", "var_name": "values"}, {"original_string": "private boolean domainIsPointsInTime;", "modifier": "private", "type": "boolean", "declarator": "domainIsPointsInTime", "var_name": "domainIsPointsInTime"}, {"original_string": "private TimePeriodAnchor xPosition;", "modifier": "private", "type": "TimePeriodAnchor", "declarator": "xPosition", "var_name": "xPosition"}, {"original_string": "private Calendar workingCalendar;", "modifier": "private", "type": "Calendar", "declarator": "workingCalendar", "var_name": "workingCalendar"}], "methods": [{"identifier": "TimeTableXYDataset", "parameters": "()", "modifiers": "public", "return": "", "signature": " TimeTableXYDataset()", "full_signature": "public  TimeTableXYDataset()", "class_method_signature": "TimeTableXYDataset.TimeTableXYDataset()", "testcase": false, "constructor": true}, {"identifier": "TimeTableXYDataset", "parameters": "(TimeZone zone)", "modifiers": "public", "return": "", "signature": " TimeTableXYDataset(TimeZone zone)", "full_signature": "public  TimeTableXYDataset(TimeZone zone)", "class_method_signature": "TimeTableXYDataset.TimeTableXYDataset(TimeZone zone)", "testcase": false, "constructor": true}, {"identifier": "TimeTableXYDataset", "parameters": "(TimeZone zone, Locale locale)", "modifiers": "public", "return": "", "signature": " TimeTableXYDataset(TimeZone zone, Locale locale)", "full_signature": "public  TimeTableXYDataset(TimeZone zone, Locale locale)", "class_method_signature": "TimeTableXYDataset.TimeTableXYDataset(TimeZone zone, Locale locale)", "testcase": false, "constructor": true}, {"identifier": "getDomainIsPointsInTime", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getDomainIsPointsInTime()", "full_signature": "public boolean getDomainIsPointsInTime()", "class_method_signature": "TimeTableXYDataset.getDomainIsPointsInTime()", "testcase": false, "constructor": false}, {"identifier": "setDomainIsPointsInTime", "parameters": "(boolean flag)", "modifiers": "public", "return": "void", "signature": "void setDomainIsPointsInTime(boolean flag)", "full_signature": "public void setDomainIsPointsInTime(boolean flag)", "class_method_signature": "TimeTableXYDataset.setDomainIsPointsInTime(boolean flag)", "testcase": false, "constructor": false}, {"identifier": "getXPosition", "parameters": "()", "modifiers": "public", "return": "TimePeriodAnchor", "signature": "TimePeriodAnchor getXPosition()", "full_signature": "public TimePeriodAnchor getXPosition()", "class_method_signature": "TimeTableXYDataset.getXPosition()", "testcase": false, "constructor": false}, {"identifier": "setXPosition", "parameters": "(TimePeriodAnchor anchor)", "modifiers": "public", "return": "void", "signature": "void setXPosition(TimePeriodAnchor anchor)", "full_signature": "public void setXPosition(TimePeriodAnchor anchor)", "class_method_signature": "TimeTableXYDataset.setXPosition(TimePeriodAnchor anchor)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(TimePeriod period, double y, Comparable seriesName)", "modifiers": "public", "return": "void", "signature": "void add(TimePeriod period, double y, Comparable seriesName)", "full_signature": "public void add(TimePeriod period, double y, Comparable seriesName)", "class_method_signature": "TimeTableXYDataset.add(TimePeriod period, double y, Comparable seriesName)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(TimePeriod period, Number y, Comparable seriesName,\n                    boolean notify)", "modifiers": "public", "return": "void", "signature": "void add(TimePeriod period, Number y, Comparable seriesName,\n                    boolean notify)", "full_signature": "public void add(TimePeriod period, Number y, Comparable seriesName,\n                    boolean notify)", "class_method_signature": "TimeTableXYDataset.add(TimePeriod period, Number y, Comparable seriesName,\n                    boolean notify)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(TimePeriod period, Comparable seriesName)", "modifiers": "public", "return": "void", "signature": "void remove(TimePeriod period, Comparable seriesName)", "full_signature": "public void remove(TimePeriod period, Comparable seriesName)", "class_method_signature": "TimeTableXYDataset.remove(TimePeriod period, Comparable seriesName)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(TimePeriod period, Comparable seriesName,\n            boolean notify)", "modifiers": "public", "return": "void", "signature": "void remove(TimePeriod period, Comparable seriesName,\n            boolean notify)", "full_signature": "public void remove(TimePeriod period, Comparable seriesName,\n            boolean notify)", "class_method_signature": "TimeTableXYDataset.remove(TimePeriod period, Comparable seriesName,\n            boolean notify)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "TimeTableXYDataset.clear()", "testcase": false, "constructor": false}, {"identifier": "getTimePeriod", "parameters": "(int item)", "modifiers": "public", "return": "TimePeriod", "signature": "TimePeriod getTimePeriod(int item)", "full_signature": "public TimePeriod getTimePeriod(int item)", "class_method_signature": "TimeTableXYDataset.getTimePeriod(int item)", "testcase": false, "constructor": false}, {"identifier": "getItemCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getItemCount()", "full_signature": "public int getItemCount()", "class_method_signature": "TimeTableXYDataset.getItemCount()", "testcase": false, "constructor": false}, {"identifier": "getItemCount", "parameters": "(int series)", "modifiers": "public", "return": "int", "signature": "int getItemCount(int series)", "full_signature": "public int getItemCount(int series)", "class_method_signature": "TimeTableXYDataset.getItemCount(int series)", "testcase": false, "constructor": false}, {"identifier": "getSeriesCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSeriesCount()", "full_signature": "public int getSeriesCount()", "class_method_signature": "TimeTableXYDataset.getSeriesCount()", "testcase": false, "constructor": false}, {"identifier": "getSeriesKey", "parameters": "(int series)", "modifiers": "public", "return": "Comparable", "signature": "Comparable getSeriesKey(int series)", "full_signature": "public Comparable getSeriesKey(int series)", "class_method_signature": "TimeTableXYDataset.getSeriesKey(int series)", "testcase": false, "constructor": false}, {"identifier": "getX", "parameters": "(int series, int item)", "modifiers": "public", "return": "Number", "signature": "Number getX(int series, int item)", "full_signature": "public Number getX(int series, int item)", "class_method_signature": "TimeTableXYDataset.getX(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "getXValue", "parameters": "(int series, int item)", "modifiers": "public", "return": "double", "signature": "double getXValue(int series, int item)", "full_signature": "public double getXValue(int series, int item)", "class_method_signature": "TimeTableXYDataset.getXValue(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "getStartX", "parameters": "(int series, int item)", "modifiers": "public", "return": "Number", "signature": "Number getStartX(int series, int item)", "full_signature": "public Number getStartX(int series, int item)", "class_method_signature": "TimeTableXYDataset.getStartX(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "getStartXValue", "parameters": "(int series, int item)", "modifiers": "public", "return": "double", "signature": "double getStartXValue(int series, int item)", "full_signature": "public double getStartXValue(int series, int item)", "class_method_signature": "TimeTableXYDataset.getStartXValue(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "getEndX", "parameters": "(int series, int item)", "modifiers": "public", "return": "Number", "signature": "Number getEndX(int series, int item)", "full_signature": "public Number getEndX(int series, int item)", "class_method_signature": "TimeTableXYDataset.getEndX(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "getEndXValue", "parameters": "(int series, int item)", "modifiers": "public", "return": "double", "signature": "double getEndXValue(int series, int item)", "full_signature": "public double getEndXValue(int series, int item)", "class_method_signature": "TimeTableXYDataset.getEndXValue(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "getY", "parameters": "(int series, int item)", "modifiers": "public", "return": "Number", "signature": "Number getY(int series, int item)", "full_signature": "public Number getY(int series, int item)", "class_method_signature": "TimeTableXYDataset.getY(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "getStartY", "parameters": "(int series, int item)", "modifiers": "public", "return": "Number", "signature": "Number getStartY(int series, int item)", "full_signature": "public Number getStartY(int series, int item)", "class_method_signature": "TimeTableXYDataset.getStartY(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "getEndY", "parameters": "(int series, int item)", "modifiers": "public", "return": "Number", "signature": "Number getEndY(int series, int item)", "full_signature": "public Number getEndY(int series, int item)", "class_method_signature": "TimeTableXYDataset.getEndY(int series, int item)", "testcase": false, "constructor": false}, {"identifier": "getXValue", "parameters": "(TimePeriod period)", "modifiers": "private", "return": "long", "signature": "long getXValue(TimePeriod period)", "full_signature": "private long getXValue(TimePeriod period)", "class_method_signature": "TimeTableXYDataset.getXValue(TimePeriod period)", "testcase": false, "constructor": false}, {"identifier": "getDomainLowerBound", "parameters": "(boolean includeInterval)", "modifiers": "public", "return": "double", "signature": "double getDomainLowerBound(boolean includeInterval)", "full_signature": "public double getDomainLowerBound(boolean includeInterval)", "class_method_signature": "TimeTableXYDataset.getDomainLowerBound(boolean includeInterval)", "testcase": false, "constructor": false}, {"identifier": "getDomainUpperBound", "parameters": "(boolean includeInterval)", "modifiers": "public", "return": "double", "signature": "double getDomainUpperBound(boolean includeInterval)", "full_signature": "public double getDomainUpperBound(boolean includeInterval)", "class_method_signature": "TimeTableXYDataset.getDomainUpperBound(boolean includeInterval)", "testcase": false, "constructor": false}, {"identifier": "getDomainBounds", "parameters": "(boolean includeInterval)", "modifiers": "public", "return": "Range", "signature": "Range getDomainBounds(boolean includeInterval)", "full_signature": "public Range getDomainBounds(boolean includeInterval)", "class_method_signature": "TimeTableXYDataset.getDomainBounds(boolean includeInterval)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "TimeTableXYDataset.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object clone()", "full_signature": "public Object clone()", "class_method_signature": "TimeTableXYDataset.clone()", "testcase": false, "constructor": false}], "file": "source/org/jfree/data/time/TimeTableXYDataset.java"}, "focal_method": {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void clear() {\n        if (this.values.getRowCount() > 0) {\n            this.values.clear();\n            fireDatasetChanged(new DatasetChangeInfo());\n            //TODO: fill in real change info\n        }\n    }", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "TimeTableXYDataset.clear()", "testcase": false, "constructor": false, "invocations": ["getRowCount", "clear", "fireDatasetChanged"]}, "repository": {"repo_id": "Chart_1_buggy"}}