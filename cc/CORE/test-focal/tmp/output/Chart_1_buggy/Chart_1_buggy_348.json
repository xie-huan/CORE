{"test_class": {"identifier": "XYImageAnnotationTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/chart/annotations/junit/XYImageAnnotationTests.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testEquals() {\n        Image image = JFreeChart.INFO.getLogo();\n        XYImageAnnotation a1 = new XYImageAnnotation(10.0, 20.0, image);\n        XYImageAnnotation a2 = new XYImageAnnotation(10.0, 20.0, image);\n        assertTrue(a1.equals(a2));\n\n        a1 = new XYImageAnnotation(10.0, 20.0, image, RectangleAnchor.LEFT);\n        assertFalse(a1.equals(a2));\n        a2 = new XYImageAnnotation(10.0, 20.0, image, RectangleAnchor.LEFT);\n        assertTrue(a1.equals(a2));\n    }", "signature": "void testEquals()", "full_signature": "public void testEquals()", "class_method_signature": "XYImageAnnotationTests.testEquals()", "testcase": true, "constructor": false, "invocations": ["getLogo", "assertTrue", "equals", "assertFalse", "equals", "assertTrue", "equals"]}, "focal_class": {"identifier": "XYImageAnnotation", "superclass": "extends AbstractXYAnnotation", "interfaces": "implements Cloneable, PublicCloneable, Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -4364694501921559958L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -4364694501921559958L", "var_name": "serialVersionUID"}, {"original_string": "private double x;", "modifier": "private", "type": "double", "declarator": "x", "var_name": "x"}, {"original_string": "private double y;", "modifier": "private", "type": "double", "declarator": "y", "var_name": "y"}, {"original_string": "private transient Image image;", "modifier": "private transient", "type": "Image", "declarator": "image", "var_name": "image"}, {"original_string": "private RectangleAnchor anchor;", "modifier": "private", "type": "RectangleAnchor", "declarator": "anchor", "var_name": "anchor"}], "methods": [{"identifier": "XYImageAnnotation", "parameters": "(double x, double y, Image image)", "modifiers": "public", "return": "", "signature": " XYImageAnnotation(double x, double y, Image image)", "full_signature": "public  XYImageAnnotation(double x, double y, Image image)", "class_method_signature": "XYImageAnnotation.XYImageAnnotation(double x, double y, Image image)", "testcase": false, "constructor": true}, {"identifier": "XYImageAnnotation", "parameters": "(double x, double y, Image image,\n            RectangleAnchor anchor)", "modifiers": "public", "return": "", "signature": " XYImageAnnotation(double x, double y, Image image,\n            RectangleAnchor anchor)", "full_signature": "public  XYImageAnnotation(double x, double y, Image image,\n            RectangleAnchor anchor)", "class_method_signature": "XYImageAnnotation.XYImageAnnotation(double x, double y, Image image,\n            RectangleAnchor anchor)", "testcase": false, "constructor": true}, {"identifier": "getX", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getX()", "full_signature": "public double getX()", "class_method_signature": "XYImageAnnotation.getX()", "testcase": false, "constructor": false}, {"identifier": "getY", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getY()", "full_signature": "public double getY()", "class_method_signature": "XYImageAnnotation.getY()", "testcase": false, "constructor": false}, {"identifier": "getImage", "parameters": "()", "modifiers": "public", "return": "Image", "signature": "Image getImage()", "full_signature": "public Image getImage()", "class_method_signature": "XYImageAnnotation.getImage()", "testcase": false, "constructor": false}, {"identifier": "getImageAnchor", "parameters": "()", "modifiers": "public", "return": "RectangleAnchor", "signature": "RectangleAnchor getImageAnchor()", "full_signature": "public RectangleAnchor getImageAnchor()", "class_method_signature": "XYImageAnnotation.getImageAnchor()", "testcase": false, "constructor": false}, {"identifier": "draw", "parameters": "(Graphics2D g2, XYPlot plot, Rectangle2D dataArea,\n                     ValueAxis domainAxis, ValueAxis rangeAxis,\n                     int rendererIndex,\n                     PlotRenderingInfo info)", "modifiers": "public", "return": "void", "signature": "void draw(Graphics2D g2, XYPlot plot, Rectangle2D dataArea,\n                     ValueAxis domainAxis, ValueAxis rangeAxis,\n                     int rendererIndex,\n                     PlotRenderingInfo info)", "full_signature": "public void draw(Graphics2D g2, XYPlot plot, Rectangle2D dataArea,\n                     ValueAxis domainAxis, ValueAxis rangeAxis,\n                     int rendererIndex,\n                     PlotRenderingInfo info)", "class_method_signature": "XYImageAnnotation.draw(Graphics2D g2, XYPlot plot, Rectangle2D dataArea,\n                     ValueAxis domainAxis, ValueAxis rangeAxis,\n                     int rendererIndex,\n                     PlotRenderingInfo info)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "XYImageAnnotation.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "XYImageAnnotation.hashCode()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object clone()", "full_signature": "public Object clone()", "class_method_signature": "XYImageAnnotation.clone()", "testcase": false, "constructor": false}, {"identifier": "writeObject", "parameters": "(ObjectOutputStream stream)", "modifiers": "private", "return": "void", "signature": "void writeObject(ObjectOutputStream stream)", "full_signature": "private void writeObject(ObjectOutputStream stream)", "class_method_signature": "XYImageAnnotation.writeObject(ObjectOutputStream stream)", "testcase": false, "constructor": false}, {"identifier": "readObject", "parameters": "(ObjectInputStream stream)", "modifiers": "private", "return": "void", "signature": "void readObject(ObjectInputStream stream)", "full_signature": "private void readObject(ObjectInputStream stream)", "class_method_signature": "XYImageAnnotation.readObject(ObjectInputStream stream)", "testcase": false, "constructor": false}], "file": "source/org/jfree/chart/annotations/XYImageAnnotation.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "body": "public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        // now try to reject equality...\n        if (!super.equals(obj)) {\n            return false;\n        }\n        if (!(obj instanceof XYImageAnnotation)) {\n            return false;\n        }\n        XYImageAnnotation that = (XYImageAnnotation) obj;\n        if (this.x != that.x) {\n            return false;\n        }\n        if (this.y != that.y) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.image, that.image)) {\n            return false;\n        }\n        if (!this.anchor.equals(that.anchor)) {\n            return false;\n        }\n        // seems to be the same...\n        return true;\n    }", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "XYImageAnnotation.equals(Object obj)", "testcase": false, "constructor": false, "invocations": ["equals", "equal", "equals"]}, "repository": {"repo_id": "Chart_1_buggy"}}