{"test_class": {"identifier": "PieLabelRecordTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/chart/plot/junit/PieLabelRecordTests.java"}, "test_case": {"identifier": "testSerialization", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testSerialization() {\n\n        PieLabelRecord p1 = new PieLabelRecord(\"A\", 1.0, 2.0, new TextBox(\"B\"),\n                3.0, 4.0, 5.0);\n        PieLabelRecord p2 = null;\n        try {\n            ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n            ObjectOutput out = new ObjectOutputStream(buffer);\n            out.writeObject(p1);\n            out.close();\n\n            ObjectInput in = new ObjectInputStream(\n                    new ByteArrayInputStream(buffer.toByteArray()));\n            p2 = (PieLabelRecord) in.readObject();\n            in.close();\n        }\n        catch (Exception e) {\n            e.printStackTrace();\n        }\n        boolean b = p1.equals(p2);\n        assertTrue(b);\n\n    }", "signature": "void testSerialization()", "full_signature": "public void testSerialization()", "class_method_signature": "PieLabelRecordTests.testSerialization()", "testcase": true, "constructor": false, "invocations": ["writeObject", "close", "toByteArray", "readObject", "close", "printStackTrace", "equals", "assertTrue"]}, "focal_class": {"identifier": "PieLabelRecord", "superclass": "", "interfaces": "implements Comparable, Serializable", "fields": [{"original_string": "private Comparable key;", "modifier": "private", "type": "Comparable", "declarator": "key", "var_name": "key"}, {"original_string": "private double angle;", "modifier": "private", "type": "double", "declarator": "angle", "var_name": "angle"}, {"original_string": "private double baseY;", "modifier": "private", "type": "double", "declarator": "baseY", "var_name": "baseY"}, {"original_string": "private double allocatedY;", "modifier": "private", "type": "double", "declarator": "allocatedY", "var_name": "allocatedY"}, {"original_string": "private TextBox label;", "modifier": "private", "type": "TextBox", "declarator": "label", "var_name": "label"}, {"original_string": "private double labelHeight;", "modifier": "private", "type": "double", "declarator": "labelHeight", "var_name": "labelHeight"}, {"original_string": "private double gap;", "modifier": "private", "type": "double", "declarator": "gap", "var_name": "gap"}, {"original_string": "private double linkPercent;", "modifier": "private", "type": "double", "declarator": "linkPercent", "var_name": "linkPercent"}], "methods": [{"identifier": "PieLabelRecord", "parameters": "(Comparable key, double angle, double baseY,\n                          TextBox label, double labelHeight, double gap,\n                          double linkPercent)", "modifiers": "public", "return": "", "signature": " PieLabelRecord(Comparable key, double angle, double baseY,\n                          TextBox label, double labelHeight, double gap,\n                          double linkPercent)", "full_signature": "public  PieLabelRecord(Comparable key, double angle, double baseY,\n                          TextBox label, double labelHeight, double gap,\n                          double linkPercent)", "class_method_signature": "PieLabelRecord.PieLabelRecord(Comparable key, double angle, double baseY,\n                          TextBox label, double labelHeight, double gap,\n                          double linkPercent)", "testcase": false, "constructor": true}, {"identifier": "getBaseY", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getBaseY()", "full_signature": "public double getBaseY()", "class_method_signature": "PieLabelRecord.getBaseY()", "testcase": false, "constructor": false}, {"identifier": "setBaseY", "parameters": "(double base)", "modifiers": "public", "return": "void", "signature": "void setBaseY(double base)", "full_signature": "public void setBaseY(double base)", "class_method_signature": "PieLabelRecord.setBaseY(double base)", "testcase": false, "constructor": false}, {"identifier": "getLowerY", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getLowerY()", "full_signature": "public double getLowerY()", "class_method_signature": "PieLabelRecord.getLowerY()", "testcase": false, "constructor": false}, {"identifier": "getUpperY", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getUpperY()", "full_signature": "public double getUpperY()", "class_method_signature": "PieLabelRecord.getUpperY()", "testcase": false, "constructor": false}, {"identifier": "getAngle", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getAngle()", "full_signature": "public double getAngle()", "class_method_signature": "PieLabelRecord.getAngle()", "testcase": false, "constructor": false}, {"identifier": "getKey", "parameters": "()", "modifiers": "public", "return": "Comparable", "signature": "Comparable getKey()", "full_signature": "public Comparable getKey()", "class_method_signature": "PieLabelRecord.getKey()", "testcase": false, "constructor": false}, {"identifier": "getLabel", "parameters": "()", "modifiers": "public", "return": "TextBox", "signature": "TextBox getLabel()", "full_signature": "public TextBox getLabel()", "class_method_signature": "PieLabelRecord.getLabel()", "testcase": false, "constructor": false}, {"identifier": "getLabelHeight", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getLabelHeight()", "full_signature": "public double getLabelHeight()", "class_method_signature": "PieLabelRecord.getLabelHeight()", "testcase": false, "constructor": false}, {"identifier": "getAllocatedY", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getAllocatedY()", "full_signature": "public double getAllocatedY()", "class_method_signature": "PieLabelRecord.getAllocatedY()", "testcase": false, "constructor": false}, {"identifier": "setAllocatedY", "parameters": "(double y)", "modifiers": "public", "return": "void", "signature": "void setAllocatedY(double y)", "full_signature": "public void setAllocatedY(double y)", "class_method_signature": "PieLabelRecord.setAllocatedY(double y)", "testcase": false, "constructor": false}, {"identifier": "getGap", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getGap()", "full_signature": "public double getGap()", "class_method_signature": "PieLabelRecord.getGap()", "testcase": false, "constructor": false}, {"identifier": "getLinkPercent", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getLinkPercent()", "full_signature": "public double getLinkPercent()", "class_method_signature": "PieLabelRecord.getLinkPercent()", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(Object obj)", "modifiers": "public", "return": "int", "signature": "int compareTo(Object obj)", "full_signature": "public int compareTo(Object obj)", "class_method_signature": "PieLabelRecord.compareTo(Object obj)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "PieLabelRecord.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "PieLabelRecord.toString()", "testcase": false, "constructor": false}], "file": "source/org/jfree/chart/plot/PieLabelRecord.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "body": "public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof PieLabelRecord)) {\n            return false;\n        }\n        PieLabelRecord that = (PieLabelRecord) obj;\n        if (!this.key.equals(that.key)) {\n            return false;\n        }\n        if (this.angle != that.angle) {\n            return false;\n        }\n        if (this.gap != that.gap) {\n            return false;\n        }\n        if (this.allocatedY != that.allocatedY) {\n            return false;\n        }\n        if (this.baseY != that.baseY) {\n            return false;\n        }\n        if (this.labelHeight != that.labelHeight) {\n            return false;\n        }\n        if (this.linkPercent != that.linkPercent) {\n            return false;\n        }\n        if (!this.label.equals(that.label)) {\n            return false;\n        }\n        return true;\n    }", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "PieLabelRecord.equals(Object obj)", "testcase": false, "constructor": false, "invocations": ["equals", "equals"]}, "repository": {"repo_id": "Chart_1_buggy"}}