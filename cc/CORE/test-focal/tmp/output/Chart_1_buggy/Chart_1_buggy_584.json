{"test_class": {"identifier": "LineFunction2DTests", "superclass": "extends TestCase", "interfaces": "", "fields": [{"original_string": "private static final double EPSILON = 0.000000001;", "modifier": "private static final", "type": "double", "declarator": "EPSILON = 0.000000001", "var_name": "EPSILON"}], "file": "tests/org/jfree/data/function/junit/LineFunction2DTests.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testEquals() {\n        LineFunction2D f1 = new LineFunction2D(1.0, 2.0);\n        LineFunction2D f2 = new LineFunction2D(1.0, 2.0);\n        assertTrue(f1.equals(f2));\n        f1 = new LineFunction2D(2.0, 3.0);\n        assertFalse(f1.equals(f2));\n        f2 = new LineFunction2D(2.0, 3.0);\n        assertTrue(f1.equals(f2));\n    }", "signature": "void testEquals()", "full_signature": "public void testEquals()", "class_method_signature": "LineFunction2DTests.testEquals()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "equals", "assertFalse", "equals", "assertTrue", "equals"]}, "focal_class": {"identifier": "LineFunction2D", "superclass": "", "interfaces": "implements Function2D, Serializable", "fields": [{"original_string": "private double a;", "modifier": "private", "type": "double", "declarator": "a", "var_name": "a"}, {"original_string": "private double b;", "modifier": "private", "type": "double", "declarator": "b", "var_name": "b"}], "methods": [{"identifier": "LineFunction2D", "parameters": "(double a, double b)", "modifiers": "public", "return": "", "signature": " LineFunction2D(double a, double b)", "full_signature": "public  LineFunction2D(double a, double b)", "class_method_signature": "LineFunction2D.LineFunction2D(double a, double b)", "testcase": false, "constructor": true}, {"identifier": "getIntercept", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getIntercept()", "full_signature": "public double getIntercept()", "class_method_signature": "LineFunction2D.getIntercept()", "testcase": false, "constructor": false}, {"identifier": "getSlope", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getSlope()", "full_signature": "public double getSlope()", "class_method_signature": "LineFunction2D.getSlope()", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(double x)", "modifiers": "public", "return": "double", "signature": "double getValue(double x)", "full_signature": "public double getValue(double x)", "class_method_signature": "LineFunction2D.getValue(double x)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "LineFunction2D.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "LineFunction2D.hashCode()", "testcase": false, "constructor": false}], "file": "source/org/jfree/data/function/LineFunction2D.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "body": "public boolean equals(Object obj) {\n        if (!(obj instanceof LineFunction2D)) {\n            return false;\n        }\n        LineFunction2D that = (LineFunction2D) obj;\n        if (this.a != that.a) {\n            return false;\n        }\n        if (this.b != that.b) {\n            return false;\n        }\n        return true;\n    }", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "LineFunction2D.equals(Object obj)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": "Chart_1_buggy"}}