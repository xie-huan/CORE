{"test_class": {"identifier": "XYTextAnnotationTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/chart/annotations/junit/XYTextAnnotationTests.java"}, "test_case": {"identifier": "testHashCode", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testHashCode() {\n        XYTextAnnotation a1 = new XYTextAnnotation(\"Text\", 10.0, 20.0);\n        XYTextAnnotation a2 = new XYTextAnnotation(\"Text\", 10.0, 20.0);\n        assertTrue(a1.equals(a2));\n        int h1 = a1.hashCode();\n        int h2 = a2.hashCode();\n        assertEquals(h1, h2);\n    }", "signature": "void testHashCode()", "full_signature": "public void testHashCode()", "class_method_signature": "XYTextAnnotationTests.testHashCode()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "equals", "hashCode", "hashCode", "assertEquals"]}, "focal_class": {"identifier": "XYTextAnnotation", "superclass": "extends AbstractXYAnnotation", "interfaces": "implements Cloneable, PublicCloneable, Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -2946063342782506328L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -2946063342782506328L", "var_name": "serialVersionUID"}, {"original_string": "public static final Font DEFAULT_FONT = new Font(\"Tahoma\", Font.PLAIN, 10);", "modifier": "public static final", "type": "Font", "declarator": "DEFAULT_FONT = new Font(\"Tahoma\", Font.PLAIN, 10)", "var_name": "DEFAULT_FONT"}, {"original_string": "public static final Paint DEFAULT_PAINT = Color.black;", "modifier": "public static final", "type": "Paint", "declarator": "DEFAULT_PAINT = Color.black", "var_name": "DEFAULT_PAINT"}, {"original_string": "public static final TextAnchor DEFAULT_TEXT_ANCHOR = TextAnchor.CENTER;", "modifier": "public static final", "type": "TextAnchor", "declarator": "DEFAULT_TEXT_ANCHOR = TextAnchor.CENTER", "var_name": "DEFAULT_TEXT_ANCHOR"}, {"original_string": "public static final TextAnchor DEFAULT_ROTATION_ANCHOR = TextAnchor.CENTER;", "modifier": "public static final", "type": "TextAnchor", "declarator": "DEFAULT_ROTATION_ANCHOR = TextAnchor.CENTER", "var_name": "DEFAULT_ROTATION_ANCHOR"}, {"original_string": "public static final double DEFAULT_ROTATION_ANGLE = 0.0;", "modifier": "public static final", "type": "double", "declarator": "DEFAULT_ROTATION_ANGLE = 0.0", "var_name": "DEFAULT_ROTATION_ANGLE"}, {"original_string": "private String text;", "modifier": "private", "type": "String", "declarator": "text", "var_name": "text"}, {"original_string": "private Font font;", "modifier": "private", "type": "Font", "declarator": "font", "var_name": "font"}, {"original_string": "private transient Paint paint;", "modifier": "private transient", "type": "Paint", "declarator": "paint", "var_name": "paint"}, {"original_string": "private double x;", "modifier": "private", "type": "double", "declarator": "x", "var_name": "x"}, {"original_string": "private double y;", "modifier": "private", "type": "double", "declarator": "y", "var_name": "y"}, {"original_string": "private TextAnchor textAnchor;", "modifier": "private", "type": "TextAnchor", "declarator": "textAnchor", "var_name": "textAnchor"}, {"original_string": "private TextAnchor rotationAnchor;", "modifier": "private", "type": "TextAnchor", "declarator": "rotationAnchor", "var_name": "rotationAnchor"}, {"original_string": "private double rotationAngle;", "modifier": "private", "type": "double", "declarator": "rotationAngle", "var_name": "rotationAngle"}, {"original_string": "private transient Paint backgroundPaint;", "modifier": "private transient", "type": "Paint", "declarator": "backgroundPaint", "var_name": "backgroundPaint"}, {"original_string": "private boolean outlineVisible;", "modifier": "private", "type": "boolean", "declarator": "outlineVisible", "var_name": "outlineVisible"}, {"original_string": "private transient Paint outlinePaint;", "modifier": "private transient", "type": "Paint", "declarator": "outlinePaint", "var_name": "outlinePaint"}, {"original_string": "private transient Stroke outlineStroke;", "modifier": "private transient", "type": "Stroke", "declarator": "outlineStroke", "var_name": "outlineStroke"}], "methods": [{"identifier": "XYTextAnnotation", "parameters": "(String text, double x, double y)", "modifiers": "public", "return": "", "signature": " XYTextAnnotation(String text, double x, double y)", "full_signature": "public  XYTextAnnotation(String text, double x, double y)", "class_method_signature": "XYTextAnnotation.XYTextAnnotation(String text, double x, double y)", "testcase": false, "constructor": true}, {"identifier": "getText", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getText()", "full_signature": "public String getText()", "class_method_signature": "XYTextAnnotation.getText()", "testcase": false, "constructor": false}, {"identifier": "setText", "parameters": "(String text)", "modifiers": "public", "return": "void", "signature": "void setText(String text)", "full_signature": "public void setText(String text)", "class_method_signature": "XYTextAnnotation.setText(String text)", "testcase": false, "constructor": false}, {"identifier": "getFont", "parameters": "()", "modifiers": "public", "return": "Font", "signature": "Font getFont()", "full_signature": "public Font getFont()", "class_method_signature": "XYTextAnnotation.getFont()", "testcase": false, "constructor": false}, {"identifier": "setFont", "parameters": "(Font font)", "modifiers": "public", "return": "void", "signature": "void setFont(Font font)", "full_signature": "public void setFont(Font font)", "class_method_signature": "XYTextAnnotation.setFont(Font font)", "testcase": false, "constructor": false}, {"identifier": "getPaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getPaint()", "full_signature": "public Paint getPaint()", "class_method_signature": "XYTextAnnotation.getPaint()", "testcase": false, "constructor": false}, {"identifier": "setPaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setPaint(Paint paint)", "full_signature": "public void setPaint(Paint paint)", "class_method_signature": "XYTextAnnotation.setPaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "getTextAnchor", "parameters": "()", "modifiers": "public", "return": "TextAnchor", "signature": "TextAnchor getTextAnchor()", "full_signature": "public TextAnchor getTextAnchor()", "class_method_signature": "XYTextAnnotation.getTextAnchor()", "testcase": false, "constructor": false}, {"identifier": "setTextAnchor", "parameters": "(TextAnchor anchor)", "modifiers": "public", "return": "void", "signature": "void setTextAnchor(TextAnchor anchor)", "full_signature": "public void setTextAnchor(TextAnchor anchor)", "class_method_signature": "XYTextAnnotation.setTextAnchor(TextAnchor anchor)", "testcase": false, "constructor": false}, {"identifier": "getRotationAnchor", "parameters": "()", "modifiers": "public", "return": "TextAnchor", "signature": "TextAnchor getRotationAnchor()", "full_signature": "public TextAnchor getRotationAnchor()", "class_method_signature": "XYTextAnnotation.getRotationAnchor()", "testcase": false, "constructor": false}, {"identifier": "setRotationAnchor", "parameters": "(TextAnchor anchor)", "modifiers": "public", "return": "void", "signature": "void setRotationAnchor(TextAnchor anchor)", "full_signature": "public void setRotationAnchor(TextAnchor anchor)", "class_method_signature": "XYTextAnnotation.setRotationAnchor(TextAnchor anchor)", "testcase": false, "constructor": false}, {"identifier": "getRotationAngle", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getRotationAngle()", "full_signature": "public double getRotationAngle()", "class_method_signature": "XYTextAnnotation.getRotationAngle()", "testcase": false, "constructor": false}, {"identifier": "setRotationAngle", "parameters": "(double angle)", "modifiers": "public", "return": "void", "signature": "void setRotationAngle(double angle)", "full_signature": "public void setRotationAngle(double angle)", "class_method_signature": "XYTextAnnotation.setRotationAngle(double angle)", "testcase": false, "constructor": false}, {"identifier": "getX", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getX()", "full_signature": "public double getX()", "class_method_signature": "XYTextAnnotation.getX()", "testcase": false, "constructor": false}, {"identifier": "setX", "parameters": "(double x)", "modifiers": "public", "return": "void", "signature": "void setX(double x)", "full_signature": "public void setX(double x)", "class_method_signature": "XYTextAnnotation.setX(double x)", "testcase": false, "constructor": false}, {"identifier": "getY", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getY()", "full_signature": "public double getY()", "class_method_signature": "XYTextAnnotation.getY()", "testcase": false, "constructor": false}, {"identifier": "setY", "parameters": "(double y)", "modifiers": "public", "return": "void", "signature": "void setY(double y)", "full_signature": "public void setY(double y)", "class_method_signature": "XYTextAnnotation.setY(double y)", "testcase": false, "constructor": false}, {"identifier": "getBackgroundPaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getBackgroundPaint()", "full_signature": "public Paint getBackgroundPaint()", "class_method_signature": "XYTextAnnotation.getBackgroundPaint()", "testcase": false, "constructor": false}, {"identifier": "setBackgroundPaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setBackgroundPaint(Paint paint)", "full_signature": "public void setBackgroundPaint(Paint paint)", "class_method_signature": "XYTextAnnotation.setBackgroundPaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "getOutlinePaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getOutlinePaint()", "full_signature": "public Paint getOutlinePaint()", "class_method_signature": "XYTextAnnotation.getOutlinePaint()", "testcase": false, "constructor": false}, {"identifier": "setOutlinePaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setOutlinePaint(Paint paint)", "full_signature": "public void setOutlinePaint(Paint paint)", "class_method_signature": "XYTextAnnotation.setOutlinePaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "getOutlineStroke", "parameters": "()", "modifiers": "public", "return": "Stroke", "signature": "Stroke getOutlineStroke()", "full_signature": "public Stroke getOutlineStroke()", "class_method_signature": "XYTextAnnotation.getOutlineStroke()", "testcase": false, "constructor": false}, {"identifier": "setOutlineStroke", "parameters": "(Stroke stroke)", "modifiers": "public", "return": "void", "signature": "void setOutlineStroke(Stroke stroke)", "full_signature": "public void setOutlineStroke(Stroke stroke)", "class_method_signature": "XYTextAnnotation.setOutlineStroke(Stroke stroke)", "testcase": false, "constructor": false}, {"identifier": "isOutlineVisible", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isOutlineVisible()", "full_signature": "public boolean isOutlineVisible()", "class_method_signature": "XYTextAnnotation.isOutlineVisible()", "testcase": false, "constructor": false}, {"identifier": "setOutlineVisible", "parameters": "(boolean visible)", "modifiers": "public", "return": "void", "signature": "void setOutlineVisible(boolean visible)", "full_signature": "public void setOutlineVisible(boolean visible)", "class_method_signature": "XYTextAnnotation.setOutlineVisible(boolean visible)", "testcase": false, "constructor": false}, {"identifier": "draw", "parameters": "(Graphics2D g2, XYPlot plot, Rectangle2D dataArea,\n                     ValueAxis domainAxis, ValueAxis rangeAxis,\n                     int rendererIndex,\n                     PlotRenderingInfo info)", "modifiers": "public", "return": "void", "signature": "void draw(Graphics2D g2, XYPlot plot, Rectangle2D dataArea,\n                     ValueAxis domainAxis, ValueAxis rangeAxis,\n                     int rendererIndex,\n                     PlotRenderingInfo info)", "full_signature": "public void draw(Graphics2D g2, XYPlot plot, Rectangle2D dataArea,\n                     ValueAxis domainAxis, ValueAxis rangeAxis,\n                     int rendererIndex,\n                     PlotRenderingInfo info)", "class_method_signature": "XYTextAnnotation.draw(Graphics2D g2, XYPlot plot, Rectangle2D dataArea,\n                     ValueAxis domainAxis, ValueAxis rangeAxis,\n                     int rendererIndex,\n                     PlotRenderingInfo info)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "XYTextAnnotation.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "XYTextAnnotation.hashCode()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object clone()", "full_signature": "public Object clone()", "class_method_signature": "XYTextAnnotation.clone()", "testcase": false, "constructor": false}, {"identifier": "writeObject", "parameters": "(ObjectOutputStream stream)", "modifiers": "private", "return": "void", "signature": "void writeObject(ObjectOutputStream stream)", "full_signature": "private void writeObject(ObjectOutputStream stream)", "class_method_signature": "XYTextAnnotation.writeObject(ObjectOutputStream stream)", "testcase": false, "constructor": false}, {"identifier": "readObject", "parameters": "(ObjectInputStream stream)", "modifiers": "private", "return": "void", "signature": "void readObject(ObjectInputStream stream)", "full_signature": "private void readObject(ObjectInputStream stream)", "class_method_signature": "XYTextAnnotation.readObject(ObjectInputStream stream)", "testcase": false, "constructor": false}], "file": "source/org/jfree/chart/annotations/XYTextAnnotation.java"}, "focal_method": {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "body": "public int hashCode() {\n        int result = 193;\n        result = 37 * this.text.hashCode();\n        result = 37 * this.font.hashCode();\n        result = 37 * result + HashUtilities.hashCodeForPaint(this.paint);\n        long temp = Double.doubleToLongBits(this.x);\n        result = 37 * result + (int) (temp ^ (temp >>> 32));\n        temp = Double.doubleToLongBits(this.y);\n        result = 37 * result + (int) (temp ^ (temp >>> 32));\n        result = 37 * result + this.textAnchor.hashCode();\n        result = 37 * result + this.rotationAnchor.hashCode();\n        temp = Double.doubleToLongBits(this.rotationAngle);\n        result = 37 * result + (int) (temp ^ (temp >>> 32));\n        return result;\n    }", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "XYTextAnnotation.hashCode()", "testcase": false, "constructor": false, "invocations": ["hashCode", "hashCode", "hashCodeForPaint", "doubleToLongBits", "doubleToLongBits", "hashCode", "hashCode", "doubleToLongBits"]}, "repository": {"repo_id": "Chart_1_buggy"}}