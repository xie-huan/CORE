{"test_class": {"identifier": "SimpleTimePeriodTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/data/time/junit/SimpleTimePeriodTests.java"}, "test_case": {"identifier": "testImmutable", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testImmutable() {\n        SimpleTimePeriod p1 = new SimpleTimePeriod(new Date(10L),\n                new Date(20L));\n        SimpleTimePeriod p2 = new SimpleTimePeriod(new Date(10L),\n                new Date(20L));\n        assertEquals(p1, p2);\n        p1.getStart().setTime(11L);\n        assertEquals(p1, p2);\n\n        Date d1 = new Date(10L);\n        Date d2 = new Date(20L);\n        p1 = new SimpleTimePeriod(d1, d2);\n        d1.setTime(11L);\n        assertEquals(new Date(10L), p1.getStart());\n    }", "signature": "void testImmutable()", "full_signature": "public void testImmutable()", "class_method_signature": "SimpleTimePeriodTests.testImmutable()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "setTime", "getStart", "assertEquals", "setTime", "assertEquals", "getStart"]}, "focal_class": {"identifier": "SimpleTimePeriod", "superclass": "", "interfaces": "implements TimePeriod, Comparable, Serializable", "fields": [{"original_string": "private static final long serialVersionUID = 8684672361131829554L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 8684672361131829554L", "var_name": "serialVersionUID"}, {"original_string": "private long start;", "modifier": "private", "type": "long", "declarator": "start", "var_name": "start"}, {"original_string": "private long end;", "modifier": "private", "type": "long", "declarator": "end", "var_name": "end"}], "methods": [{"identifier": "SimpleTimePeriod", "parameters": "(long start, long end)", "modifiers": "public", "return": "", "signature": " SimpleTimePeriod(long start, long end)", "full_signature": "public  SimpleTimePeriod(long start, long end)", "class_method_signature": "SimpleTimePeriod.SimpleTimePeriod(long start, long end)", "testcase": false, "constructor": true}, {"identifier": "SimpleTimePeriod", "parameters": "(Date start, Date end)", "modifiers": "public", "return": "", "signature": " SimpleTimePeriod(Date start, Date end)", "full_signature": "public  SimpleTimePeriod(Date start, Date end)", "class_method_signature": "SimpleTimePeriod.SimpleTimePeriod(Date start, Date end)", "testcase": false, "constructor": true}, {"identifier": "getStart", "parameters": "()", "modifiers": "public", "return": "Date", "signature": "Date getStart()", "full_signature": "public Date getStart()", "class_method_signature": "SimpleTimePeriod.getStart()", "testcase": false, "constructor": false}, {"identifier": "getStartMillis", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getStartMillis()", "full_signature": "public long getStartMillis()", "class_method_signature": "SimpleTimePeriod.getStartMillis()", "testcase": false, "constructor": false}, {"identifier": "getEnd", "parameters": "()", "modifiers": "public", "return": "Date", "signature": "Date getEnd()", "full_signature": "public Date getEnd()", "class_method_signature": "SimpleTimePeriod.getEnd()", "testcase": false, "constructor": false}, {"identifier": "getEndMillis", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getEndMillis()", "full_signature": "public long getEndMillis()", "class_method_signature": "SimpleTimePeriod.getEndMillis()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "SimpleTimePeriod.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(Object obj)", "modifiers": "public", "return": "int", "signature": "int compareTo(Object obj)", "full_signature": "public int compareTo(Object obj)", "class_method_signature": "SimpleTimePeriod.compareTo(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "SimpleTimePeriod.hashCode()", "testcase": false, "constructor": false}], "file": "source/org/jfree/data/time/SimpleTimePeriod.java"}, "focal_method": {"identifier": "getStart", "parameters": "()", "modifiers": "public", "return": "Date", "body": "public Date getStart() {\n        return new Date(this.start);\n    }", "signature": "Date getStart()", "full_signature": "public Date getStart()", "class_method_signature": "SimpleTimePeriod.getStart()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": "Chart_1_buggy"}}