{"test_class": {"identifier": "HourTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/data/time/junit/HourTests.java"}, "test_case": {"identifier": "testGetLastMillisecondWithCalendar", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testGetLastMillisecondWithCalendar() {\n        Hour h = new Hour(21, 21, 4, 2001);\n        GregorianCalendar calendar = new GregorianCalendar(Locale.GERMANY);\n        calendar.setTimeZone(TimeZone.getTimeZone(\"Europe/Frankfurt\"));\n        assertEquals(987890399999L, h.getLastMillisecond(calendar));\n\n        // try null calendar\n        boolean pass = false;\n        try {\n            h.getLastMillisecond((Calendar) null);\n        }\n        catch (NullPointerException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }", "signature": "void testGetLastMillisecondWithCalendar()", "full_signature": "public void testGetLastMillisecondWithCalendar()", "class_method_signature": "HourTests.testGetLastMillisecondWithCalendar()", "testcase": true, "constructor": false, "invocations": ["setTimeZone", "getTimeZone", "assertEquals", "getLastMillisecond", "getLastMillisecond", "assertTrue"]}, "focal_class": {"identifier": "Hour", "superclass": "extends RegularTimePeriod", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -835471579831937652L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -835471579831937652L", "var_name": "serialVersionUID"}, {"original_string": "public static final int FIRST_HOUR_IN_DAY = 0;", "modifier": "public static final", "type": "int", "declarator": "FIRST_HOUR_IN_DAY = 0", "var_name": "FIRST_HOUR_IN_DAY"}, {"original_string": "public static final int LAST_HOUR_IN_DAY = 23;", "modifier": "public static final", "type": "int", "declarator": "LAST_HOUR_IN_DAY = 23", "var_name": "LAST_HOUR_IN_DAY"}, {"original_string": "private Day day;", "modifier": "private", "type": "Day", "declarator": "day", "var_name": "day"}, {"original_string": "private byte hour;", "modifier": "private", "type": "byte", "declarator": "hour", "var_name": "hour"}, {"original_string": "private long firstMillisecond;", "modifier": "private", "type": "long", "declarator": "firstMillisecond", "var_name": "firstMillisecond"}, {"original_string": "private long lastMillisecond;", "modifier": "private", "type": "long", "declarator": "lastMillisecond", "var_name": "lastMillisecond"}], "methods": [{"identifier": "Hour", "parameters": "()", "modifiers": "public", "return": "", "signature": " Hour()", "full_signature": "public  Hour()", "class_method_signature": "Hour.Hour()", "testcase": false, "constructor": true}, {"identifier": "Hour", "parameters": "(int hour, Day day)", "modifiers": "public", "return": "", "signature": " Hour(int hour, Day day)", "full_signature": "public  Hour(int hour, Day day)", "class_method_signature": "Hour.Hour(int hour, Day day)", "testcase": false, "constructor": true}, {"identifier": "Hour", "parameters": "(int hour, int day, int month, int year)", "modifiers": "public", "return": "", "signature": " Hour(int hour, int day, int month, int year)", "full_signature": "public  Hour(int hour, int day, int month, int year)", "class_method_signature": "Hour.Hour(int hour, int day, int month, int year)", "testcase": false, "constructor": true}, {"identifier": "Hour", "parameters": "(Date time)", "modifiers": "public", "return": "", "signature": " Hour(Date time)", "full_signature": "public  Hour(Date time)", "class_method_signature": "Hour.Hour(Date time)", "testcase": false, "constructor": true}, {"identifier": "Hour", "parameters": "(Date time, TimeZone zone)", "modifiers": "public", "return": "", "signature": " Hour(Date time, TimeZone zone)", "full_signature": "public  Hour(Date time, TimeZone zone)", "class_method_signature": "Hour.Hour(Date time, TimeZone zone)", "testcase": false, "constructor": true}, {"identifier": "getHour", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getHour()", "full_signature": "public int getHour()", "class_method_signature": "Hour.getHour()", "testcase": false, "constructor": false}, {"identifier": "getDay", "parameters": "()", "modifiers": "public", "return": "Day", "signature": "Day getDay()", "full_signature": "public Day getDay()", "class_method_signature": "Hour.getDay()", "testcase": false, "constructor": false}, {"identifier": "getYear", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getYear()", "full_signature": "public int getYear()", "class_method_signature": "Hour.getYear()", "testcase": false, "constructor": false}, {"identifier": "getMonth", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMonth()", "full_signature": "public int getMonth()", "class_method_signature": "Hour.getMonth()", "testcase": false, "constructor": false}, {"identifier": "getDayOfMonth", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getDayOfMonth()", "full_signature": "public int getDayOfMonth()", "class_method_signature": "Hour.getDayOfMonth()", "testcase": false, "constructor": false}, {"identifier": "getFirstMillisecond", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getFirstMillisecond()", "full_signature": "public long getFirstMillisecond()", "class_method_signature": "Hour.getFirstMillisecond()", "testcase": false, "constructor": false}, {"identifier": "getLastMillisecond", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getLastMillisecond()", "full_signature": "public long getLastMillisecond()", "class_method_signature": "Hour.getLastMillisecond()", "testcase": false, "constructor": false}, {"identifier": "peg", "parameters": "(Calendar calendar)", "modifiers": "public", "return": "void", "signature": "void peg(Calendar calendar)", "full_signature": "public void peg(Calendar calendar)", "class_method_signature": "Hour.peg(Calendar calendar)", "testcase": false, "constructor": false}, {"identifier": "previous", "parameters": "()", "modifiers": "public", "return": "RegularTimePeriod", "signature": "RegularTimePeriod previous()", "full_signature": "public RegularTimePeriod previous()", "class_method_signature": "Hour.previous()", "testcase": false, "constructor": false}, {"identifier": "next", "parameters": "()", "modifiers": "public", "return": "RegularTimePeriod", "signature": "RegularTimePeriod next()", "full_signature": "public RegularTimePeriod next()", "class_method_signature": "Hour.next()", "testcase": false, "constructor": false}, {"identifier": "getSerialIndex", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getSerialIndex()", "full_signature": "public long getSerialIndex()", "class_method_signature": "Hour.getSerialIndex()", "testcase": false, "constructor": false}, {"identifier": "getFirstMillisecond", "parameters": "(Calendar calendar)", "modifiers": "public", "return": "long", "signature": "long getFirstMillisecond(Calendar calendar)", "full_signature": "public long getFirstMillisecond(Calendar calendar)", "class_method_signature": "Hour.getFirstMillisecond(Calendar calendar)", "testcase": false, "constructor": false}, {"identifier": "getLastMillisecond", "parameters": "(Calendar calendar)", "modifiers": "public", "return": "long", "signature": "long getLastMillisecond(Calendar calendar)", "full_signature": "public long getLastMillisecond(Calendar calendar)", "class_method_signature": "Hour.getLastMillisecond(Calendar calendar)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "Hour.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "Hour.toString()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "Hour.hashCode()", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(Object o1)", "modifiers": "public", "return": "int", "signature": "int compareTo(Object o1)", "full_signature": "public int compareTo(Object o1)", "class_method_signature": "Hour.compareTo(Object o1)", "testcase": false, "constructor": false}, {"identifier": "parseHour", "parameters": "(String s)", "modifiers": "public static", "return": "Hour", "signature": "Hour parseHour(String s)", "full_signature": "public static Hour parseHour(String s)", "class_method_signature": "Hour.parseHour(String s)", "testcase": false, "constructor": false}], "file": "source/org/jfree/data/time/Hour.java"}, "focal_method": {"identifier": "getLastMillisecond", "parameters": "()", "modifiers": "public", "return": "long", "body": "public long getLastMillisecond() {\n        return this.lastMillisecond;\n    }", "signature": "long getLastMillisecond()", "full_signature": "public long getLastMillisecond()", "class_method_signature": "Hour.getLastMillisecond()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": "Chart_1_buggy"}}