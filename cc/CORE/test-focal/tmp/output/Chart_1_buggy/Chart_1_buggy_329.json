{"test_class": {"identifier": "GrayPaintScaleTests", "superclass": "extends TestCase", "interfaces": "", "fields": [{"original_string": "private static final double EPSILON = 0.000000001;", "modifier": "private static final", "type": "double", "declarator": "EPSILON = 0.000000001", "var_name": "EPSILON"}], "file": "tests/org/jfree/chart/renderer/junit/GrayPaintScaleTests.java"}, "test_case": {"identifier": "testGetPaint", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testGetPaint() {\n        GrayPaintScale gps = new GrayPaintScale();\n        Color c = (Color) gps.getPaint(0.0);\n        assertTrue(c.equals(Color.black));\n        c = (Color) gps.getPaint(1.0);\n        assertTrue(c.equals(Color.white));\n\n        // check lookup values that are outside the bounds - see bug report\n        // 1767315\n        c = (Color) gps.getPaint(-0.5);\n        assertTrue(c.equals(Color.black));\n        c = (Color) gps.getPaint(1.5);\n        assertTrue(c.equals(Color.white));\n    }", "signature": "void testGetPaint()", "full_signature": "public void testGetPaint()", "class_method_signature": "GrayPaintScaleTests.testGetPaint()", "testcase": true, "constructor": false, "invocations": ["getPaint", "assertTrue", "equals", "getPaint", "assertTrue", "equals", "getPaint", "assertTrue", "equals", "getPaint", "assertTrue", "equals"]}, "focal_class": {"identifier": "GrayPaintScale", "superclass": "", "interfaces": "implements PaintScale, PublicCloneable, Serializable", "fields": [{"original_string": "private double lowerBound;", "modifier": "private", "type": "double", "declarator": "lowerBound", "var_name": "lowerBound"}, {"original_string": "private double upperBound;", "modifier": "private", "type": "double", "declarator": "upperBound", "var_name": "upperBound"}, {"original_string": "private int alpha;", "modifier": "private", "type": "int", "declarator": "alpha", "var_name": "alpha"}], "methods": [{"identifier": "GrayPaintScale", "parameters": "()", "modifiers": "public", "return": "", "signature": " GrayPaintScale()", "full_signature": "public  GrayPaintScale()", "class_method_signature": "GrayPaintScale.GrayPaintScale()", "testcase": false, "constructor": true}, {"identifier": "GrayPaintScale", "parameters": "(double lowerBound, double upperBound)", "modifiers": "public", "return": "", "signature": " GrayPaintScale(double lowerBound, double upperBound)", "full_signature": "public  GrayPaintScale(double lowerBound, double upperBound)", "class_method_signature": "GrayPaintScale.GrayPaintScale(double lowerBound, double upperBound)", "testcase": false, "constructor": true}, {"identifier": "GrayPaintScale", "parameters": "(double lowerBound, double upperBound, int alpha)", "modifiers": "public", "return": "", "signature": " GrayPaintScale(double lowerBound, double upperBound, int alpha)", "full_signature": "public  GrayPaintScale(double lowerBound, double upperBound, int alpha)", "class_method_signature": "GrayPaintScale.GrayPaintScale(double lowerBound, double upperBound, int alpha)", "testcase": false, "constructor": true}, {"identifier": "getLowerBound", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getLowerBound()", "full_signature": "public double getLowerBound()", "class_method_signature": "GrayPaintScale.getLowerBound()", "testcase": false, "constructor": false}, {"identifier": "getUpperBound", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getUpperBound()", "full_signature": "public double getUpperBound()", "class_method_signature": "GrayPaintScale.getUpperBound()", "testcase": false, "constructor": false}, {"identifier": "getAlpha", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getAlpha()", "full_signature": "public int getAlpha()", "class_method_signature": "GrayPaintScale.getAlpha()", "testcase": false, "constructor": false}, {"identifier": "getPaint", "parameters": "(double value)", "modifiers": "public", "return": "Paint", "signature": "Paint getPaint(double value)", "full_signature": "public Paint getPaint(double value)", "class_method_signature": "GrayPaintScale.getPaint(double value)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "GrayPaintScale.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "GrayPaintScale.hashCode()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object clone()", "full_signature": "public Object clone()", "class_method_signature": "GrayPaintScale.clone()", "testcase": false, "constructor": false}], "file": "source/org/jfree/chart/renderer/GrayPaintScale.java"}, "focal_method": {"identifier": "getPaint", "parameters": "(double value)", "modifiers": "public", "return": "Paint", "body": "public Paint getPaint(double value) {\n        double v = Math.max(value, this.lowerBound);\n        v = Math.min(v, this.upperBound);\n        int g = (int) ((v - this.lowerBound) / (this.upperBound\n                - this.lowerBound) * 255.0);\n        return new Color(g, g, g, this.alpha);\n    }", "signature": "Paint getPaint(double value)", "full_signature": "public Paint getPaint(double value)", "class_method_signature": "GrayPaintScale.getPaint(double value)", "testcase": false, "constructor": false, "invocations": ["max", "min"]}, "repository": {"repo_id": "Chart_1_buggy"}}