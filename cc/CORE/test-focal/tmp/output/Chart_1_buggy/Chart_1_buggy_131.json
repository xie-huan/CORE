{"test_class": {"identifier": "ImageTitleTests", "superclass": "extends TestCase", "interfaces": "", "fields": [{"original_string": "private static final double EPSILON = 0.00000001;", "modifier": "private static final", "type": "double", "declarator": "EPSILON = 0.00000001", "var_name": "EPSILON"}], "file": "tests/org/jfree/chart/title/junit/ImageTitleTests.java"}, "test_case": {"identifier": "testArrangeNN", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testArrangeNN() {\n        BufferedImage image = new BufferedImage(100, 100,\n                BufferedImage.TYPE_INT_RGB);\n        Graphics2D g2 = image.createGraphics();\n        ImageTitle t = new ImageTitle(JFreeChart.INFO.getLogo());\n        Size2D s = t.arrange(g2);\n        assertEquals(102.0, s.getWidth(), EPSILON);\n        assertEquals(102.0, s.getHeight(), EPSILON);\n\n        t.setPadding(1.0, 2.0, 3.0, 4.0);\n        s = t.arrange(g2);\n        assertEquals(106.0, s.getWidth(), EPSILON);\n        assertEquals(104.0, s.getHeight(), EPSILON);\n\n        t.setMargin(5.0, 6.0, 7.0, 8.0);\n        s = t.arrange(g2);\n        assertEquals(120.0, s.getWidth(), EPSILON);\n        assertEquals(116.0, s.getHeight(), EPSILON);\n    }", "signature": "void testArrangeNN()", "full_signature": "public void testArrangeNN()", "class_method_signature": "ImageTitleTests.testArrangeNN()", "testcase": true, "constructor": false, "invocations": ["createGraphics", "getLogo", "arrange", "assertEquals", "getWidth", "assertEquals", "getHeight", "setPadding", "arrange", "assertEquals", "getWidth", "assertEquals", "getHeight", "setMargin", "arrange", "assertEquals", "getWidth", "assertEquals", "getHeight"]}, "focal_class": {"identifier": "ImageTitle", "superclass": "extends Title", "interfaces": "", "fields": [{"original_string": "private Image image;", "modifier": "private", "type": "Image", "declarator": "image", "var_name": "image"}], "methods": [{"identifier": "ImageTitle", "parameters": "(Image image)", "modifiers": "public", "return": "", "signature": " ImageTitle(Image image)", "full_signature": "public  ImageTitle(Image image)", "class_method_signature": "ImageTitle.ImageTitle(Image image)", "testcase": false, "constructor": true}, {"identifier": "ImageTitle", "parameters": "(Image image, RectangleEdge position,\n                      HorizontalAlignment horizontalAlignment,\n                      VerticalAlignment verticalAlignment)", "modifiers": "public", "return": "", "signature": " ImageTitle(Image image, RectangleEdge position,\n                      HorizontalAlignment horizontalAlignment,\n                      VerticalAlignment verticalAlignment)", "full_signature": "public  ImageTitle(Image image, RectangleEdge position,\n                      HorizontalAlignment horizontalAlignment,\n                      VerticalAlignment verticalAlignment)", "class_method_signature": "ImageTitle.ImageTitle(Image image, RectangleEdge position,\n                      HorizontalAlignment horizontalAlignment,\n                      VerticalAlignment verticalAlignment)", "testcase": false, "constructor": true}, {"identifier": "ImageTitle", "parameters": "(Image image, int height, int width,\n                      RectangleEdge position,\n                      HorizontalAlignment horizontalAlignment,\n                      VerticalAlignment verticalAlignment,\n                      RectangleInsets padding)", "modifiers": "public", "return": "", "signature": " ImageTitle(Image image, int height, int width,\n                      RectangleEdge position,\n                      HorizontalAlignment horizontalAlignment,\n                      VerticalAlignment verticalAlignment,\n                      RectangleInsets padding)", "full_signature": "public  ImageTitle(Image image, int height, int width,\n                      RectangleEdge position,\n                      HorizontalAlignment horizontalAlignment,\n                      VerticalAlignment verticalAlignment,\n                      RectangleInsets padding)", "class_method_signature": "ImageTitle.ImageTitle(Image image, int height, int width,\n                      RectangleEdge position,\n                      HorizontalAlignment horizontalAlignment,\n                      VerticalAlignment verticalAlignment,\n                      RectangleInsets padding)", "testcase": false, "constructor": true}, {"identifier": "getImage", "parameters": "()", "modifiers": "public", "return": "Image", "signature": "Image getImage()", "full_signature": "public Image getImage()", "class_method_signature": "ImageTitle.getImage()", "testcase": false, "constructor": false}, {"identifier": "setImage", "parameters": "(Image image)", "modifiers": "public", "return": "void", "signature": "void setImage(Image image)", "full_signature": "public void setImage(Image image)", "class_method_signature": "ImageTitle.setImage(Image image)", "testcase": false, "constructor": false}, {"identifier": "arrange", "parameters": "(Graphics2D g2, RectangleConstraint constraint)", "modifiers": "public", "return": "Size2D", "signature": "Size2D arrange(Graphics2D g2, RectangleConstraint constraint)", "full_signature": "public Size2D arrange(Graphics2D g2, RectangleConstraint constraint)", "class_method_signature": "ImageTitle.arrange(Graphics2D g2, RectangleConstraint constraint)", "testcase": false, "constructor": false}, {"identifier": "draw", "parameters": "(Graphics2D g2, Rectangle2D area)", "modifiers": "public", "return": "void", "signature": "void draw(Graphics2D g2, Rectangle2D area)", "full_signature": "public void draw(Graphics2D g2, Rectangle2D area)", "class_method_signature": "ImageTitle.draw(Graphics2D g2, Rectangle2D area)", "testcase": false, "constructor": false}, {"identifier": "drawHorizontal", "parameters": "(Graphics2D g2, Rectangle2D chartArea)", "modifiers": "protected", "return": "Size2D", "signature": "Size2D drawHorizontal(Graphics2D g2, Rectangle2D chartArea)", "full_signature": "protected Size2D drawHorizontal(Graphics2D g2, Rectangle2D chartArea)", "class_method_signature": "ImageTitle.drawHorizontal(Graphics2D g2, Rectangle2D chartArea)", "testcase": false, "constructor": false}, {"identifier": "drawVertical", "parameters": "(Graphics2D g2, Rectangle2D chartArea)", "modifiers": "protected", "return": "Size2D", "signature": "Size2D drawVertical(Graphics2D g2, Rectangle2D chartArea)", "full_signature": "protected Size2D drawVertical(Graphics2D g2, Rectangle2D chartArea)", "class_method_signature": "ImageTitle.drawVertical(Graphics2D g2, Rectangle2D chartArea)", "testcase": false, "constructor": false}, {"identifier": "draw", "parameters": "(Graphics2D g2, Rectangle2D area, Object params)", "modifiers": "public", "return": "Object", "signature": "Object draw(Graphics2D g2, Rectangle2D area, Object params)", "full_signature": "public Object draw(Graphics2D g2, Rectangle2D area, Object params)", "class_method_signature": "ImageTitle.draw(Graphics2D g2, Rectangle2D area, Object params)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "ImageTitle.equals(Object obj)", "testcase": false, "constructor": false}], "file": "source/org/jfree/chart/title/ImageTitle.java"}, "focal_method": {"identifier": "arrange", "parameters": "(Graphics2D g2, RectangleConstraint constraint)", "modifiers": "public", "return": "Size2D", "body": "public Size2D arrange(Graphics2D g2, RectangleConstraint constraint) {\n        Size2D s = new Size2D(this.image.getWidth(null),\n                this.image.getHeight(null));\n        return new Size2D(calculateTotalWidth(s.getWidth()),\n                calculateTotalHeight(s.getHeight()));\n    }", "signature": "Size2D arrange(Graphics2D g2, RectangleConstraint constraint)", "full_signature": "public Size2D arrange(Graphics2D g2, RectangleConstraint constraint)", "class_method_signature": "ImageTitle.arrange(Graphics2D g2, RectangleConstraint constraint)", "testcase": false, "constructor": false, "invocations": ["getWidth", "getHeight", "calculateTotalWidth", "getWidth", "calculateTotalHeight", "getHeight"]}, "repository": {"repo_id": "Chart_1_buggy"}}