{"test_class": {"identifier": "CategoryPlotTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/chart/plot/junit/CategoryPlotTests.java"}, "test_case": {"identifier": "testAddRangeMarker", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testAddRangeMarker() {\n        CategoryPlot plot = new CategoryPlot();\n        Marker m = new ValueMarker(1.0);\n        plot.addRangeMarker(m);\n        List listeners = Arrays.asList(m.getListeners(\n                MarkerChangeListener.class));\n        assertTrue(listeners.contains(plot));\n        plot.clearRangeMarkers();\n        listeners = Arrays.asList(m.getListeners(MarkerChangeListener.class));\n        assertFalse(listeners.contains(plot));\n    }", "signature": "void testAddRangeMarker()", "full_signature": "public void testAddRangeMarker()", "class_method_signature": "CategoryPlotTests.testAddRangeMarker()", "testcase": true, "constructor": false, "invocations": ["addRangeMarker", "asList", "getListeners", "assertTrue", "contains", "clearRangeMarkers", "asList", "getListeners", "assertFalse", "contains"]}, "focal_class": {"identifier": "CategoryPlot", "superclass": "extends Plot", "interfaces": "implements ValueAxisPlot, Pannable,\n        Selectable, Zoomable, AnnotationChangeListener, RendererChangeListener,\n        Cloneable, PublicCloneable, Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -3537691700434728188L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -3537691700434728188L", "var_name": "serialVersionUID"}, {"original_string": "public static final boolean DEFAULT_DOMAIN_GRIDLINES_VISIBLE = false;", "modifier": "public static final", "type": "boolean", "declarator": "DEFAULT_DOMAIN_GRIDLINES_VISIBLE = false", "var_name": "DEFAULT_DOMAIN_GRIDLINES_VISIBLE"}, {"original_string": "public static final boolean DEFAULT_RANGE_GRIDLINES_VISIBLE = true;", "modifier": "public static final", "type": "boolean", "declarator": "DEFAULT_RANGE_GRIDLINES_VISIBLE = true", "var_name": "DEFAULT_RANGE_GRIDLINES_VISIBLE"}, {"original_string": "public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f,\n            BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]\n            {2.0f, 2.0f}, 0.0f);", "modifier": "public static final", "type": "Stroke", "declarator": "DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f,\n            BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]\n            {2.0f, 2.0f}, 0.0f)", "var_name": "DEFAULT_GRIDLINE_STROKE"}, {"original_string": "public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE;", "modifier": "public static final", "type": "Paint", "declarator": "DEFAULT_GRIDLINE_PAINT = Color.WHITE", "var_name": "DEFAULT_GRIDLINE_PAINT"}, {"original_string": "public static final Font DEFAULT_VALUE_LABEL_FONT = new Font(\"Tahoma\",\n            Font.PLAIN, 10);", "modifier": "public static final", "type": "Font", "declarator": "DEFAULT_VALUE_LABEL_FONT = new Font(\"Tahoma\",\n            Font.PLAIN, 10)", "var_name": "DEFAULT_VALUE_LABEL_FONT"}, {"original_string": "public static final boolean DEFAULT_CROSSHAIR_VISIBLE = false;", "modifier": "public static final", "type": "boolean", "declarator": "DEFAULT_CROSSHAIR_VISIBLE = false", "var_name": "DEFAULT_CROSSHAIR_VISIBLE"}, {"original_string": "public static final Stroke DEFAULT_CROSSHAIR_STROKE\n            = DEFAULT_GRIDLINE_STROKE;", "modifier": "public static final", "type": "Stroke", "declarator": "DEFAULT_CROSSHAIR_STROKE\n            = DEFAULT_GRIDLINE_STROKE", "var_name": "DEFAULT_CROSSHAIR_STROKE"}, {"original_string": "public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;", "modifier": "public static final", "type": "Paint", "declarator": "DEFAULT_CROSSHAIR_PAINT = Color.blue", "var_name": "DEFAULT_CROSSHAIR_PAINT"}, {"original_string": "protected static ResourceBundle localizationResources\n            = ResourceBundleWrapper.getBundle(\n                \"org.jfree.chart.plot.LocalizationBundle\");", "modifier": "protected static", "type": "ResourceBundle", "declarator": "localizationResources\n            = ResourceBundleWrapper.getBundle(\n                \"org.jfree.chart.plot.LocalizationBundle\")", "var_name": "localizationResources"}, {"original_string": "private PlotOrientation orientation;", "modifier": "private", "type": "PlotOrientation", "declarator": "orientation", "var_name": "orientation"}, {"original_string": "private RectangleInsets axisOffset;", "modifier": "private", "type": "RectangleInsets", "declarator": "axisOffset", "var_name": "axisOffset"}, {"original_string": "private ObjectList domainAxes;", "modifier": "private", "type": "ObjectList", "declarator": "domainAxes", "var_name": "domainAxes"}, {"original_string": "private ObjectList domainAxisLocations;", "modifier": "private", "type": "ObjectList", "declarator": "domainAxisLocations", "var_name": "domainAxisLocations"}, {"original_string": "private boolean drawSharedDomainAxis;", "modifier": "private", "type": "boolean", "declarator": "drawSharedDomainAxis", "var_name": "drawSharedDomainAxis"}, {"original_string": "private ObjectList rangeAxes;", "modifier": "private", "type": "ObjectList", "declarator": "rangeAxes", "var_name": "rangeAxes"}, {"original_string": "private ObjectList rangeAxisLocations;", "modifier": "private", "type": "ObjectList", "declarator": "rangeAxisLocations", "var_name": "rangeAxisLocations"}, {"original_string": "private ObjectList datasets;", "modifier": "private", "type": "ObjectList", "declarator": "datasets", "var_name": "datasets"}, {"original_string": "private TreeMap datasetToDomainAxesMap;", "modifier": "private", "type": "TreeMap", "declarator": "datasetToDomainAxesMap", "var_name": "datasetToDomainAxesMap"}, {"original_string": "private TreeMap datasetToRangeAxesMap;", "modifier": "private", "type": "TreeMap", "declarator": "datasetToRangeAxesMap", "var_name": "datasetToRangeAxesMap"}, {"original_string": "private ObjectList renderers;", "modifier": "private", "type": "ObjectList", "declarator": "renderers", "var_name": "renderers"}, {"original_string": "private DatasetRenderingOrder renderingOrder\n            = DatasetRenderingOrder.REVERSE;", "modifier": "private", "type": "DatasetRenderingOrder", "declarator": "renderingOrder\n            = DatasetRenderingOrder.REVERSE", "var_name": "renderingOrder"}, {"original_string": "private SortOrder columnRenderingOrder = SortOrder.ASCENDING;", "modifier": "private", "type": "SortOrder", "declarator": "columnRenderingOrder = SortOrder.ASCENDING", "var_name": "columnRenderingOrder"}, {"original_string": "private SortOrder rowRenderingOrder = SortOrder.ASCENDING;", "modifier": "private", "type": "SortOrder", "declarator": "rowRenderingOrder = SortOrder.ASCENDING", "var_name": "rowRenderingOrder"}, {"original_string": "private boolean domainGridlinesVisible;", "modifier": "private", "type": "boolean", "declarator": "domainGridlinesVisible", "var_name": "domainGridlinesVisible"}, {"original_string": "private CategoryAnchor domainGridlinePosition;", "modifier": "private", "type": "CategoryAnchor", "declarator": "domainGridlinePosition", "var_name": "domainGridlinePosition"}, {"original_string": "private transient Stroke domainGridlineStroke;", "modifier": "private transient", "type": "Stroke", "declarator": "domainGridlineStroke", "var_name": "domainGridlineStroke"}, {"original_string": "private transient Paint domainGridlinePaint;", "modifier": "private transient", "type": "Paint", "declarator": "domainGridlinePaint", "var_name": "domainGridlinePaint"}, {"original_string": "private boolean rangeZeroBaselineVisible;", "modifier": "private", "type": "boolean", "declarator": "rangeZeroBaselineVisible", "var_name": "rangeZeroBaselineVisible"}, {"original_string": "private transient Stroke rangeZeroBaselineStroke;", "modifier": "private transient", "type": "Stroke", "declarator": "rangeZeroBaselineStroke", "var_name": "rangeZeroBaselineStroke"}, {"original_string": "private transient Paint rangeZeroBaselinePaint;", "modifier": "private transient", "type": "Paint", "declarator": "rangeZeroBaselinePaint", "var_name": "rangeZeroBaselinePaint"}, {"original_string": "private boolean rangeGridlinesVisible;", "modifier": "private", "type": "boolean", "declarator": "rangeGridlinesVisible", "var_name": "rangeGridlinesVisible"}, {"original_string": "private transient Stroke rangeGridlineStroke;", "modifier": "private transient", "type": "Stroke", "declarator": "rangeGridlineStroke", "var_name": "rangeGridlineStroke"}, {"original_string": "private transient Paint rangeGridlinePaint;", "modifier": "private transient", "type": "Paint", "declarator": "rangeGridlinePaint", "var_name": "rangeGridlinePaint"}, {"original_string": "private boolean rangeMinorGridlinesVisible;", "modifier": "private", "type": "boolean", "declarator": "rangeMinorGridlinesVisible", "var_name": "rangeMinorGridlinesVisible"}, {"original_string": "private transient Stroke rangeMinorGridlineStroke;", "modifier": "private transient", "type": "Stroke", "declarator": "rangeMinorGridlineStroke", "var_name": "rangeMinorGridlineStroke"}, {"original_string": "private transient Paint rangeMinorGridlinePaint;", "modifier": "private transient", "type": "Paint", "declarator": "rangeMinorGridlinePaint", "var_name": "rangeMinorGridlinePaint"}, {"original_string": "private double anchorValue;", "modifier": "private", "type": "double", "declarator": "anchorValue", "var_name": "anchorValue"}, {"original_string": "private int crosshairDatasetIndex;", "modifier": "private", "type": "int", "declarator": "crosshairDatasetIndex", "var_name": "crosshairDatasetIndex"}, {"original_string": "private boolean domainCrosshairVisible;", "modifier": "private", "type": "boolean", "declarator": "domainCrosshairVisible", "var_name": "domainCrosshairVisible"}, {"original_string": "private Comparable domainCrosshairRowKey;", "modifier": "private", "type": "Comparable", "declarator": "domainCrosshairRowKey", "var_name": "domainCrosshairRowKey"}, {"original_string": "private Comparable domainCrosshairColumnKey;", "modifier": "private", "type": "Comparable", "declarator": "domainCrosshairColumnKey", "var_name": "domainCrosshairColumnKey"}, {"original_string": "private transient Stroke domainCrosshairStroke;", "modifier": "private transient", "type": "Stroke", "declarator": "domainCrosshairStroke", "var_name": "domainCrosshairStroke"}, {"original_string": "private transient Paint domainCrosshairPaint;", "modifier": "private transient", "type": "Paint", "declarator": "domainCrosshairPaint", "var_name": "domainCrosshairPaint"}, {"original_string": "private boolean rangeCrosshairVisible;", "modifier": "private", "type": "boolean", "declarator": "rangeCrosshairVisible", "var_name": "rangeCrosshairVisible"}, {"original_string": "private double rangeCrosshairValue;", "modifier": "private", "type": "double", "declarator": "rangeCrosshairValue", "var_name": "rangeCrosshairValue"}, {"original_string": "private transient Stroke rangeCrosshairStroke;", "modifier": "private transient", "type": "Stroke", "declarator": "rangeCrosshairStroke", "var_name": "rangeCrosshairStroke"}, {"original_string": "private transient Paint rangeCrosshairPaint;", "modifier": "private transient", "type": "Paint", "declarator": "rangeCrosshairPaint", "var_name": "rangeCrosshairPaint"}, {"original_string": "private boolean rangeCrosshairLockedOnData = true;", "modifier": "private", "type": "boolean", "declarator": "rangeCrosshairLockedOnData = true", "var_name": "rangeCrosshairLockedOnData"}, {"original_string": "private Map foregroundDomainMarkers;", "modifier": "private", "type": "Map", "declarator": "foregroundDomainMarkers", "var_name": "foregroundDomainMarkers"}, {"original_string": "private Map backgroundDomainMarkers;", "modifier": "private", "type": "Map", "declarator": "backgroundDomainMarkers", "var_name": "backgroundDomainMarkers"}, {"original_string": "private Map foregroundRangeMarkers;", "modifier": "private", "type": "Map", "declarator": "foregroundRangeMarkers", "var_name": "foregroundRangeMarkers"}, {"original_string": "private Map backgroundRangeMarkers;", "modifier": "private", "type": "Map", "declarator": "backgroundRangeMarkers", "var_name": "backgroundRangeMarkers"}, {"original_string": "private List annotations;", "modifier": "private", "type": "List", "declarator": "annotations", "var_name": "annotations"}, {"original_string": "private int weight;", "modifier": "private", "type": "int", "declarator": "weight", "var_name": "weight"}, {"original_string": "private AxisSpace fixedDomainAxisSpace;", "modifier": "private", "type": "AxisSpace", "declarator": "fixedDomainAxisSpace", "var_name": "fixedDomainAxisSpace"}, {"original_string": "private AxisSpace fixedRangeAxisSpace;", "modifier": "private", "type": "AxisSpace", "declarator": "fixedRangeAxisSpace", "var_name": "fixedRangeAxisSpace"}, {"original_string": "private LegendItemCollection fixedLegendItems;", "modifier": "private", "type": "LegendItemCollection", "declarator": "fixedLegendItems", "var_name": "fixedLegendItems"}, {"original_string": "private boolean rangePannable;", "modifier": "private", "type": "boolean", "declarator": "rangePannable", "var_name": "rangePannable"}, {"original_string": "private ShadowGenerator shadowGenerator;", "modifier": "private", "type": "ShadowGenerator", "declarator": "shadowGenerator", "var_name": "shadowGenerator"}], "methods": [{"identifier": "CategoryPlot", "parameters": "()", "modifiers": "public", "return": "", "signature": " CategoryPlot()", "full_signature": "public  CategoryPlot()", "class_method_signature": "CategoryPlot.CategoryPlot()", "testcase": false, "constructor": true}, {"identifier": "CategoryPlot", "parameters": "(CategoryDataset dataset,\n                        CategoryAxis domainAxis,\n                        ValueAxis rangeAxis,\n                        CategoryItemRenderer renderer)", "modifiers": "public", "return": "", "signature": " CategoryPlot(CategoryDataset dataset,\n                        CategoryAxis domainAxis,\n                        ValueAxis rangeAxis,\n                        CategoryItemRenderer renderer)", "full_signature": "public  CategoryPlot(CategoryDataset dataset,\n                        CategoryAxis domainAxis,\n                        ValueAxis rangeAxis,\n                        CategoryItemRenderer renderer)", "class_method_signature": "CategoryPlot.CategoryPlot(CategoryDataset dataset,\n                        CategoryAxis domainAxis,\n                        ValueAxis rangeAxis,\n                        CategoryItemRenderer renderer)", "testcase": false, "constructor": true}, {"identifier": "getPlotType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPlotType()", "full_signature": "public String getPlotType()", "class_method_signature": "CategoryPlot.getPlotType()", "testcase": false, "constructor": false}, {"identifier": "getOrientation", "parameters": "()", "modifiers": "public", "return": "PlotOrientation", "signature": "PlotOrientation getOrientation()", "full_signature": "public PlotOrientation getOrientation()", "class_method_signature": "CategoryPlot.getOrientation()", "testcase": false, "constructor": false}, {"identifier": "setOrientation", "parameters": "(PlotOrientation orientation)", "modifiers": "public", "return": "void", "signature": "void setOrientation(PlotOrientation orientation)", "full_signature": "public void setOrientation(PlotOrientation orientation)", "class_method_signature": "CategoryPlot.setOrientation(PlotOrientation orientation)", "testcase": false, "constructor": false}, {"identifier": "getAxisOffset", "parameters": "()", "modifiers": "public", "return": "RectangleInsets", "signature": "RectangleInsets getAxisOffset()", "full_signature": "public RectangleInsets getAxisOffset()", "class_method_signature": "CategoryPlot.getAxisOffset()", "testcase": false, "constructor": false}, {"identifier": "setAxisOffset", "parameters": "(RectangleInsets offset)", "modifiers": "public", "return": "void", "signature": "void setAxisOffset(RectangleInsets offset)", "full_signature": "public void setAxisOffset(RectangleInsets offset)", "class_method_signature": "CategoryPlot.setAxisOffset(RectangleInsets offset)", "testcase": false, "constructor": false}, {"identifier": "getDomainAxis", "parameters": "()", "modifiers": "public", "return": "CategoryAxis", "signature": "CategoryAxis getDomainAxis()", "full_signature": "public CategoryAxis getDomainAxis()", "class_method_signature": "CategoryPlot.getDomainAxis()", "testcase": false, "constructor": false}, {"identifier": "getDomainAxis", "parameters": "(int index)", "modifiers": "public", "return": "CategoryAxis", "signature": "CategoryAxis getDomainAxis(int index)", "full_signature": "public CategoryAxis getDomainAxis(int index)", "class_method_signature": "CategoryPlot.getDomainAxis(int index)", "testcase": false, "constructor": false}, {"identifier": "setDomainAxis", "parameters": "(CategoryAxis axis)", "modifiers": "public", "return": "void", "signature": "void setDomainAxis(CategoryAxis axis)", "full_signature": "public void setDomainAxis(CategoryAxis axis)", "class_method_signature": "CategoryPlot.setDomainAxis(CategoryAxis axis)", "testcase": false, "constructor": false}, {"identifier": "setDomainAxis", "parameters": "(int index, CategoryAxis axis)", "modifiers": "public", "return": "void", "signature": "void setDomainAxis(int index, CategoryAxis axis)", "full_signature": "public void setDomainAxis(int index, CategoryAxis axis)", "class_method_signature": "CategoryPlot.setDomainAxis(int index, CategoryAxis axis)", "testcase": false, "constructor": false}, {"identifier": "setDomainAxis", "parameters": "(int index, CategoryAxis axis, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setDomainAxis(int index, CategoryAxis axis, boolean notify)", "full_signature": "public void setDomainAxis(int index, CategoryAxis axis, boolean notify)", "class_method_signature": "CategoryPlot.setDomainAxis(int index, CategoryAxis axis, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "setDomainAxes", "parameters": "(CategoryAxis[] axes)", "modifiers": "public", "return": "void", "signature": "void setDomainAxes(CategoryAxis[] axes)", "full_signature": "public void setDomainAxes(CategoryAxis[] axes)", "class_method_signature": "CategoryPlot.setDomainAxes(CategoryAxis[] axes)", "testcase": false, "constructor": false}, {"identifier": "getDomainAxisIndex", "parameters": "(CategoryAxis axis)", "modifiers": "public", "return": "int", "signature": "int getDomainAxisIndex(CategoryAxis axis)", "full_signature": "public int getDomainAxisIndex(CategoryAxis axis)", "class_method_signature": "CategoryPlot.getDomainAxisIndex(CategoryAxis axis)", "testcase": false, "constructor": false}, {"identifier": "getDomainAxisLocation", "parameters": "()", "modifiers": "public", "return": "AxisLocation", "signature": "AxisLocation getDomainAxisLocation()", "full_signature": "public AxisLocation getDomainAxisLocation()", "class_method_signature": "CategoryPlot.getDomainAxisLocation()", "testcase": false, "constructor": false}, {"identifier": "getDomainAxisLocation", "parameters": "(int index)", "modifiers": "public", "return": "AxisLocation", "signature": "AxisLocation getDomainAxisLocation(int index)", "full_signature": "public AxisLocation getDomainAxisLocation(int index)", "class_method_signature": "CategoryPlot.getDomainAxisLocation(int index)", "testcase": false, "constructor": false}, {"identifier": "setDomainAxisLocation", "parameters": "(AxisLocation location)", "modifiers": "public", "return": "void", "signature": "void setDomainAxisLocation(AxisLocation location)", "full_signature": "public void setDomainAxisLocation(AxisLocation location)", "class_method_signature": "CategoryPlot.setDomainAxisLocation(AxisLocation location)", "testcase": false, "constructor": false}, {"identifier": "setDomainAxisLocation", "parameters": "(AxisLocation location, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setDomainAxisLocation(AxisLocation location, boolean notify)", "full_signature": "public void setDomainAxisLocation(AxisLocation location, boolean notify)", "class_method_signature": "CategoryPlot.setDomainAxisLocation(AxisLocation location, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "setDomainAxisLocation", "parameters": "(int index, AxisLocation location)", "modifiers": "public", "return": "void", "signature": "void setDomainAxisLocation(int index, AxisLocation location)", "full_signature": "public void setDomainAxisLocation(int index, AxisLocation location)", "class_method_signature": "CategoryPlot.setDomainAxisLocation(int index, AxisLocation location)", "testcase": false, "constructor": false}, {"identifier": "setDomainAxisLocation", "parameters": "(int index, AxisLocation location,\n            boolean notify)", "modifiers": "public", "return": "void", "signature": "void setDomainAxisLocation(int index, AxisLocation location,\n            boolean notify)", "full_signature": "public void setDomainAxisLocation(int index, AxisLocation location,\n            boolean notify)", "class_method_signature": "CategoryPlot.setDomainAxisLocation(int index, AxisLocation location,\n            boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getDomainAxisEdge", "parameters": "()", "modifiers": "public", "return": "RectangleEdge", "signature": "RectangleEdge getDomainAxisEdge()", "full_signature": "public RectangleEdge getDomainAxisEdge()", "class_method_signature": "CategoryPlot.getDomainAxisEdge()", "testcase": false, "constructor": false}, {"identifier": "getDomainAxisEdge", "parameters": "(int index)", "modifiers": "public", "return": "RectangleEdge", "signature": "RectangleEdge getDomainAxisEdge(int index)", "full_signature": "public RectangleEdge getDomainAxisEdge(int index)", "class_method_signature": "CategoryPlot.getDomainAxisEdge(int index)", "testcase": false, "constructor": false}, {"identifier": "getDomainAxisCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getDomainAxisCount()", "full_signature": "public int getDomainAxisCount()", "class_method_signature": "CategoryPlot.getDomainAxisCount()", "testcase": false, "constructor": false}, {"identifier": "clearDomainAxes", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearDomainAxes()", "full_signature": "public void clearDomainAxes()", "class_method_signature": "CategoryPlot.clearDomainAxes()", "testcase": false, "constructor": false}, {"identifier": "configureDomainAxes", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void configureDomainAxes()", "full_signature": "public void configureDomainAxes()", "class_method_signature": "CategoryPlot.configureDomainAxes()", "testcase": false, "constructor": false}, {"identifier": "getRangeAxis", "parameters": "()", "modifiers": "public", "return": "ValueAxis", "signature": "ValueAxis getRangeAxis()", "full_signature": "public ValueAxis getRangeAxis()", "class_method_signature": "CategoryPlot.getRangeAxis()", "testcase": false, "constructor": false}, {"identifier": "getRangeAxis", "parameters": "(int index)", "modifiers": "public", "return": "ValueAxis", "signature": "ValueAxis getRangeAxis(int index)", "full_signature": "public ValueAxis getRangeAxis(int index)", "class_method_signature": "CategoryPlot.getRangeAxis(int index)", "testcase": false, "constructor": false}, {"identifier": "setRangeAxis", "parameters": "(ValueAxis axis)", "modifiers": "public", "return": "void", "signature": "void setRangeAxis(ValueAxis axis)", "full_signature": "public void setRangeAxis(ValueAxis axis)", "class_method_signature": "CategoryPlot.setRangeAxis(ValueAxis axis)", "testcase": false, "constructor": false}, {"identifier": "setRangeAxis", "parameters": "(int index, ValueAxis axis)", "modifiers": "public", "return": "void", "signature": "void setRangeAxis(int index, ValueAxis axis)", "full_signature": "public void setRangeAxis(int index, ValueAxis axis)", "class_method_signature": "CategoryPlot.setRangeAxis(int index, ValueAxis axis)", "testcase": false, "constructor": false}, {"identifier": "setRangeAxis", "parameters": "(int index, ValueAxis axis, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setRangeAxis(int index, ValueAxis axis, boolean notify)", "full_signature": "public void setRangeAxis(int index, ValueAxis axis, boolean notify)", "class_method_signature": "CategoryPlot.setRangeAxis(int index, ValueAxis axis, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "setRangeAxes", "parameters": "(ValueAxis[] axes)", "modifiers": "public", "return": "void", "signature": "void setRangeAxes(ValueAxis[] axes)", "full_signature": "public void setRangeAxes(ValueAxis[] axes)", "class_method_signature": "CategoryPlot.setRangeAxes(ValueAxis[] axes)", "testcase": false, "constructor": false}, {"identifier": "getRangeAxisIndex", "parameters": "(ValueAxis axis)", "modifiers": "public", "return": "int", "signature": "int getRangeAxisIndex(ValueAxis axis)", "full_signature": "public int getRangeAxisIndex(ValueAxis axis)", "class_method_signature": "CategoryPlot.getRangeAxisIndex(ValueAxis axis)", "testcase": false, "constructor": false}, {"identifier": "getRangeAxisLocation", "parameters": "()", "modifiers": "public", "return": "AxisLocation", "signature": "AxisLocation getRangeAxisLocation()", "full_signature": "public AxisLocation getRangeAxisLocation()", "class_method_signature": "CategoryPlot.getRangeAxisLocation()", "testcase": false, "constructor": false}, {"identifier": "getRangeAxisLocation", "parameters": "(int index)", "modifiers": "public", "return": "AxisLocation", "signature": "AxisLocation getRangeAxisLocation(int index)", "full_signature": "public AxisLocation getRangeAxisLocation(int index)", "class_method_signature": "CategoryPlot.getRangeAxisLocation(int index)", "testcase": false, "constructor": false}, {"identifier": "setRangeAxisLocation", "parameters": "(AxisLocation location)", "modifiers": "public", "return": "void", "signature": "void setRangeAxisLocation(AxisLocation location)", "full_signature": "public void setRangeAxisLocation(AxisLocation location)", "class_method_signature": "CategoryPlot.setRangeAxisLocation(AxisLocation location)", "testcase": false, "constructor": false}, {"identifier": "setRangeAxisLocation", "parameters": "(AxisLocation location, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setRangeAxisLocation(AxisLocation location, boolean notify)", "full_signature": "public void setRangeAxisLocation(AxisLocation location, boolean notify)", "class_method_signature": "CategoryPlot.setRangeAxisLocation(AxisLocation location, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "setRangeAxisLocation", "parameters": "(int index, AxisLocation location)", "modifiers": "public", "return": "void", "signature": "void setRangeAxisLocation(int index, AxisLocation location)", "full_signature": "public void setRangeAxisLocation(int index, AxisLocation location)", "class_method_signature": "CategoryPlot.setRangeAxisLocation(int index, AxisLocation location)", "testcase": false, "constructor": false}, {"identifier": "setRangeAxisLocation", "parameters": "(int index, AxisLocation location,\n                                     boolean notify)", "modifiers": "public", "return": "void", "signature": "void setRangeAxisLocation(int index, AxisLocation location,\n                                     boolean notify)", "full_signature": "public void setRangeAxisLocation(int index, AxisLocation location,\n                                     boolean notify)", "class_method_signature": "CategoryPlot.setRangeAxisLocation(int index, AxisLocation location,\n                                     boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getRangeAxisEdge", "parameters": "()", "modifiers": "public", "return": "RectangleEdge", "signature": "RectangleEdge getRangeAxisEdge()", "full_signature": "public RectangleEdge getRangeAxisEdge()", "class_method_signature": "CategoryPlot.getRangeAxisEdge()", "testcase": false, "constructor": false}, {"identifier": "getRangeAxisEdge", "parameters": "(int index)", "modifiers": "public", "return": "RectangleEdge", "signature": "RectangleEdge getRangeAxisEdge(int index)", "full_signature": "public RectangleEdge getRangeAxisEdge(int index)", "class_method_signature": "CategoryPlot.getRangeAxisEdge(int index)", "testcase": false, "constructor": false}, {"identifier": "getRangeAxisCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getRangeAxisCount()", "full_signature": "public int getRangeAxisCount()", "class_method_signature": "CategoryPlot.getRangeAxisCount()", "testcase": false, "constructor": false}, {"identifier": "clearRangeAxes", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearRangeAxes()", "full_signature": "public void clearRangeAxes()", "class_method_signature": "CategoryPlot.clearRangeAxes()", "testcase": false, "constructor": false}, {"identifier": "configureRangeAxes", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void configureRangeAxes()", "full_signature": "public void configureRangeAxes()", "class_method_signature": "CategoryPlot.configureRangeAxes()", "testcase": false, "constructor": false}, {"identifier": "getDataset", "parameters": "()", "modifiers": "public", "return": "CategoryDataset", "signature": "CategoryDataset getDataset()", "full_signature": "public CategoryDataset getDataset()", "class_method_signature": "CategoryPlot.getDataset()", "testcase": false, "constructor": false}, {"identifier": "getDataset", "parameters": "(int index)", "modifiers": "public", "return": "CategoryDataset", "signature": "CategoryDataset getDataset(int index)", "full_signature": "public CategoryDataset getDataset(int index)", "class_method_signature": "CategoryPlot.getDataset(int index)", "testcase": false, "constructor": false}, {"identifier": "setDataset", "parameters": "(CategoryDataset dataset)", "modifiers": "public", "return": "void", "signature": "void setDataset(CategoryDataset dataset)", "full_signature": "public void setDataset(CategoryDataset dataset)", "class_method_signature": "CategoryPlot.setDataset(CategoryDataset dataset)", "testcase": false, "constructor": false}, {"identifier": "setDataset", "parameters": "(int index, CategoryDataset dataset)", "modifiers": "public", "return": "void", "signature": "void setDataset(int index, CategoryDataset dataset)", "full_signature": "public void setDataset(int index, CategoryDataset dataset)", "class_method_signature": "CategoryPlot.setDataset(int index, CategoryDataset dataset)", "testcase": false, "constructor": false}, {"identifier": "getDatasetCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getDatasetCount()", "full_signature": "public int getDatasetCount()", "class_method_signature": "CategoryPlot.getDatasetCount()", "testcase": false, "constructor": false}, {"identifier": "indexOf", "parameters": "(CategoryDataset dataset)", "modifiers": "public", "return": "int", "signature": "int indexOf(CategoryDataset dataset)", "full_signature": "public int indexOf(CategoryDataset dataset)", "class_method_signature": "CategoryPlot.indexOf(CategoryDataset dataset)", "testcase": false, "constructor": false}, {"identifier": "mapDatasetToDomainAxis", "parameters": "(int index, int axisIndex)", "modifiers": "public", "return": "void", "signature": "void mapDatasetToDomainAxis(int index, int axisIndex)", "full_signature": "public void mapDatasetToDomainAxis(int index, int axisIndex)", "class_method_signature": "CategoryPlot.mapDatasetToDomainAxis(int index, int axisIndex)", "testcase": false, "constructor": false}, {"identifier": "mapDatasetToDomainAxes", "parameters": "(int index, List axisIndices)", "modifiers": "public", "return": "void", "signature": "void mapDatasetToDomainAxes(int index, List axisIndices)", "full_signature": "public void mapDatasetToDomainAxes(int index, List axisIndices)", "class_method_signature": "CategoryPlot.mapDatasetToDomainAxes(int index, List axisIndices)", "testcase": false, "constructor": false}, {"identifier": "checkAxisIndices", "parameters": "(List indices)", "modifiers": "private", "return": "void", "signature": "void checkAxisIndices(List indices)", "full_signature": "private void checkAxisIndices(List indices)", "class_method_signature": "CategoryPlot.checkAxisIndices(List indices)", "testcase": false, "constructor": false}, {"identifier": "getDomainAxisForDataset", "parameters": "(int index)", "modifiers": "public", "return": "CategoryAxis", "signature": "CategoryAxis getDomainAxisForDataset(int index)", "full_signature": "public CategoryAxis getDomainAxisForDataset(int index)", "class_method_signature": "CategoryPlot.getDomainAxisForDataset(int index)", "testcase": false, "constructor": false}, {"identifier": "mapDatasetToRangeAxis", "parameters": "(int index, int axisIndex)", "modifiers": "public", "return": "void", "signature": "void mapDatasetToRangeAxis(int index, int axisIndex)", "full_signature": "public void mapDatasetToRangeAxis(int index, int axisIndex)", "class_method_signature": "CategoryPlot.mapDatasetToRangeAxis(int index, int axisIndex)", "testcase": false, "constructor": false}, {"identifier": "mapDatasetToRangeAxes", "parameters": "(int index, List axisIndices)", "modifiers": "public", "return": "void", "signature": "void mapDatasetToRangeAxes(int index, List axisIndices)", "full_signature": "public void mapDatasetToRangeAxes(int index, List axisIndices)", "class_method_signature": "CategoryPlot.mapDatasetToRangeAxes(int index, List axisIndices)", "testcase": false, "constructor": false}, {"identifier": "getRangeAxisForDataset", "parameters": "(int index)", "modifiers": "public", "return": "ValueAxis", "signature": "ValueAxis getRangeAxisForDataset(int index)", "full_signature": "public ValueAxis getRangeAxisForDataset(int index)", "class_method_signature": "CategoryPlot.getRangeAxisForDataset(int index)", "testcase": false, "constructor": false}, {"identifier": "getRendererCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getRendererCount()", "full_signature": "public int getRendererCount()", "class_method_signature": "CategoryPlot.getRendererCount()", "testcase": false, "constructor": false}, {"identifier": "getRenderer", "parameters": "()", "modifiers": "public", "return": "CategoryItemRenderer", "signature": "CategoryItemRenderer getRenderer()", "full_signature": "public CategoryItemRenderer getRenderer()", "class_method_signature": "CategoryPlot.getRenderer()", "testcase": false, "constructor": false}, {"identifier": "getRenderer", "parameters": "(int index)", "modifiers": "public", "return": "CategoryItemRenderer", "signature": "CategoryItemRenderer getRenderer(int index)", "full_signature": "public CategoryItemRenderer getRenderer(int index)", "class_method_signature": "CategoryPlot.getRenderer(int index)", "testcase": false, "constructor": false}, {"identifier": "setRenderer", "parameters": "(CategoryItemRenderer renderer)", "modifiers": "public", "return": "void", "signature": "void setRenderer(CategoryItemRenderer renderer)", "full_signature": "public void setRenderer(CategoryItemRenderer renderer)", "class_method_signature": "CategoryPlot.setRenderer(CategoryItemRenderer renderer)", "testcase": false, "constructor": false}, {"identifier": "setRenderer", "parameters": "(CategoryItemRenderer renderer, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setRenderer(CategoryItemRenderer renderer, boolean notify)", "full_signature": "public void setRenderer(CategoryItemRenderer renderer, boolean notify)", "class_method_signature": "CategoryPlot.setRenderer(CategoryItemRenderer renderer, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "setRenderer", "parameters": "(int index, CategoryItemRenderer renderer)", "modifiers": "public", "return": "void", "signature": "void setRenderer(int index, CategoryItemRenderer renderer)", "full_signature": "public void setRenderer(int index, CategoryItemRenderer renderer)", "class_method_signature": "CategoryPlot.setRenderer(int index, CategoryItemRenderer renderer)", "testcase": false, "constructor": false}, {"identifier": "setRenderer", "parameters": "(int index, CategoryItemRenderer renderer,\n                            boolean notify)", "modifiers": "public", "return": "void", "signature": "void setRenderer(int index, CategoryItemRenderer renderer,\n                            boolean notify)", "full_signature": "public void setRenderer(int index, CategoryItemRenderer renderer,\n                            boolean notify)", "class_method_signature": "CategoryPlot.setRenderer(int index, CategoryItemRenderer renderer,\n                            boolean notify)", "testcase": false, "constructor": false}, {"identifier": "setRenderers", "parameters": "(CategoryItemRenderer[] renderers)", "modifiers": "public", "return": "void", "signature": "void setRenderers(CategoryItemRenderer[] renderers)", "full_signature": "public void setRenderers(CategoryItemRenderer[] renderers)", "class_method_signature": "CategoryPlot.setRenderers(CategoryItemRenderer[] renderers)", "testcase": false, "constructor": false}, {"identifier": "getRendererForDataset", "parameters": "(CategoryDataset dataset)", "modifiers": "public", "return": "CategoryItemRenderer", "signature": "CategoryItemRenderer getRendererForDataset(CategoryDataset dataset)", "full_signature": "public CategoryItemRenderer getRendererForDataset(CategoryDataset dataset)", "class_method_signature": "CategoryPlot.getRendererForDataset(CategoryDataset dataset)", "testcase": false, "constructor": false}, {"identifier": "getIndexOf", "parameters": "(CategoryItemRenderer renderer)", "modifiers": "public", "return": "int", "signature": "int getIndexOf(CategoryItemRenderer renderer)", "full_signature": "public int getIndexOf(CategoryItemRenderer renderer)", "class_method_signature": "CategoryPlot.getIndexOf(CategoryItemRenderer renderer)", "testcase": false, "constructor": false}, {"identifier": "getDatasetRenderingOrder", "parameters": "()", "modifiers": "public", "return": "DatasetRenderingOrder", "signature": "DatasetRenderingOrder getDatasetRenderingOrder()", "full_signature": "public DatasetRenderingOrder getDatasetRenderingOrder()", "class_method_signature": "CategoryPlot.getDatasetRenderingOrder()", "testcase": false, "constructor": false}, {"identifier": "setDatasetRenderingOrder", "parameters": "(DatasetRenderingOrder order)", "modifiers": "public", "return": "void", "signature": "void setDatasetRenderingOrder(DatasetRenderingOrder order)", "full_signature": "public void setDatasetRenderingOrder(DatasetRenderingOrder order)", "class_method_signature": "CategoryPlot.setDatasetRenderingOrder(DatasetRenderingOrder order)", "testcase": false, "constructor": false}, {"identifier": "getColumnRenderingOrder", "parameters": "()", "modifiers": "public", "return": "SortOrder", "signature": "SortOrder getColumnRenderingOrder()", "full_signature": "public SortOrder getColumnRenderingOrder()", "class_method_signature": "CategoryPlot.getColumnRenderingOrder()", "testcase": false, "constructor": false}, {"identifier": "setColumnRenderingOrder", "parameters": "(SortOrder order)", "modifiers": "public", "return": "void", "signature": "void setColumnRenderingOrder(SortOrder order)", "full_signature": "public void setColumnRenderingOrder(SortOrder order)", "class_method_signature": "CategoryPlot.setColumnRenderingOrder(SortOrder order)", "testcase": false, "constructor": false}, {"identifier": "getRowRenderingOrder", "parameters": "()", "modifiers": "public", "return": "SortOrder", "signature": "SortOrder getRowRenderingOrder()", "full_signature": "public SortOrder getRowRenderingOrder()", "class_method_signature": "CategoryPlot.getRowRenderingOrder()", "testcase": false, "constructor": false}, {"identifier": "setRowRenderingOrder", "parameters": "(SortOrder order)", "modifiers": "public", "return": "void", "signature": "void setRowRenderingOrder(SortOrder order)", "full_signature": "public void setRowRenderingOrder(SortOrder order)", "class_method_signature": "CategoryPlot.setRowRenderingOrder(SortOrder order)", "testcase": false, "constructor": false}, {"identifier": "isDomainGridlinesVisible", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDomainGridlinesVisible()", "full_signature": "public boolean isDomainGridlinesVisible()", "class_method_signature": "CategoryPlot.isDomainGridlinesVisible()", "testcase": false, "constructor": false}, {"identifier": "setDomainGridlinesVisible", "parameters": "(boolean visible)", "modifiers": "public", "return": "void", "signature": "void setDomainGridlinesVisible(boolean visible)", "full_signature": "public void setDomainGridlinesVisible(boolean visible)", "class_method_signature": "CategoryPlot.setDomainGridlinesVisible(boolean visible)", "testcase": false, "constructor": false}, {"identifier": "getDomainGridlinePosition", "parameters": "()", "modifiers": "public", "return": "CategoryAnchor", "signature": "CategoryAnchor getDomainGridlinePosition()", "full_signature": "public CategoryAnchor getDomainGridlinePosition()", "class_method_signature": "CategoryPlot.getDomainGridlinePosition()", "testcase": false, "constructor": false}, {"identifier": "setDomainGridlinePosition", "parameters": "(CategoryAnchor position)", "modifiers": "public", "return": "void", "signature": "void setDomainGridlinePosition(CategoryAnchor position)", "full_signature": "public void setDomainGridlinePosition(CategoryAnchor position)", "class_method_signature": "CategoryPlot.setDomainGridlinePosition(CategoryAnchor position)", "testcase": false, "constructor": false}, {"identifier": "getDomainGridlineStroke", "parameters": "()", "modifiers": "public", "return": "Stroke", "signature": "Stroke getDomainGridlineStroke()", "full_signature": "public Stroke getDomainGridlineStroke()", "class_method_signature": "CategoryPlot.getDomainGridlineStroke()", "testcase": false, "constructor": false}, {"identifier": "setDomainGridlineStroke", "parameters": "(Stroke stroke)", "modifiers": "public", "return": "void", "signature": "void setDomainGridlineStroke(Stroke stroke)", "full_signature": "public void setDomainGridlineStroke(Stroke stroke)", "class_method_signature": "CategoryPlot.setDomainGridlineStroke(Stroke stroke)", "testcase": false, "constructor": false}, {"identifier": "getDomainGridlinePaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getDomainGridlinePaint()", "full_signature": "public Paint getDomainGridlinePaint()", "class_method_signature": "CategoryPlot.getDomainGridlinePaint()", "testcase": false, "constructor": false}, {"identifier": "setDomainGridlinePaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setDomainGridlinePaint(Paint paint)", "full_signature": "public void setDomainGridlinePaint(Paint paint)", "class_method_signature": "CategoryPlot.setDomainGridlinePaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "isRangeZeroBaselineVisible", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRangeZeroBaselineVisible()", "full_signature": "public boolean isRangeZeroBaselineVisible()", "class_method_signature": "CategoryPlot.isRangeZeroBaselineVisible()", "testcase": false, "constructor": false}, {"identifier": "setRangeZeroBaselineVisible", "parameters": "(boolean visible)", "modifiers": "public", "return": "void", "signature": "void setRangeZeroBaselineVisible(boolean visible)", "full_signature": "public void setRangeZeroBaselineVisible(boolean visible)", "class_method_signature": "CategoryPlot.setRangeZeroBaselineVisible(boolean visible)", "testcase": false, "constructor": false}, {"identifier": "getRangeZeroBaselineStroke", "parameters": "()", "modifiers": "public", "return": "Stroke", "signature": "Stroke getRangeZeroBaselineStroke()", "full_signature": "public Stroke getRangeZeroBaselineStroke()", "class_method_signature": "CategoryPlot.getRangeZeroBaselineStroke()", "testcase": false, "constructor": false}, {"identifier": "setRangeZeroBaselineStroke", "parameters": "(Stroke stroke)", "modifiers": "public", "return": "void", "signature": "void setRangeZeroBaselineStroke(Stroke stroke)", "full_signature": "public void setRangeZeroBaselineStroke(Stroke stroke)", "class_method_signature": "CategoryPlot.setRangeZeroBaselineStroke(Stroke stroke)", "testcase": false, "constructor": false}, {"identifier": "getRangeZeroBaselinePaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getRangeZeroBaselinePaint()", "full_signature": "public Paint getRangeZeroBaselinePaint()", "class_method_signature": "CategoryPlot.getRangeZeroBaselinePaint()", "testcase": false, "constructor": false}, {"identifier": "setRangeZeroBaselinePaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setRangeZeroBaselinePaint(Paint paint)", "full_signature": "public void setRangeZeroBaselinePaint(Paint paint)", "class_method_signature": "CategoryPlot.setRangeZeroBaselinePaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "isRangeGridlinesVisible", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRangeGridlinesVisible()", "full_signature": "public boolean isRangeGridlinesVisible()", "class_method_signature": "CategoryPlot.isRangeGridlinesVisible()", "testcase": false, "constructor": false}, {"identifier": "setRangeGridlinesVisible", "parameters": "(boolean visible)", "modifiers": "public", "return": "void", "signature": "void setRangeGridlinesVisible(boolean visible)", "full_signature": "public void setRangeGridlinesVisible(boolean visible)", "class_method_signature": "CategoryPlot.setRangeGridlinesVisible(boolean visible)", "testcase": false, "constructor": false}, {"identifier": "getRangeGridlineStroke", "parameters": "()", "modifiers": "public", "return": "Stroke", "signature": "Stroke getRangeGridlineStroke()", "full_signature": "public Stroke getRangeGridlineStroke()", "class_method_signature": "CategoryPlot.getRangeGridlineStroke()", "testcase": false, "constructor": false}, {"identifier": "setRangeGridlineStroke", "parameters": "(Stroke stroke)", "modifiers": "public", "return": "void", "signature": "void setRangeGridlineStroke(Stroke stroke)", "full_signature": "public void setRangeGridlineStroke(Stroke stroke)", "class_method_signature": "CategoryPlot.setRangeGridlineStroke(Stroke stroke)", "testcase": false, "constructor": false}, {"identifier": "getRangeGridlinePaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getRangeGridlinePaint()", "full_signature": "public Paint getRangeGridlinePaint()", "class_method_signature": "CategoryPlot.getRangeGridlinePaint()", "testcase": false, "constructor": false}, {"identifier": "setRangeGridlinePaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setRangeGridlinePaint(Paint paint)", "full_signature": "public void setRangeGridlinePaint(Paint paint)", "class_method_signature": "CategoryPlot.setRangeGridlinePaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "isRangeMinorGridlinesVisible", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRangeMinorGridlinesVisible()", "full_signature": "public boolean isRangeMinorGridlinesVisible()", "class_method_signature": "CategoryPlot.isRangeMinorGridlinesVisible()", "testcase": false, "constructor": false}, {"identifier": "setRangeMinorGridlinesVisible", "parameters": "(boolean visible)", "modifiers": "public", "return": "void", "signature": "void setRangeMinorGridlinesVisible(boolean visible)", "full_signature": "public void setRangeMinorGridlinesVisible(boolean visible)", "class_method_signature": "CategoryPlot.setRangeMinorGridlinesVisible(boolean visible)", "testcase": false, "constructor": false}, {"identifier": "getRangeMinorGridlineStroke", "parameters": "()", "modifiers": "public", "return": "Stroke", "signature": "Stroke getRangeMinorGridlineStroke()", "full_signature": "public Stroke getRangeMinorGridlineStroke()", "class_method_signature": "CategoryPlot.getRangeMinorGridlineStroke()", "testcase": false, "constructor": false}, {"identifier": "setRangeMinorGridlineStroke", "parameters": "(Stroke stroke)", "modifiers": "public", "return": "void", "signature": "void setRangeMinorGridlineStroke(Stroke stroke)", "full_signature": "public void setRangeMinorGridlineStroke(Stroke stroke)", "class_method_signature": "CategoryPlot.setRangeMinorGridlineStroke(Stroke stroke)", "testcase": false, "constructor": false}, {"identifier": "getRangeMinorGridlinePaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getRangeMinorGridlinePaint()", "full_signature": "public Paint getRangeMinorGridlinePaint()", "class_method_signature": "CategoryPlot.getRangeMinorGridlinePaint()", "testcase": false, "constructor": false}, {"identifier": "setRangeMinorGridlinePaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setRangeMinorGridlinePaint(Paint paint)", "full_signature": "public void setRangeMinorGridlinePaint(Paint paint)", "class_method_signature": "CategoryPlot.setRangeMinorGridlinePaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "getFixedLegendItems", "parameters": "()", "modifiers": "public", "return": "LegendItemCollection", "signature": "LegendItemCollection getFixedLegendItems()", "full_signature": "public LegendItemCollection getFixedLegendItems()", "class_method_signature": "CategoryPlot.getFixedLegendItems()", "testcase": false, "constructor": false}, {"identifier": "setFixedLegendItems", "parameters": "(LegendItemCollection items)", "modifiers": "public", "return": "void", "signature": "void setFixedLegendItems(LegendItemCollection items)", "full_signature": "public void setFixedLegendItems(LegendItemCollection items)", "class_method_signature": "CategoryPlot.setFixedLegendItems(LegendItemCollection items)", "testcase": false, "constructor": false}, {"identifier": "getLegendItems", "parameters": "()", "modifiers": "public", "return": "LegendItemCollection", "signature": "LegendItemCollection getLegendItems()", "full_signature": "public LegendItemCollection getLegendItems()", "class_method_signature": "CategoryPlot.getLegendItems()", "testcase": false, "constructor": false}, {"identifier": "handleClick", "parameters": "(int x, int y, PlotRenderingInfo info)", "modifiers": "public", "return": "void", "signature": "void handleClick(int x, int y, PlotRenderingInfo info)", "full_signature": "public void handleClick(int x, int y, PlotRenderingInfo info)", "class_method_signature": "CategoryPlot.handleClick(int x, int y, PlotRenderingInfo info)", "testcase": false, "constructor": false}, {"identifier": "zoom", "parameters": "(double percent)", "modifiers": "public", "return": "void", "signature": "void zoom(double percent)", "full_signature": "public void zoom(double percent)", "class_method_signature": "CategoryPlot.zoom(double percent)", "testcase": false, "constructor": false}, {"identifier": "annotationChanged", "parameters": "(AnnotationChangeEvent event)", "modifiers": "public", "return": "void", "signature": "void annotationChanged(AnnotationChangeEvent event)", "full_signature": "public void annotationChanged(AnnotationChangeEvent event)", "class_method_signature": "CategoryPlot.annotationChanged(AnnotationChangeEvent event)", "testcase": false, "constructor": false}, {"identifier": "datasetChanged", "parameters": "(DatasetChangeEvent event)", "modifiers": "public", "return": "void", "signature": "void datasetChanged(DatasetChangeEvent event)", "full_signature": "public void datasetChanged(DatasetChangeEvent event)", "class_method_signature": "CategoryPlot.datasetChanged(DatasetChangeEvent event)", "testcase": false, "constructor": false}, {"identifier": "rendererChanged", "parameters": "(RendererChangeEvent event)", "modifiers": "public", "return": "void", "signature": "void rendererChanged(RendererChangeEvent event)", "full_signature": "public void rendererChanged(RendererChangeEvent event)", "class_method_signature": "CategoryPlot.rendererChanged(RendererChangeEvent event)", "testcase": false, "constructor": false}, {"identifier": "addDomainMarker", "parameters": "(CategoryMarker marker)", "modifiers": "public", "return": "void", "signature": "void addDomainMarker(CategoryMarker marker)", "full_signature": "public void addDomainMarker(CategoryMarker marker)", "class_method_signature": "CategoryPlot.addDomainMarker(CategoryMarker marker)", "testcase": false, "constructor": false}, {"identifier": "addDomainMarker", "parameters": "(CategoryMarker marker, Layer layer)", "modifiers": "public", "return": "void", "signature": "void addDomainMarker(CategoryMarker marker, Layer layer)", "full_signature": "public void addDomainMarker(CategoryMarker marker, Layer layer)", "class_method_signature": "CategoryPlot.addDomainMarker(CategoryMarker marker, Layer layer)", "testcase": false, "constructor": false}, {"identifier": "addDomainMarker", "parameters": "(int index, CategoryMarker marker, Layer layer)", "modifiers": "public", "return": "void", "signature": "void addDomainMarker(int index, CategoryMarker marker, Layer layer)", "full_signature": "public void addDomainMarker(int index, CategoryMarker marker, Layer layer)", "class_method_signature": "CategoryPlot.addDomainMarker(int index, CategoryMarker marker, Layer layer)", "testcase": false, "constructor": false}, {"identifier": "addDomainMarker", "parameters": "(int index, CategoryMarker marker, Layer layer,\n            boolean notify)", "modifiers": "public", "return": "void", "signature": "void addDomainMarker(int index, CategoryMarker marker, Layer layer,\n            boolean notify)", "full_signature": "public void addDomainMarker(int index, CategoryMarker marker, Layer layer,\n            boolean notify)", "class_method_signature": "CategoryPlot.addDomainMarker(int index, CategoryMarker marker, Layer layer,\n            boolean notify)", "testcase": false, "constructor": false}, {"identifier": "clearDomainMarkers", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearDomainMarkers()", "full_signature": "public void clearDomainMarkers()", "class_method_signature": "CategoryPlot.clearDomainMarkers()", "testcase": false, "constructor": false}, {"identifier": "getDomainMarkers", "parameters": "(Layer layer)", "modifiers": "public", "return": "Collection", "signature": "Collection getDomainMarkers(Layer layer)", "full_signature": "public Collection getDomainMarkers(Layer layer)", "class_method_signature": "CategoryPlot.getDomainMarkers(Layer layer)", "testcase": false, "constructor": false}, {"identifier": "getDomainMarkers", "parameters": "(int index, Layer layer)", "modifiers": "public", "return": "Collection", "signature": "Collection getDomainMarkers(int index, Layer layer)", "full_signature": "public Collection getDomainMarkers(int index, Layer layer)", "class_method_signature": "CategoryPlot.getDomainMarkers(int index, Layer layer)", "testcase": false, "constructor": false}, {"identifier": "clearDomainMarkers", "parameters": "(int index)", "modifiers": "public", "return": "void", "signature": "void clearDomainMarkers(int index)", "full_signature": "public void clearDomainMarkers(int index)", "class_method_signature": "CategoryPlot.clearDomainMarkers(int index)", "testcase": false, "constructor": false}, {"identifier": "removeDomainMarker", "parameters": "(Marker marker)", "modifiers": "public", "return": "boolean", "signature": "boolean removeDomainMarker(Marker marker)", "full_signature": "public boolean removeDomainMarker(Marker marker)", "class_method_signature": "CategoryPlot.removeDomainMarker(Marker marker)", "testcase": false, "constructor": false}, {"identifier": "removeDomainMarker", "parameters": "(Marker marker, Layer layer)", "modifiers": "public", "return": "boolean", "signature": "boolean removeDomainMarker(Marker marker, Layer layer)", "full_signature": "public boolean removeDomainMarker(Marker marker, Layer layer)", "class_method_signature": "CategoryPlot.removeDomainMarker(Marker marker, Layer layer)", "testcase": false, "constructor": false}, {"identifier": "removeDomainMarker", "parameters": "(int index, Marker marker, Layer layer)", "modifiers": "public", "return": "boolean", "signature": "boolean removeDomainMarker(int index, Marker marker, Layer layer)", "full_signature": "public boolean removeDomainMarker(int index, Marker marker, Layer layer)", "class_method_signature": "CategoryPlot.removeDomainMarker(int index, Marker marker, Layer layer)", "testcase": false, "constructor": false}, {"identifier": "removeDomainMarker", "parameters": "(int index, Marker marker, Layer layer,\n            boolean notify)", "modifiers": "public", "return": "boolean", "signature": "boolean removeDomainMarker(int index, Marker marker, Layer layer,\n            boolean notify)", "full_signature": "public boolean removeDomainMarker(int index, Marker marker, Layer layer,\n            boolean notify)", "class_method_signature": "CategoryPlot.removeDomainMarker(int index, Marker marker, Layer layer,\n            boolean notify)", "testcase": false, "constructor": false}, {"identifier": "addRangeMarker", "parameters": "(Marker marker)", "modifiers": "public", "return": "void", "signature": "void addRangeMarker(Marker marker)", "full_signature": "public void addRangeMarker(Marker marker)", "class_method_signature": "CategoryPlot.addRangeMarker(Marker marker)", "testcase": false, "constructor": false}, {"identifier": "addRangeMarker", "parameters": "(Marker marker, Layer layer)", "modifiers": "public", "return": "void", "signature": "void addRangeMarker(Marker marker, Layer layer)", "full_signature": "public void addRangeMarker(Marker marker, Layer layer)", "class_method_signature": "CategoryPlot.addRangeMarker(Marker marker, Layer layer)", "testcase": false, "constructor": false}, {"identifier": "addRangeMarker", "parameters": "(int index, Marker marker, Layer layer)", "modifiers": "public", "return": "void", "signature": "void addRangeMarker(int index, Marker marker, Layer layer)", "full_signature": "public void addRangeMarker(int index, Marker marker, Layer layer)", "class_method_signature": "CategoryPlot.addRangeMarker(int index, Marker marker, Layer layer)", "testcase": false, "constructor": false}, {"identifier": "addRangeMarker", "parameters": "(int index, Marker marker, Layer layer,\n            boolean notify)", "modifiers": "public", "return": "void", "signature": "void addRangeMarker(int index, Marker marker, Layer layer,\n            boolean notify)", "full_signature": "public void addRangeMarker(int index, Marker marker, Layer layer,\n            boolean notify)", "class_method_signature": "CategoryPlot.addRangeMarker(int index, Marker marker, Layer layer,\n            boolean notify)", "testcase": false, "constructor": false}, {"identifier": "clearRangeMarkers", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearRangeMarkers()", "full_signature": "public void clearRangeMarkers()", "class_method_signature": "CategoryPlot.clearRangeMarkers()", "testcase": false, "constructor": false}, {"identifier": "getRangeMarkers", "parameters": "(Layer layer)", "modifiers": "public", "return": "Collection", "signature": "Collection getRangeMarkers(Layer layer)", "full_signature": "public Collection getRangeMarkers(Layer layer)", "class_method_signature": "CategoryPlot.getRangeMarkers(Layer layer)", "testcase": false, "constructor": false}, {"identifier": "getRangeMarkers", "parameters": "(int index, Layer layer)", "modifiers": "public", "return": "Collection", "signature": "Collection getRangeMarkers(int index, Layer layer)", "full_signature": "public Collection getRangeMarkers(int index, Layer layer)", "class_method_signature": "CategoryPlot.getRangeMarkers(int index, Layer layer)", "testcase": false, "constructor": false}, {"identifier": "clearRangeMarkers", "parameters": "(int index)", "modifiers": "public", "return": "void", "signature": "void clearRangeMarkers(int index)", "full_signature": "public void clearRangeMarkers(int index)", "class_method_signature": "CategoryPlot.clearRangeMarkers(int index)", "testcase": false, "constructor": false}, {"identifier": "removeRangeMarker", "parameters": "(Marker marker)", "modifiers": "public", "return": "boolean", "signature": "boolean removeRangeMarker(Marker marker)", "full_signature": "public boolean removeRangeMarker(Marker marker)", "class_method_signature": "CategoryPlot.removeRangeMarker(Marker marker)", "testcase": false, "constructor": false}, {"identifier": "removeRangeMarker", "parameters": "(Marker marker, Layer layer)", "modifiers": "public", "return": "boolean", "signature": "boolean removeRangeMarker(Marker marker, Layer layer)", "full_signature": "public boolean removeRangeMarker(Marker marker, Layer layer)", "class_method_signature": "CategoryPlot.removeRangeMarker(Marker marker, Layer layer)", "testcase": false, "constructor": false}, {"identifier": "removeRangeMarker", "parameters": "(int index, Marker marker, Layer layer)", "modifiers": "public", "return": "boolean", "signature": "boolean removeRangeMarker(int index, Marker marker, Layer layer)", "full_signature": "public boolean removeRangeMarker(int index, Marker marker, Layer layer)", "class_method_signature": "CategoryPlot.removeRangeMarker(int index, Marker marker, Layer layer)", "testcase": false, "constructor": false}, {"identifier": "removeRangeMarker", "parameters": "(int index, Marker marker, Layer layer,\n            boolean notify)", "modifiers": "public", "return": "boolean", "signature": "boolean removeRangeMarker(int index, Marker marker, Layer layer,\n            boolean notify)", "full_signature": "public boolean removeRangeMarker(int index, Marker marker, Layer layer,\n            boolean notify)", "class_method_signature": "CategoryPlot.removeRangeMarker(int index, Marker marker, Layer layer,\n            boolean notify)", "testcase": false, "constructor": false}, {"identifier": "isDomainCrosshairVisible", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDomainCrosshairVisible()", "full_signature": "public boolean isDomainCrosshairVisible()", "class_method_signature": "CategoryPlot.isDomainCrosshairVisible()", "testcase": false, "constructor": false}, {"identifier": "setDomainCrosshairVisible", "parameters": "(boolean flag)", "modifiers": "public", "return": "void", "signature": "void setDomainCrosshairVisible(boolean flag)", "full_signature": "public void setDomainCrosshairVisible(boolean flag)", "class_method_signature": "CategoryPlot.setDomainCrosshairVisible(boolean flag)", "testcase": false, "constructor": false}, {"identifier": "getDomainCrosshairRowKey", "parameters": "()", "modifiers": "public", "return": "Comparable", "signature": "Comparable getDomainCrosshairRowKey()", "full_signature": "public Comparable getDomainCrosshairRowKey()", "class_method_signature": "CategoryPlot.getDomainCrosshairRowKey()", "testcase": false, "constructor": false}, {"identifier": "setDomainCrosshairRowKey", "parameters": "(Comparable key)", "modifiers": "public", "return": "void", "signature": "void setDomainCrosshairRowKey(Comparable key)", "full_signature": "public void setDomainCrosshairRowKey(Comparable key)", "class_method_signature": "CategoryPlot.setDomainCrosshairRowKey(Comparable key)", "testcase": false, "constructor": false}, {"identifier": "setDomainCrosshairRowKey", "parameters": "(Comparable key, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setDomainCrosshairRowKey(Comparable key, boolean notify)", "full_signature": "public void setDomainCrosshairRowKey(Comparable key, boolean notify)", "class_method_signature": "CategoryPlot.setDomainCrosshairRowKey(Comparable key, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getDomainCrosshairColumnKey", "parameters": "()", "modifiers": "public", "return": "Comparable", "signature": "Comparable getDomainCrosshairColumnKey()", "full_signature": "public Comparable getDomainCrosshairColumnKey()", "class_method_signature": "CategoryPlot.getDomainCrosshairColumnKey()", "testcase": false, "constructor": false}, {"identifier": "setDomainCrosshairColumnKey", "parameters": "(Comparable key)", "modifiers": "public", "return": "void", "signature": "void setDomainCrosshairColumnKey(Comparable key)", "full_signature": "public void setDomainCrosshairColumnKey(Comparable key)", "class_method_signature": "CategoryPlot.setDomainCrosshairColumnKey(Comparable key)", "testcase": false, "constructor": false}, {"identifier": "setDomainCrosshairColumnKey", "parameters": "(Comparable key, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setDomainCrosshairColumnKey(Comparable key, boolean notify)", "full_signature": "public void setDomainCrosshairColumnKey(Comparable key, boolean notify)", "class_method_signature": "CategoryPlot.setDomainCrosshairColumnKey(Comparable key, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getCrosshairDatasetIndex", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getCrosshairDatasetIndex()", "full_signature": "public int getCrosshairDatasetIndex()", "class_method_signature": "CategoryPlot.getCrosshairDatasetIndex()", "testcase": false, "constructor": false}, {"identifier": "setCrosshairDatasetIndex", "parameters": "(int index)", "modifiers": "public", "return": "void", "signature": "void setCrosshairDatasetIndex(int index)", "full_signature": "public void setCrosshairDatasetIndex(int index)", "class_method_signature": "CategoryPlot.setCrosshairDatasetIndex(int index)", "testcase": false, "constructor": false}, {"identifier": "setCrosshairDatasetIndex", "parameters": "(int index, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setCrosshairDatasetIndex(int index, boolean notify)", "full_signature": "public void setCrosshairDatasetIndex(int index, boolean notify)", "class_method_signature": "CategoryPlot.setCrosshairDatasetIndex(int index, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getDomainCrosshairPaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getDomainCrosshairPaint()", "full_signature": "public Paint getDomainCrosshairPaint()", "class_method_signature": "CategoryPlot.getDomainCrosshairPaint()", "testcase": false, "constructor": false}, {"identifier": "setDomainCrosshairPaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setDomainCrosshairPaint(Paint paint)", "full_signature": "public void setDomainCrosshairPaint(Paint paint)", "class_method_signature": "CategoryPlot.setDomainCrosshairPaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "getDomainCrosshairStroke", "parameters": "()", "modifiers": "public", "return": "Stroke", "signature": "Stroke getDomainCrosshairStroke()", "full_signature": "public Stroke getDomainCrosshairStroke()", "class_method_signature": "CategoryPlot.getDomainCrosshairStroke()", "testcase": false, "constructor": false}, {"identifier": "setDomainCrosshairStroke", "parameters": "(Stroke stroke)", "modifiers": "public", "return": "void", "signature": "void setDomainCrosshairStroke(Stroke stroke)", "full_signature": "public void setDomainCrosshairStroke(Stroke stroke)", "class_method_signature": "CategoryPlot.setDomainCrosshairStroke(Stroke stroke)", "testcase": false, "constructor": false}, {"identifier": "isRangeCrosshairVisible", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRangeCrosshairVisible()", "full_signature": "public boolean isRangeCrosshairVisible()", "class_method_signature": "CategoryPlot.isRangeCrosshairVisible()", "testcase": false, "constructor": false}, {"identifier": "setRangeCrosshairVisible", "parameters": "(boolean flag)", "modifiers": "public", "return": "void", "signature": "void setRangeCrosshairVisible(boolean flag)", "full_signature": "public void setRangeCrosshairVisible(boolean flag)", "class_method_signature": "CategoryPlot.setRangeCrosshairVisible(boolean flag)", "testcase": false, "constructor": false}, {"identifier": "isRangeCrosshairLockedOnData", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRangeCrosshairLockedOnData()", "full_signature": "public boolean isRangeCrosshairLockedOnData()", "class_method_signature": "CategoryPlot.isRangeCrosshairLockedOnData()", "testcase": false, "constructor": false}, {"identifier": "setRangeCrosshairLockedOnData", "parameters": "(boolean flag)", "modifiers": "public", "return": "void", "signature": "void setRangeCrosshairLockedOnData(boolean flag)", "full_signature": "public void setRangeCrosshairLockedOnData(boolean flag)", "class_method_signature": "CategoryPlot.setRangeCrosshairLockedOnData(boolean flag)", "testcase": false, "constructor": false}, {"identifier": "getRangeCrosshairValue", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getRangeCrosshairValue()", "full_signature": "public double getRangeCrosshairValue()", "class_method_signature": "CategoryPlot.getRangeCrosshairValue()", "testcase": false, "constructor": false}, {"identifier": "setRangeCrosshairValue", "parameters": "(double value)", "modifiers": "public", "return": "void", "signature": "void setRangeCrosshairValue(double value)", "full_signature": "public void setRangeCrosshairValue(double value)", "class_method_signature": "CategoryPlot.setRangeCrosshairValue(double value)", "testcase": false, "constructor": false}, {"identifier": "setRangeCrosshairValue", "parameters": "(double value, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setRangeCrosshairValue(double value, boolean notify)", "full_signature": "public void setRangeCrosshairValue(double value, boolean notify)", "class_method_signature": "CategoryPlot.setRangeCrosshairValue(double value, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getRangeCrosshairStroke", "parameters": "()", "modifiers": "public", "return": "Stroke", "signature": "Stroke getRangeCrosshairStroke()", "full_signature": "public Stroke getRangeCrosshairStroke()", "class_method_signature": "CategoryPlot.getRangeCrosshairStroke()", "testcase": false, "constructor": false}, {"identifier": "setRangeCrosshairStroke", "parameters": "(Stroke stroke)", "modifiers": "public", "return": "void", "signature": "void setRangeCrosshairStroke(Stroke stroke)", "full_signature": "public void setRangeCrosshairStroke(Stroke stroke)", "class_method_signature": "CategoryPlot.setRangeCrosshairStroke(Stroke stroke)", "testcase": false, "constructor": false}, {"identifier": "getRangeCrosshairPaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getRangeCrosshairPaint()", "full_signature": "public Paint getRangeCrosshairPaint()", "class_method_signature": "CategoryPlot.getRangeCrosshairPaint()", "testcase": false, "constructor": false}, {"identifier": "setRangeCrosshairPaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setRangeCrosshairPaint(Paint paint)", "full_signature": "public void setRangeCrosshairPaint(Paint paint)", "class_method_signature": "CategoryPlot.setRangeCrosshairPaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "getAnnotations", "parameters": "()", "modifiers": "public", "return": "List", "signature": "List getAnnotations()", "full_signature": "public List getAnnotations()", "class_method_signature": "CategoryPlot.getAnnotations()", "testcase": false, "constructor": false}, {"identifier": "addAnnotation", "parameters": "(CategoryAnnotation annotation)", "modifiers": "public", "return": "void", "signature": "void addAnnotation(CategoryAnnotation annotation)", "full_signature": "public void addAnnotation(CategoryAnnotation annotation)", "class_method_signature": "CategoryPlot.addAnnotation(CategoryAnnotation annotation)", "testcase": false, "constructor": false}, {"identifier": "addAnnotation", "parameters": "(CategoryAnnotation annotation, boolean notify)", "modifiers": "public", "return": "void", "signature": "void addAnnotation(CategoryAnnotation annotation, boolean notify)", "full_signature": "public void addAnnotation(CategoryAnnotation annotation, boolean notify)", "class_method_signature": "CategoryPlot.addAnnotation(CategoryAnnotation annotation, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "removeAnnotation", "parameters": "(CategoryAnnotation annotation)", "modifiers": "public", "return": "boolean", "signature": "boolean removeAnnotation(CategoryAnnotation annotation)", "full_signature": "public boolean removeAnnotation(CategoryAnnotation annotation)", "class_method_signature": "CategoryPlot.removeAnnotation(CategoryAnnotation annotation)", "testcase": false, "constructor": false}, {"identifier": "removeAnnotation", "parameters": "(CategoryAnnotation annotation,\n            boolean notify)", "modifiers": "public", "return": "boolean", "signature": "boolean removeAnnotation(CategoryAnnotation annotation,\n            boolean notify)", "full_signature": "public boolean removeAnnotation(CategoryAnnotation annotation,\n            boolean notify)", "class_method_signature": "CategoryPlot.removeAnnotation(CategoryAnnotation annotation,\n            boolean notify)", "testcase": false, "constructor": false}, {"identifier": "clearAnnotations", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearAnnotations()", "full_signature": "public void clearAnnotations()", "class_method_signature": "CategoryPlot.clearAnnotations()", "testcase": false, "constructor": false}, {"identifier": "getShadowGenerator", "parameters": "()", "modifiers": "public", "return": "ShadowGenerator", "signature": "ShadowGenerator getShadowGenerator()", "full_signature": "public ShadowGenerator getShadowGenerator()", "class_method_signature": "CategoryPlot.getShadowGenerator()", "testcase": false, "constructor": false}, {"identifier": "setShadowGenerator", "parameters": "(ShadowGenerator generator)", "modifiers": "public", "return": "void", "signature": "void setShadowGenerator(ShadowGenerator generator)", "full_signature": "public void setShadowGenerator(ShadowGenerator generator)", "class_method_signature": "CategoryPlot.setShadowGenerator(ShadowGenerator generator)", "testcase": false, "constructor": false}, {"identifier": "calculateDomainAxisSpace", "parameters": "(Graphics2D g2,\n                                                 Rectangle2D plotArea,\n                                                 AxisSpace space)", "modifiers": "protected", "return": "AxisSpace", "signature": "AxisSpace calculateDomainAxisSpace(Graphics2D g2,\n                                                 Rectangle2D plotArea,\n                                                 AxisSpace space)", "full_signature": "protected AxisSpace calculateDomainAxisSpace(Graphics2D g2,\n                                                 Rectangle2D plotArea,\n                                                 AxisSpace space)", "class_method_signature": "CategoryPlot.calculateDomainAxisSpace(Graphics2D g2,\n                                                 Rectangle2D plotArea,\n                                                 AxisSpace space)", "testcase": false, "constructor": false}, {"identifier": "calculateRangeAxisSpace", "parameters": "(Graphics2D g2,\n                                                Rectangle2D plotArea,\n                                                AxisSpace space)", "modifiers": "protected", "return": "AxisSpace", "signature": "AxisSpace calculateRangeAxisSpace(Graphics2D g2,\n                                                Rectangle2D plotArea,\n                                                AxisSpace space)", "full_signature": "protected AxisSpace calculateRangeAxisSpace(Graphics2D g2,\n                                                Rectangle2D plotArea,\n                                                AxisSpace space)", "class_method_signature": "CategoryPlot.calculateRangeAxisSpace(Graphics2D g2,\n                                                Rectangle2D plotArea,\n                                                AxisSpace space)", "testcase": false, "constructor": false}, {"identifier": "integerise", "parameters": "(Rectangle2D rect)", "modifiers": "private", "return": "Rectangle", "signature": "Rectangle integerise(Rectangle2D rect)", "full_signature": "private Rectangle integerise(Rectangle2D rect)", "class_method_signature": "CategoryPlot.integerise(Rectangle2D rect)", "testcase": false, "constructor": false}, {"identifier": "calculateAxisSpace", "parameters": "(Graphics2D g2,\n                                           Rectangle2D plotArea)", "modifiers": "protected", "return": "AxisSpace", "signature": "AxisSpace calculateAxisSpace(Graphics2D g2,\n                                           Rectangle2D plotArea)", "full_signature": "protected AxisSpace calculateAxisSpace(Graphics2D g2,\n                                           Rectangle2D plotArea)", "class_method_signature": "CategoryPlot.calculateAxisSpace(Graphics2D g2,\n                                           Rectangle2D plotArea)", "testcase": false, "constructor": false}, {"identifier": "draw", "parameters": "(Graphics2D g2, Rectangle2D area, Point2D anchor,\n            PlotState parentState, PlotRenderingInfo state)", "modifiers": "public", "return": "void", "signature": "void draw(Graphics2D g2, Rectangle2D area, Point2D anchor,\n            PlotState parentState, PlotRenderingInfo state)", "full_signature": "public void draw(Graphics2D g2, Rectangle2D area, Point2D anchor,\n            PlotState parentState, PlotRenderingInfo state)", "class_method_signature": "CategoryPlot.draw(Graphics2D g2, Rectangle2D area, Point2D anchor,\n            PlotState parentState, PlotRenderingInfo state)", "testcase": false, "constructor": false}, {"identifier": "drawBackground", "parameters": "(Graphics2D g2, Rectangle2D area)", "modifiers": "public", "return": "void", "signature": "void drawBackground(Graphics2D g2, Rectangle2D area)", "full_signature": "public void drawBackground(Graphics2D g2, Rectangle2D area)", "class_method_signature": "CategoryPlot.drawBackground(Graphics2D g2, Rectangle2D area)", "testcase": false, "constructor": false}, {"identifier": "drawAxes", "parameters": "(Graphics2D g2,\n                           Rectangle2D plotArea,\n                           Rectangle2D dataArea,\n                           PlotRenderingInfo plotState)", "modifiers": "protected", "return": "Map", "signature": "Map drawAxes(Graphics2D g2,\n                           Rectangle2D plotArea,\n                           Rectangle2D dataArea,\n                           PlotRenderingInfo plotState)", "full_signature": "protected Map drawAxes(Graphics2D g2,\n                           Rectangle2D plotArea,\n                           Rectangle2D dataArea,\n                           PlotRenderingInfo plotState)", "class_method_signature": "CategoryPlot.drawAxes(Graphics2D g2,\n                           Rectangle2D plotArea,\n                           Rectangle2D dataArea,\n                           PlotRenderingInfo plotState)", "testcase": false, "constructor": false}, {"identifier": "render", "parameters": "(Graphics2D g2, Rectangle2D dataArea, int index,\n            PlotRenderingInfo info, CategoryCrosshairState crosshairState)", "modifiers": "public", "return": "boolean", "signature": "boolean render(Graphics2D g2, Rectangle2D dataArea, int index,\n            PlotRenderingInfo info, CategoryCrosshairState crosshairState)", "full_signature": "public boolean render(Graphics2D g2, Rectangle2D dataArea, int index,\n            PlotRenderingInfo info, CategoryCrosshairState crosshairState)", "class_method_signature": "CategoryPlot.render(Graphics2D g2, Rectangle2D dataArea, int index,\n            PlotRenderingInfo info, CategoryCrosshairState crosshairState)", "testcase": false, "constructor": false}, {"identifier": "drawDomainGridlines", "parameters": "(Graphics2D g2, Rectangle2D dataArea)", "modifiers": "protected", "return": "void", "signature": "void drawDomainGridlines(Graphics2D g2, Rectangle2D dataArea)", "full_signature": "protected void drawDomainGridlines(Graphics2D g2, Rectangle2D dataArea)", "class_method_signature": "CategoryPlot.drawDomainGridlines(Graphics2D g2, Rectangle2D dataArea)", "testcase": false, "constructor": false}, {"identifier": "drawRangeGridlines", "parameters": "(Graphics2D g2, Rectangle2D dataArea,\n                                      List ticks)", "modifiers": "protected", "return": "void", "signature": "void drawRangeGridlines(Graphics2D g2, Rectangle2D dataArea,\n                                      List ticks)", "full_signature": "protected void drawRangeGridlines(Graphics2D g2, Rectangle2D dataArea,\n                                      List ticks)", "class_method_signature": "CategoryPlot.drawRangeGridlines(Graphics2D g2, Rectangle2D dataArea,\n                                      List ticks)", "testcase": false, "constructor": false}, {"identifier": "drawZeroRangeBaseline", "parameters": "(Graphics2D g2, Rectangle2D area)", "modifiers": "protected", "return": "void", "signature": "void drawZeroRangeBaseline(Graphics2D g2, Rectangle2D area)", "full_signature": "protected void drawZeroRangeBaseline(Graphics2D g2, Rectangle2D area)", "class_method_signature": "CategoryPlot.drawZeroRangeBaseline(Graphics2D g2, Rectangle2D area)", "testcase": false, "constructor": false}, {"identifier": "drawAnnotations", "parameters": "(Graphics2D g2, Rectangle2D dataArea,\n            PlotRenderingInfo info)", "modifiers": "protected", "return": "void", "signature": "void drawAnnotations(Graphics2D g2, Rectangle2D dataArea,\n            PlotRenderingInfo info)", "full_signature": "protected void drawAnnotations(Graphics2D g2, Rectangle2D dataArea,\n            PlotRenderingInfo info)", "class_method_signature": "CategoryPlot.drawAnnotations(Graphics2D g2, Rectangle2D dataArea,\n            PlotRenderingInfo info)", "testcase": false, "constructor": false}, {"identifier": "drawDomainMarkers", "parameters": "(Graphics2D g2, Rectangle2D dataArea,\n                                     int index, Layer layer)", "modifiers": "protected", "return": "void", "signature": "void drawDomainMarkers(Graphics2D g2, Rectangle2D dataArea,\n                                     int index, Layer layer)", "full_signature": "protected void drawDomainMarkers(Graphics2D g2, Rectangle2D dataArea,\n                                     int index, Layer layer)", "class_method_signature": "CategoryPlot.drawDomainMarkers(Graphics2D g2, Rectangle2D dataArea,\n                                     int index, Layer layer)", "testcase": false, "constructor": false}, {"identifier": "drawRangeMarkers", "parameters": "(Graphics2D g2, Rectangle2D dataArea,\n                                    int index, Layer layer)", "modifiers": "protected", "return": "void", "signature": "void drawRangeMarkers(Graphics2D g2, Rectangle2D dataArea,\n                                    int index, Layer layer)", "full_signature": "protected void drawRangeMarkers(Graphics2D g2, Rectangle2D dataArea,\n                                    int index, Layer layer)", "class_method_signature": "CategoryPlot.drawRangeMarkers(Graphics2D g2, Rectangle2D dataArea,\n                                    int index, Layer layer)", "testcase": false, "constructor": false}, {"identifier": "drawRangeLine", "parameters": "(Graphics2D g2, Rectangle2D dataArea,\n            double value, Stroke stroke, Paint paint)", "modifiers": "protected", "return": "void", "signature": "void drawRangeLine(Graphics2D g2, Rectangle2D dataArea,\n            double value, Stroke stroke, Paint paint)", "full_signature": "protected void drawRangeLine(Graphics2D g2, Rectangle2D dataArea,\n            double value, Stroke stroke, Paint paint)", "class_method_signature": "CategoryPlot.drawRangeLine(Graphics2D g2, Rectangle2D dataArea,\n            double value, Stroke stroke, Paint paint)", "testcase": false, "constructor": false}, {"identifier": "drawDomainCrosshair", "parameters": "(Graphics2D g2, Rectangle2D dataArea,\n            PlotOrientation orientation, int datasetIndex,\n            Comparable rowKey, Comparable columnKey, Stroke stroke,\n            Paint paint)", "modifiers": "protected", "return": "void", "signature": "void drawDomainCrosshair(Graphics2D g2, Rectangle2D dataArea,\n            PlotOrientation orientation, int datasetIndex,\n            Comparable rowKey, Comparable columnKey, Stroke stroke,\n            Paint paint)", "full_signature": "protected void drawDomainCrosshair(Graphics2D g2, Rectangle2D dataArea,\n            PlotOrientation orientation, int datasetIndex,\n            Comparable rowKey, Comparable columnKey, Stroke stroke,\n            Paint paint)", "class_method_signature": "CategoryPlot.drawDomainCrosshair(Graphics2D g2, Rectangle2D dataArea,\n            PlotOrientation orientation, int datasetIndex,\n            Comparable rowKey, Comparable columnKey, Stroke stroke,\n            Paint paint)", "testcase": false, "constructor": false}, {"identifier": "drawRangeCrosshair", "parameters": "(Graphics2D g2, Rectangle2D dataArea,\n            PlotOrientation orientation, double value, ValueAxis axis,\n            Stroke stroke, Paint paint)", "modifiers": "protected", "return": "void", "signature": "void drawRangeCrosshair(Graphics2D g2, Rectangle2D dataArea,\n            PlotOrientation orientation, double value, ValueAxis axis,\n            Stroke stroke, Paint paint)", "full_signature": "protected void drawRangeCrosshair(Graphics2D g2, Rectangle2D dataArea,\n            PlotOrientation orientation, double value, ValueAxis axis,\n            Stroke stroke, Paint paint)", "class_method_signature": "CategoryPlot.drawRangeCrosshair(Graphics2D g2, Rectangle2D dataArea,\n            PlotOrientation orientation, double value, ValueAxis axis,\n            Stroke stroke, Paint paint)", "testcase": false, "constructor": false}, {"identifier": "getDataRange", "parameters": "(ValueAxis axis)", "modifiers": "public", "return": "Range", "signature": "Range getDataRange(ValueAxis axis)", "full_signature": "public Range getDataRange(ValueAxis axis)", "class_method_signature": "CategoryPlot.getDataRange(ValueAxis axis)", "testcase": false, "constructor": false}, {"identifier": "datasetsMappedToDomainAxis", "parameters": "(int axisIndex)", "modifiers": "private", "return": "List", "signature": "List datasetsMappedToDomainAxis(int axisIndex)", "full_signature": "private List datasetsMappedToDomainAxis(int axisIndex)", "class_method_signature": "CategoryPlot.datasetsMappedToDomainAxis(int axisIndex)", "testcase": false, "constructor": false}, {"identifier": "datasetsMappedToRangeAxis", "parameters": "(int index)", "modifiers": "private", "return": "List", "signature": "List datasetsMappedToRangeAxis(int index)", "full_signature": "private List datasetsMappedToRangeAxis(int index)", "class_method_signature": "CategoryPlot.datasetsMappedToRangeAxis(int index)", "testcase": false, "constructor": false}, {"identifier": "getWeight", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getWeight()", "full_signature": "public int getWeight()", "class_method_signature": "CategoryPlot.getWeight()", "testcase": false, "constructor": false}, {"identifier": "setWeight", "parameters": "(int weight)", "modifiers": "public", "return": "void", "signature": "void setWeight(int weight)", "full_signature": "public void setWeight(int weight)", "class_method_signature": "CategoryPlot.setWeight(int weight)", "testcase": false, "constructor": false}, {"identifier": "getFixedDomainAxisSpace", "parameters": "()", "modifiers": "public", "return": "AxisSpace", "signature": "AxisSpace getFixedDomainAxisSpace()", "full_signature": "public AxisSpace getFixedDomainAxisSpace()", "class_method_signature": "CategoryPlot.getFixedDomainAxisSpace()", "testcase": false, "constructor": false}, {"identifier": "setFixedDomainAxisSpace", "parameters": "(AxisSpace space)", "modifiers": "public", "return": "void", "signature": "void setFixedDomainAxisSpace(AxisSpace space)", "full_signature": "public void setFixedDomainAxisSpace(AxisSpace space)", "class_method_signature": "CategoryPlot.setFixedDomainAxisSpace(AxisSpace space)", "testcase": false, "constructor": false}, {"identifier": "setFixedDomainAxisSpace", "parameters": "(AxisSpace space, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setFixedDomainAxisSpace(AxisSpace space, boolean notify)", "full_signature": "public void setFixedDomainAxisSpace(AxisSpace space, boolean notify)", "class_method_signature": "CategoryPlot.setFixedDomainAxisSpace(AxisSpace space, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getFixedRangeAxisSpace", "parameters": "()", "modifiers": "public", "return": "AxisSpace", "signature": "AxisSpace getFixedRangeAxisSpace()", "full_signature": "public AxisSpace getFixedRangeAxisSpace()", "class_method_signature": "CategoryPlot.getFixedRangeAxisSpace()", "testcase": false, "constructor": false}, {"identifier": "setFixedRangeAxisSpace", "parameters": "(AxisSpace space)", "modifiers": "public", "return": "void", "signature": "void setFixedRangeAxisSpace(AxisSpace space)", "full_signature": "public void setFixedRangeAxisSpace(AxisSpace space)", "class_method_signature": "CategoryPlot.setFixedRangeAxisSpace(AxisSpace space)", "testcase": false, "constructor": false}, {"identifier": "setFixedRangeAxisSpace", "parameters": "(AxisSpace space, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setFixedRangeAxisSpace(AxisSpace space, boolean notify)", "full_signature": "public void setFixedRangeAxisSpace(AxisSpace space, boolean notify)", "class_method_signature": "CategoryPlot.setFixedRangeAxisSpace(AxisSpace space, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "getCategories", "parameters": "()", "modifiers": "public", "return": "List", "signature": "List getCategories()", "full_signature": "public List getCategories()", "class_method_signature": "CategoryPlot.getCategories()", "testcase": false, "constructor": false}, {"identifier": "getCategoriesForAxis", "parameters": "(CategoryAxis axis)", "modifiers": "public", "return": "List", "signature": "List getCategoriesForAxis(CategoryAxis axis)", "full_signature": "public List getCategoriesForAxis(CategoryAxis axis)", "class_method_signature": "CategoryPlot.getCategoriesForAxis(CategoryAxis axis)", "testcase": false, "constructor": false}, {"identifier": "getDrawSharedDomainAxis", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getDrawSharedDomainAxis()", "full_signature": "public boolean getDrawSharedDomainAxis()", "class_method_signature": "CategoryPlot.getDrawSharedDomainAxis()", "testcase": false, "constructor": false}, {"identifier": "setDrawSharedDomainAxis", "parameters": "(boolean draw)", "modifiers": "public", "return": "void", "signature": "void setDrawSharedDomainAxis(boolean draw)", "full_signature": "public void setDrawSharedDomainAxis(boolean draw)", "class_method_signature": "CategoryPlot.setDrawSharedDomainAxis(boolean draw)", "testcase": false, "constructor": false}, {"identifier": "isDomainPannable", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDomainPannable()", "full_signature": "public boolean isDomainPannable()", "class_method_signature": "CategoryPlot.isDomainPannable()", "testcase": false, "constructor": false}, {"identifier": "isRangePannable", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRangePannable()", "full_signature": "public boolean isRangePannable()", "class_method_signature": "CategoryPlot.isRangePannable()", "testcase": false, "constructor": false}, {"identifier": "setRangePannable", "parameters": "(boolean pannable)", "modifiers": "public", "return": "void", "signature": "void setRangePannable(boolean pannable)", "full_signature": "public void setRangePannable(boolean pannable)", "class_method_signature": "CategoryPlot.setRangePannable(boolean pannable)", "testcase": false, "constructor": false}, {"identifier": "panDomainAxes", "parameters": "(double percent, PlotRenderingInfo info,\n            Point2D source)", "modifiers": "public", "return": "void", "signature": "void panDomainAxes(double percent, PlotRenderingInfo info,\n            Point2D source)", "full_signature": "public void panDomainAxes(double percent, PlotRenderingInfo info,\n            Point2D source)", "class_method_signature": "CategoryPlot.panDomainAxes(double percent, PlotRenderingInfo info,\n            Point2D source)", "testcase": false, "constructor": false}, {"identifier": "panRangeAxes", "parameters": "(double percent, PlotRenderingInfo info,\n            Point2D source)", "modifiers": "public", "return": "void", "signature": "void panRangeAxes(double percent, PlotRenderingInfo info,\n            Point2D source)", "full_signature": "public void panRangeAxes(double percent, PlotRenderingInfo info,\n            Point2D source)", "class_method_signature": "CategoryPlot.panRangeAxes(double percent, PlotRenderingInfo info,\n            Point2D source)", "testcase": false, "constructor": false}, {"identifier": "isDomainZoomable", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDomainZoomable()", "full_signature": "public boolean isDomainZoomable()", "class_method_signature": "CategoryPlot.isDomainZoomable()", "testcase": false, "constructor": false}, {"identifier": "isRangeZoomable", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRangeZoomable()", "full_signature": "public boolean isRangeZoomable()", "class_method_signature": "CategoryPlot.isRangeZoomable()", "testcase": false, "constructor": false}, {"identifier": "zoomDomainAxes", "parameters": "(double factor, PlotRenderingInfo state,\n                               Point2D source)", "modifiers": "public", "return": "void", "signature": "void zoomDomainAxes(double factor, PlotRenderingInfo state,\n                               Point2D source)", "full_signature": "public void zoomDomainAxes(double factor, PlotRenderingInfo state,\n                               Point2D source)", "class_method_signature": "CategoryPlot.zoomDomainAxes(double factor, PlotRenderingInfo state,\n                               Point2D source)", "testcase": false, "constructor": false}, {"identifier": "zoomDomainAxes", "parameters": "(double lowerPercent, double upperPercent,\n                               PlotRenderingInfo state, Point2D source)", "modifiers": "public", "return": "void", "signature": "void zoomDomainAxes(double lowerPercent, double upperPercent,\n                               PlotRenderingInfo state, Point2D source)", "full_signature": "public void zoomDomainAxes(double lowerPercent, double upperPercent,\n                               PlotRenderingInfo state, Point2D source)", "class_method_signature": "CategoryPlot.zoomDomainAxes(double lowerPercent, double upperPercent,\n                               PlotRenderingInfo state, Point2D source)", "testcase": false, "constructor": false}, {"identifier": "zoomDomainAxes", "parameters": "(double factor, PlotRenderingInfo info,\n                               Point2D source, boolean useAnchor)", "modifiers": "public", "return": "void", "signature": "void zoomDomainAxes(double factor, PlotRenderingInfo info,\n                               Point2D source, boolean useAnchor)", "full_signature": "public void zoomDomainAxes(double factor, PlotRenderingInfo info,\n                               Point2D source, boolean useAnchor)", "class_method_signature": "CategoryPlot.zoomDomainAxes(double factor, PlotRenderingInfo info,\n                               Point2D source, boolean useAnchor)", "testcase": false, "constructor": false}, {"identifier": "zoomRangeAxes", "parameters": "(double factor, PlotRenderingInfo state,\n                              Point2D source)", "modifiers": "public", "return": "void", "signature": "void zoomRangeAxes(double factor, PlotRenderingInfo state,\n                              Point2D source)", "full_signature": "public void zoomRangeAxes(double factor, PlotRenderingInfo state,\n                              Point2D source)", "class_method_signature": "CategoryPlot.zoomRangeAxes(double factor, PlotRenderingInfo state,\n                              Point2D source)", "testcase": false, "constructor": false}, {"identifier": "zoomRangeAxes", "parameters": "(double factor, PlotRenderingInfo info,\n                              Point2D source, boolean useAnchor)", "modifiers": "public", "return": "void", "signature": "void zoomRangeAxes(double factor, PlotRenderingInfo info,\n                              Point2D source, boolean useAnchor)", "full_signature": "public void zoomRangeAxes(double factor, PlotRenderingInfo info,\n                              Point2D source, boolean useAnchor)", "class_method_signature": "CategoryPlot.zoomRangeAxes(double factor, PlotRenderingInfo info,\n                              Point2D source, boolean useAnchor)", "testcase": false, "constructor": false}, {"identifier": "zoomRangeAxes", "parameters": "(double lowerPercent, double upperPercent,\n                              PlotRenderingInfo state, Point2D source)", "modifiers": "public", "return": "void", "signature": "void zoomRangeAxes(double lowerPercent, double upperPercent,\n                              PlotRenderingInfo state, Point2D source)", "full_signature": "public void zoomRangeAxes(double lowerPercent, double upperPercent,\n                              PlotRenderingInfo state, Point2D source)", "class_method_signature": "CategoryPlot.zoomRangeAxes(double lowerPercent, double upperPercent,\n                              PlotRenderingInfo state, Point2D source)", "testcase": false, "constructor": false}, {"identifier": "getAnchorValue", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getAnchorValue()", "full_signature": "public double getAnchorValue()", "class_method_signature": "CategoryPlot.getAnchorValue()", "testcase": false, "constructor": false}, {"identifier": "setAnchorValue", "parameters": "(double value)", "modifiers": "public", "return": "void", "signature": "void setAnchorValue(double value)", "full_signature": "public void setAnchorValue(double value)", "class_method_signature": "CategoryPlot.setAnchorValue(double value)", "testcase": false, "constructor": false}, {"identifier": "setAnchorValue", "parameters": "(double value, boolean notify)", "modifiers": "public", "return": "void", "signature": "void setAnchorValue(double value, boolean notify)", "full_signature": "public void setAnchorValue(double value, boolean notify)", "class_method_signature": "CategoryPlot.setAnchorValue(double value, boolean notify)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "CategoryPlot.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object clone()", "full_signature": "public Object clone()", "class_method_signature": "CategoryPlot.clone()", "testcase": false, "constructor": false}, {"identifier": "cloneMarkerMap", "parameters": "(Map map)", "modifiers": "private", "return": "Map", "signature": "Map cloneMarkerMap(Map map)", "full_signature": "private Map cloneMarkerMap(Map map)", "class_method_signature": "CategoryPlot.cloneMarkerMap(Map map)", "testcase": false, "constructor": false}, {"identifier": "writeObject", "parameters": "(ObjectOutputStream stream)", "modifiers": "private", "return": "void", "signature": "void writeObject(ObjectOutputStream stream)", "full_signature": "private void writeObject(ObjectOutputStream stream)", "class_method_signature": "CategoryPlot.writeObject(ObjectOutputStream stream)", "testcase": false, "constructor": false}, {"identifier": "readObject", "parameters": "(ObjectInputStream stream)", "modifiers": "private", "return": "void", "signature": "void readObject(ObjectInputStream stream)", "full_signature": "private void readObject(ObjectInputStream stream)", "class_method_signature": "CategoryPlot.readObject(ObjectInputStream stream)", "testcase": false, "constructor": false}, {"identifier": "canSelectByPoint", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean canSelectByPoint()", "full_signature": "public boolean canSelectByPoint()", "class_method_signature": "CategoryPlot.canSelectByPoint()", "testcase": false, "constructor": false}, {"identifier": "canSelectByRegion", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean canSelectByRegion()", "full_signature": "public boolean canSelectByRegion()", "class_method_signature": "CategoryPlot.canSelectByRegion()", "testcase": false, "constructor": false}, {"identifier": "select", "parameters": "(double x, double y, Rectangle2D dataArea,\n            RenderingSource source)", "modifiers": "public", "return": "void", "signature": "void select(double x, double y, Rectangle2D dataArea,\n            RenderingSource source)", "full_signature": "public void select(double x, double y, Rectangle2D dataArea,\n            RenderingSource source)", "class_method_signature": "CategoryPlot.select(double x, double y, Rectangle2D dataArea,\n            RenderingSource source)", "testcase": false, "constructor": false}, {"identifier": "select", "parameters": "(GeneralPath region, Rectangle2D dataArea,\n            RenderingSource source)", "modifiers": "public", "return": "void", "signature": "void select(GeneralPath region, Rectangle2D dataArea,\n            RenderingSource source)", "full_signature": "public void select(GeneralPath region, Rectangle2D dataArea,\n            RenderingSource source)", "class_method_signature": "CategoryPlot.select(GeneralPath region, Rectangle2D dataArea,\n            RenderingSource source)", "testcase": false, "constructor": false}, {"identifier": "clearSelection", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearSelection()", "full_signature": "public void clearSelection()", "class_method_signature": "CategoryPlot.clearSelection()", "testcase": false, "constructor": false}, {"identifier": "findSelectionStateForDataset", "parameters": "(\n            CategoryDataset dataset, Object source)", "modifiers": "private", "return": "CategoryDatasetSelectionState", "signature": "CategoryDatasetSelectionState findSelectionStateForDataset(\n            CategoryDataset dataset, Object source)", "full_signature": "private CategoryDatasetSelectionState findSelectionStateForDataset(\n            CategoryDataset dataset, Object source)", "class_method_signature": "CategoryPlot.findSelectionStateForDataset(\n            CategoryDataset dataset, Object source)", "testcase": false, "constructor": false}], "file": "source/org/jfree/chart/plot/CategoryPlot.java"}, "focal_method": {"identifier": "addRangeMarker", "parameters": "(Marker marker)", "modifiers": "public", "return": "void", "body": "public void addRangeMarker(Marker marker) {\n        addRangeMarker(marker, Layer.FOREGROUND);\n    }", "signature": "void addRangeMarker(Marker marker)", "full_signature": "public void addRangeMarker(Marker marker)", "class_method_signature": "CategoryPlot.addRangeMarker(Marker marker)", "testcase": false, "constructor": false, "invocations": ["addRangeMarker"]}, "repository": {"repo_id": "Chart_1_buggy"}}