{"test_class": {"identifier": "XYIntervalSeriesTests", "superclass": "extends TestCase", "interfaces": "implements SeriesChangeListener", "fields": [{"original_string": "SeriesChangeEvent lastEvent;", "modifier": "", "type": "SeriesChangeEvent", "declarator": "lastEvent", "var_name": "lastEvent"}, {"original_string": "private static final double EPSILON = 0.0000000001;", "modifier": "private static final", "type": "double", "declarator": "EPSILON = 0.0000000001", "var_name": "EPSILON"}], "file": "tests/org/jfree/data/xy/junit/XYIntervalSeriesTests.java"}, "test_case": {"identifier": "testClear", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testClear() {\n        XYIntervalSeries s1 = new XYIntervalSeries(\"S1\");\n        s1.addChangeListener(this);\n        s1.clear();\n        assertNull(this.lastEvent);\n        assertTrue(s1.isEmpty());\n        s1.add(1.0, 2.0, 3.0, 4.0, 5.0, 6.0);\n        assertFalse(s1.isEmpty());\n        s1.clear();\n        assertNotNull(this.lastEvent);\n        assertTrue(s1.isEmpty());\n    }", "signature": "void testClear()", "full_signature": "public void testClear()", "class_method_signature": "XYIntervalSeriesTests.testClear()", "testcase": true, "constructor": false, "invocations": ["addChangeListener", "clear", "assertNull", "assertTrue", "isEmpty", "add", "assertFalse", "isEmpty", "clear", "assertNotNull", "assertTrue", "isEmpty"]}, "focal_class": {"identifier": "XYIntervalSeries", "superclass": "extends ComparableObjectSeries", "interfaces": "", "fields": [], "methods": [{"identifier": "XYIntervalSeries", "parameters": "(Comparable key)", "modifiers": "public", "return": "", "signature": " XYIntervalSeries(Comparable key)", "full_signature": "public  XYIntervalSeries(Comparable key)", "class_method_signature": "XYIntervalSeries.XYIntervalSeries(Comparable key)", "testcase": false, "constructor": true}, {"identifier": "XYIntervalSeries", "parameters": "(Comparable key, boolean autoSort,\n            boolean allowDuplicateXValues)", "modifiers": "public", "return": "", "signature": " XYIntervalSeries(Comparable key, boolean autoSort,\n            boolean allowDuplicateXValues)", "full_signature": "public  XYIntervalSeries(Comparable key, boolean autoSort,\n            boolean allowDuplicateXValues)", "class_method_signature": "XYIntervalSeries.XYIntervalSeries(Comparable key, boolean autoSort,\n            boolean allowDuplicateXValues)", "testcase": false, "constructor": true}, {"identifier": "add", "parameters": "(double x, double xLow, double xHigh, double y, double yLow,\n            double yHigh)", "modifiers": "public", "return": "void", "signature": "void add(double x, double xLow, double xHigh, double y, double yLow,\n            double yHigh)", "full_signature": "public void add(double x, double xLow, double xHigh, double y, double yLow,\n            double yHigh)", "class_method_signature": "XYIntervalSeries.add(double x, double xLow, double xHigh, double y, double yLow,\n            double yHigh)", "testcase": false, "constructor": false}, {"identifier": "getX", "parameters": "(int index)", "modifiers": "public", "return": "Number", "signature": "Number getX(int index)", "full_signature": "public Number getX(int index)", "class_method_signature": "XYIntervalSeries.getX(int index)", "testcase": false, "constructor": false}, {"identifier": "getXLowValue", "parameters": "(int index)", "modifiers": "public", "return": "double", "signature": "double getXLowValue(int index)", "full_signature": "public double getXLowValue(int index)", "class_method_signature": "XYIntervalSeries.getXLowValue(int index)", "testcase": false, "constructor": false}, {"identifier": "getXHighValue", "parameters": "(int index)", "modifiers": "public", "return": "double", "signature": "double getXHighValue(int index)", "full_signature": "public double getXHighValue(int index)", "class_method_signature": "XYIntervalSeries.getXHighValue(int index)", "testcase": false, "constructor": false}, {"identifier": "getYValue", "parameters": "(int index)", "modifiers": "public", "return": "double", "signature": "double getYValue(int index)", "full_signature": "public double getYValue(int index)", "class_method_signature": "XYIntervalSeries.getYValue(int index)", "testcase": false, "constructor": false}, {"identifier": "getYLowValue", "parameters": "(int index)", "modifiers": "public", "return": "double", "signature": "double getYLowValue(int index)", "full_signature": "public double getYLowValue(int index)", "class_method_signature": "XYIntervalSeries.getYLowValue(int index)", "testcase": false, "constructor": false}, {"identifier": "getYHighValue", "parameters": "(int index)", "modifiers": "public", "return": "double", "signature": "double getYHighValue(int index)", "full_signature": "public double getYHighValue(int index)", "class_method_signature": "XYIntervalSeries.getYHighValue(int index)", "testcase": false, "constructor": false}, {"identifier": "getDataItem", "parameters": "(int index)", "modifiers": "public", "return": "ComparableObjectItem", "signature": "ComparableObjectItem getDataItem(int index)", "full_signature": "public ComparableObjectItem getDataItem(int index)", "class_method_signature": "XYIntervalSeries.getDataItem(int index)", "testcase": false, "constructor": false}], "file": "source/org/jfree/data/xy/XYIntervalSeries.java"}, "focal_method": {"identifier": "add", "parameters": "(double x, double xLow, double xHigh, double y, double yLow,\n            double yHigh)", "modifiers": "public", "return": "void", "body": "public void add(double x, double xLow, double xHigh, double y, double yLow,\n            double yHigh) {\n        super.add(new XYIntervalDataItem(x, xLow, xHigh, y, yLow, yHigh), true);\n    }", "signature": "void add(double x, double xLow, double xHigh, double y, double yLow,\n            double yHigh)", "full_signature": "public void add(double x, double xLow, double xHigh, double y, double yLow,\n            double yHigh)", "class_method_signature": "XYIntervalSeries.add(double x, double xLow, double xHigh, double y, double yLow,\n            double yHigh)", "testcase": false, "constructor": false, "invocations": ["add"]}, "repository": {"repo_id": "Chart_1_buggy"}}