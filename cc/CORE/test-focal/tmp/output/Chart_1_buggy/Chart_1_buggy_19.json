{"test_class": {"identifier": "ArcDialFrameTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/chart/plot/dial/junit/ArcDialFrameTests.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testEquals() {\n        ArcDialFrame f1 = new ArcDialFrame();\n        ArcDialFrame f2 = new ArcDialFrame();\n        assertTrue(f1.equals(f2));\n\n        // background paint\n        f1.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.red,\n                3.0f, 4.0f, Color.yellow));\n        assertFalse(f1.equals(f2));\n        f2.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.red,\n                3.0f, 4.0f, Color.yellow));\n        assertTrue(f1.equals(f2));\n\n        // foreground paint\n        f1.setForegroundPaint(new GradientPaint(1.0f, 2.0f, Color.red,\n                3.0f, 4.0f, Color.yellow));\n        assertFalse(f1.equals(f2));\n        f2.setForegroundPaint(new GradientPaint(1.0f, 2.0f, Color.red,\n                3.0f, 4.0f, Color.yellow));\n        assertTrue(f1.equals(f2));\n\n        // stroke\n        f1.setStroke(new BasicStroke(1.1f));\n        assertFalse(f1.equals(f2));\n        f2.setStroke(new BasicStroke(1.1f));\n        assertTrue(f1.equals(f2));\n\n        // inner radius\n        f1.setInnerRadius(0.11);\n        assertFalse(f1.equals(f2));\n        f2.setInnerRadius(0.11);\n        assertTrue(f1.equals(f2));\n\n        // outer radius\n        f1.setOuterRadius(0.88);\n        assertFalse(f1.equals(f2));\n        f2.setOuterRadius(0.88);\n        assertTrue(f1.equals(f2));\n\n        // startAngle\n        f1.setStartAngle(99);\n        assertFalse(f1.equals(f2));\n        f2.setStartAngle(99);\n        assertTrue(f1.equals(f2));\n\n        // extent\n        f1.setExtent(33);\n        assertFalse(f1.equals(f2));\n        f2.setExtent(33);\n        assertTrue(f1.equals(f2));\n\n        // check an inherited attribute\n        f1.setVisible(false);\n        assertFalse(f1.equals(f2));\n        f2.setVisible(false);\n        assertTrue(f1.equals(f2));\n    }", "signature": "void testEquals()", "full_signature": "public void testEquals()", "class_method_signature": "ArcDialFrameTests.testEquals()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "equals", "setBackgroundPaint", "assertFalse", "equals", "setBackgroundPaint", "assertTrue", "equals", "setForegroundPaint", "assertFalse", "equals", "setForegroundPaint", "assertTrue", "equals", "setStroke", "assertFalse", "equals", "setStroke", "assertTrue", "equals", "setInnerRadius", "assertFalse", "equals", "setInnerRadius", "assertTrue", "equals", "setOuterRadius", "assertFalse", "equals", "setOuterRadius", "assertTrue", "equals", "setStartAngle", "assertFalse", "equals", "setStartAngle", "assertTrue", "equals", "setExtent", "assertFalse", "equals", "setExtent", "assertTrue", "equals", "setVisible", "assertFalse", "equals", "setVisible", "assertTrue", "equals"]}, "focal_class": {"identifier": "ArcDialFrame", "superclass": "extends AbstractDialLayer", "interfaces": "implements DialFrame,\n        Cloneable, PublicCloneable, Serializable", "fields": [{"original_string": "static final long serialVersionUID = -4089176959553523499L;", "modifier": "static final", "type": "long", "declarator": "serialVersionUID = -4089176959553523499L", "var_name": "serialVersionUID"}, {"original_string": "private transient Paint backgroundPaint;", "modifier": "private transient", "type": "Paint", "declarator": "backgroundPaint", "var_name": "backgroundPaint"}, {"original_string": "private transient Paint foregroundPaint;", "modifier": "private transient", "type": "Paint", "declarator": "foregroundPaint", "var_name": "foregroundPaint"}, {"original_string": "private transient Stroke stroke;", "modifier": "private transient", "type": "Stroke", "declarator": "stroke", "var_name": "stroke"}, {"original_string": "private double startAngle;", "modifier": "private", "type": "double", "declarator": "startAngle", "var_name": "startAngle"}, {"original_string": "private double extent;", "modifier": "private", "type": "double", "declarator": "extent", "var_name": "extent"}, {"original_string": "private double innerRadius;", "modifier": "private", "type": "double", "declarator": "innerRadius", "var_name": "innerRadius"}, {"original_string": "private double outerRadius;", "modifier": "private", "type": "double", "declarator": "outerRadius", "var_name": "outerRadius"}], "methods": [{"identifier": "ArcDialFrame", "parameters": "()", "modifiers": "public", "return": "", "signature": " ArcDialFrame()", "full_signature": "public  ArcDialFrame()", "class_method_signature": "ArcDialFrame.ArcDialFrame()", "testcase": false, "constructor": true}, {"identifier": "ArcDialFrame", "parameters": "(double startAngle, double extent)", "modifiers": "public", "return": "", "signature": " ArcDialFrame(double startAngle, double extent)", "full_signature": "public  ArcDialFrame(double startAngle, double extent)", "class_method_signature": "ArcDialFrame.ArcDialFrame(double startAngle, double extent)", "testcase": false, "constructor": true}, {"identifier": "getBackgroundPaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getBackgroundPaint()", "full_signature": "public Paint getBackgroundPaint()", "class_method_signature": "ArcDialFrame.getBackgroundPaint()", "testcase": false, "constructor": false}, {"identifier": "setBackgroundPaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setBackgroundPaint(Paint paint)", "full_signature": "public void setBackgroundPaint(Paint paint)", "class_method_signature": "ArcDialFrame.setBackgroundPaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "getForegroundPaint", "parameters": "()", "modifiers": "public", "return": "Paint", "signature": "Paint getForegroundPaint()", "full_signature": "public Paint getForegroundPaint()", "class_method_signature": "ArcDialFrame.getForegroundPaint()", "testcase": false, "constructor": false}, {"identifier": "setForegroundPaint", "parameters": "(Paint paint)", "modifiers": "public", "return": "void", "signature": "void setForegroundPaint(Paint paint)", "full_signature": "public void setForegroundPaint(Paint paint)", "class_method_signature": "ArcDialFrame.setForegroundPaint(Paint paint)", "testcase": false, "constructor": false}, {"identifier": "getStroke", "parameters": "()", "modifiers": "public", "return": "Stroke", "signature": "Stroke getStroke()", "full_signature": "public Stroke getStroke()", "class_method_signature": "ArcDialFrame.getStroke()", "testcase": false, "constructor": false}, {"identifier": "setStroke", "parameters": "(Stroke stroke)", "modifiers": "public", "return": "void", "signature": "void setStroke(Stroke stroke)", "full_signature": "public void setStroke(Stroke stroke)", "class_method_signature": "ArcDialFrame.setStroke(Stroke stroke)", "testcase": false, "constructor": false}, {"identifier": "getInnerRadius", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getInnerRadius()", "full_signature": "public double getInnerRadius()", "class_method_signature": "ArcDialFrame.getInnerRadius()", "testcase": false, "constructor": false}, {"identifier": "setInnerRadius", "parameters": "(double radius)", "modifiers": "public", "return": "void", "signature": "void setInnerRadius(double radius)", "full_signature": "public void setInnerRadius(double radius)", "class_method_signature": "ArcDialFrame.setInnerRadius(double radius)", "testcase": false, "constructor": false}, {"identifier": "getOuterRadius", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getOuterRadius()", "full_signature": "public double getOuterRadius()", "class_method_signature": "ArcDialFrame.getOuterRadius()", "testcase": false, "constructor": false}, {"identifier": "setOuterRadius", "parameters": "(double radius)", "modifiers": "public", "return": "void", "signature": "void setOuterRadius(double radius)", "full_signature": "public void setOuterRadius(double radius)", "class_method_signature": "ArcDialFrame.setOuterRadius(double radius)", "testcase": false, "constructor": false}, {"identifier": "getStartAngle", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getStartAngle()", "full_signature": "public double getStartAngle()", "class_method_signature": "ArcDialFrame.getStartAngle()", "testcase": false, "constructor": false}, {"identifier": "setStartAngle", "parameters": "(double angle)", "modifiers": "public", "return": "void", "signature": "void setStartAngle(double angle)", "full_signature": "public void setStartAngle(double angle)", "class_method_signature": "ArcDialFrame.setStartAngle(double angle)", "testcase": false, "constructor": false}, {"identifier": "getExtent", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getExtent()", "full_signature": "public double getExtent()", "class_method_signature": "ArcDialFrame.getExtent()", "testcase": false, "constructor": false}, {"identifier": "setExtent", "parameters": "(double extent)", "modifiers": "public", "return": "void", "signature": "void setExtent(double extent)", "full_signature": "public void setExtent(double extent)", "class_method_signature": "ArcDialFrame.setExtent(double extent)", "testcase": false, "constructor": false}, {"identifier": "getWindow", "parameters": "(Rectangle2D frame)", "modifiers": "public", "return": "Shape", "signature": "Shape getWindow(Rectangle2D frame)", "full_signature": "public Shape getWindow(Rectangle2D frame)", "class_method_signature": "ArcDialFrame.getWindow(Rectangle2D frame)", "testcase": false, "constructor": false}, {"identifier": "getOuterWindow", "parameters": "(Rectangle2D frame)", "modifiers": "protected", "return": "Shape", "signature": "Shape getOuterWindow(Rectangle2D frame)", "full_signature": "protected Shape getOuterWindow(Rectangle2D frame)", "class_method_signature": "ArcDialFrame.getOuterWindow(Rectangle2D frame)", "testcase": false, "constructor": false}, {"identifier": "draw", "parameters": "(Graphics2D g2, DialPlot plot, Rectangle2D frame,\n            Rectangle2D view)", "modifiers": "public", "return": "void", "signature": "void draw(Graphics2D g2, DialPlot plot, Rectangle2D frame,\n            Rectangle2D view)", "full_signature": "public void draw(Graphics2D g2, DialPlot plot, Rectangle2D frame,\n            Rectangle2D view)", "class_method_signature": "ArcDialFrame.draw(Graphics2D g2, DialPlot plot, Rectangle2D frame,\n            Rectangle2D view)", "testcase": false, "constructor": false}, {"identifier": "isClippedToWindow", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isClippedToWindow()", "full_signature": "public boolean isClippedToWindow()", "class_method_signature": "ArcDialFrame.isClippedToWindow()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "ArcDialFrame.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "ArcDialFrame.hashCode()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object clone()", "full_signature": "public Object clone()", "class_method_signature": "ArcDialFrame.clone()", "testcase": false, "constructor": false}, {"identifier": "writeObject", "parameters": "(ObjectOutputStream stream)", "modifiers": "private", "return": "void", "signature": "void writeObject(ObjectOutputStream stream)", "full_signature": "private void writeObject(ObjectOutputStream stream)", "class_method_signature": "ArcDialFrame.writeObject(ObjectOutputStream stream)", "testcase": false, "constructor": false}, {"identifier": "readObject", "parameters": "(ObjectInputStream stream)", "modifiers": "private", "return": "void", "signature": "void readObject(ObjectInputStream stream)", "full_signature": "private void readObject(ObjectInputStream stream)", "class_method_signature": "ArcDialFrame.readObject(ObjectInputStream stream)", "testcase": false, "constructor": false}], "file": "source/org/jfree/chart/plot/dial/ArcDialFrame.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "body": "public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof ArcDialFrame)) {\n            return false;\n        }\n        ArcDialFrame that = (ArcDialFrame) obj;\n        if (!PaintUtilities.equal(this.backgroundPaint, that.backgroundPaint)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.foregroundPaint, that.foregroundPaint)) {\n            return false;\n        }\n        if (this.startAngle != that.startAngle) {\n            return false;\n        }\n        if (this.extent != that.extent) {\n            return false;\n        }\n        if (this.innerRadius != that.innerRadius) {\n            return false;\n        }\n        if (this.outerRadius != that.outerRadius) {\n            return false;\n        }\n        if (!this.stroke.equals(that.stroke)) {\n            return false;\n        }\n        return super.equals(obj);\n    }", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "ArcDialFrame.equals(Object obj)", "testcase": false, "constructor": false, "invocations": ["equal", "equal", "equals", "equals"]}, "repository": {"repo_id": "Chart_1_buggy"}}