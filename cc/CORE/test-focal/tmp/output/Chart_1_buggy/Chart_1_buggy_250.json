{"test_class": {"identifier": "XYSplineRendererTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/chart/renderer/xy/junit/XYSplineRendererTests.java"}, "test_case": {"identifier": "testHashcode", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testHashcode() {\n        XYSplineRenderer r1 = new XYSplineRenderer();\n        XYSplineRenderer r2 = new XYSplineRenderer();\n        assertTrue(r1.equals(r2));\n        int h1 = r1.hashCode();\n        int h2 = r2.hashCode();\n        assertEquals(h1, h2);\n    }", "signature": "void testHashcode()", "full_signature": "public void testHashcode()", "class_method_signature": "XYSplineRendererTests.testHashcode()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "equals", "hashCode", "hashCode", "assertEquals"]}, "focal_class": {"identifier": "XYSplineRenderer", "superclass": "extends XYLineAndShapeRenderer", "interfaces": "", "fields": [{"original_string": "private Vector points;", "modifier": "private", "type": "Vector", "declarator": "points", "var_name": "points"}, {"original_string": "private int precision;", "modifier": "private", "type": "int", "declarator": "precision", "var_name": "precision"}], "methods": [{"identifier": "XYSplineRenderer", "parameters": "()", "modifiers": "public", "return": "", "signature": " XYSplineRenderer()", "full_signature": "public  XYSplineRenderer()", "class_method_signature": "XYSplineRenderer.XYSplineRenderer()", "testcase": false, "constructor": true}, {"identifier": "XYSplineRenderer", "parameters": "(int precision)", "modifiers": "public", "return": "", "signature": " XYSplineRenderer(int precision)", "full_signature": "public  XYSplineRenderer(int precision)", "class_method_signature": "XYSplineRenderer.XYSplineRenderer(int precision)", "testcase": false, "constructor": true}, {"identifier": "getPrecision", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getPrecision()", "full_signature": "public int getPrecision()", "class_method_signature": "XYSplineRenderer.getPrecision()", "testcase": false, "constructor": false}, {"identifier": "setPrecision", "parameters": "(int p)", "modifiers": "public", "return": "void", "signature": "void setPrecision(int p)", "full_signature": "public void setPrecision(int p)", "class_method_signature": "XYSplineRenderer.setPrecision(int p)", "testcase": false, "constructor": false}, {"identifier": "initialise", "parameters": "(Graphics2D g2, Rectangle2D dataArea,\n            XYPlot plot, XYDataset data, PlotRenderingInfo info)", "modifiers": "public", "return": "XYItemRendererState", "signature": "XYItemRendererState initialise(Graphics2D g2, Rectangle2D dataArea,\n            XYPlot plot, XYDataset data, PlotRenderingInfo info)", "full_signature": "public XYItemRendererState initialise(Graphics2D g2, Rectangle2D dataArea,\n            XYPlot plot, XYDataset data, PlotRenderingInfo info)", "class_method_signature": "XYSplineRenderer.initialise(Graphics2D g2, Rectangle2D dataArea,\n            XYPlot plot, XYDataset data, PlotRenderingInfo info)", "testcase": false, "constructor": false}, {"identifier": "drawPrimaryLineAsPath", "parameters": "(XYItemRendererState state,\n            Graphics2D g2, XYPlot plot, XYDataset dataset, int pass,\n            int series, int item, boolean selected, ValueAxis domainAxis,\n            ValueAxis rangeAxis, Rectangle2D dataArea)", "modifiers": "protected", "return": "void", "signature": "void drawPrimaryLineAsPath(XYItemRendererState state,\n            Graphics2D g2, XYPlot plot, XYDataset dataset, int pass,\n            int series, int item, boolean selected, ValueAxis domainAxis,\n            ValueAxis rangeAxis, Rectangle2D dataArea)", "full_signature": "protected void drawPrimaryLineAsPath(XYItemRendererState state,\n            Graphics2D g2, XYPlot plot, XYDataset dataset, int pass,\n            int series, int item, boolean selected, ValueAxis domainAxis,\n            ValueAxis rangeAxis, Rectangle2D dataArea)", "class_method_signature": "XYSplineRenderer.drawPrimaryLineAsPath(XYItemRendererState state,\n            Graphics2D g2, XYPlot plot, XYDataset dataset, int pass,\n            int series, int item, boolean selected, ValueAxis domainAxis,\n            ValueAxis rangeAxis, Rectangle2D dataArea)", "testcase": false, "constructor": false}, {"identifier": "solveTridiag", "parameters": "(float[] sub, float[] diag, float[] sup,\n            float[] b, int n)", "modifiers": "private", "return": "void", "signature": "void solveTridiag(float[] sub, float[] diag, float[] sup,\n            float[] b, int n)", "full_signature": "private void solveTridiag(float[] sub, float[] diag, float[] sup,\n            float[] b, int n)", "class_method_signature": "XYSplineRenderer.solveTridiag(float[] sub, float[] diag, float[] sup,\n            float[] b, int n)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "XYSplineRenderer.equals(Object obj)", "testcase": false, "constructor": false}], "file": "source/org/jfree/chart/renderer/xy/XYSplineRenderer.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "body": "public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof XYSplineRenderer)) {\n            return false;\n        }\n        XYSplineRenderer that = (XYSplineRenderer) obj;\n        if (this.precision != that.precision) {\n            return false;\n        }\n        return super.equals(obj);\n    }", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "XYSplineRenderer.equals(Object obj)", "testcase": false, "constructor": false, "invocations": ["equals"]}, "repository": {"repo_id": "Chart_1_buggy"}}