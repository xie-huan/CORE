{"test_class": {"identifier": "StackedAreaRendererTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/chart/renderer/category/junit/StackedAreaRendererTests.java"}, "test_case": {"identifier": "testHashcode", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testHashcode() {\n        StackedAreaRenderer r1 = new StackedAreaRenderer();\n        StackedAreaRenderer r2 = new StackedAreaRenderer();\n        assertTrue(r1.equals(r2));\n        int h1 = r1.hashCode();\n        int h2 = r2.hashCode();\n        assertEquals(h1, h2);\n    }", "signature": "void testHashcode()", "full_signature": "public void testHashcode()", "class_method_signature": "StackedAreaRendererTests.testHashcode()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "equals", "hashCode", "hashCode", "assertEquals"]}, "focal_class": {"identifier": "StackedAreaRenderer", "superclass": "extends AreaRenderer", "interfaces": "implements Cloneable, PublicCloneable, Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -3595635038460823663L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -3595635038460823663L", "var_name": "serialVersionUID"}, {"original_string": "private boolean renderAsPercentages;", "modifier": "private", "type": "boolean", "declarator": "renderAsPercentages", "var_name": "renderAsPercentages"}], "methods": [{"identifier": "StackedAreaRenderer", "parameters": "()", "modifiers": "public", "return": "", "signature": " StackedAreaRenderer()", "full_signature": "public  StackedAreaRenderer()", "class_method_signature": "StackedAreaRenderer.StackedAreaRenderer()", "testcase": false, "constructor": true}, {"identifier": "StackedAreaRenderer", "parameters": "(boolean renderAsPercentages)", "modifiers": "public", "return": "", "signature": " StackedAreaRenderer(boolean renderAsPercentages)", "full_signature": "public  StackedAreaRenderer(boolean renderAsPercentages)", "class_method_signature": "StackedAreaRenderer.StackedAreaRenderer(boolean renderAsPercentages)", "testcase": false, "constructor": true}, {"identifier": "getRenderAsPercentages", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getRenderAsPercentages()", "full_signature": "public boolean getRenderAsPercentages()", "class_method_signature": "StackedAreaRenderer.getRenderAsPercentages()", "testcase": false, "constructor": false}, {"identifier": "setRenderAsPercentages", "parameters": "(boolean asPercentages)", "modifiers": "public", "return": "void", "signature": "void setRenderAsPercentages(boolean asPercentages)", "full_signature": "public void setRenderAsPercentages(boolean asPercentages)", "class_method_signature": "StackedAreaRenderer.setRenderAsPercentages(boolean asPercentages)", "testcase": false, "constructor": false}, {"identifier": "getPassCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getPassCount()", "full_signature": "public int getPassCount()", "class_method_signature": "StackedAreaRenderer.getPassCount()", "testcase": false, "constructor": false}, {"identifier": "findRangeBounds", "parameters": "(CategoryDataset dataset)", "modifiers": "public", "return": "Range", "signature": "Range findRangeBounds(CategoryDataset dataset)", "full_signature": "public Range findRangeBounds(CategoryDataset dataset)", "class_method_signature": "StackedAreaRenderer.findRangeBounds(CategoryDataset dataset)", "testcase": false, "constructor": false}, {"identifier": "drawItem", "parameters": "(Graphics2D g2, CategoryItemRendererState state,\n            Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,\n            ValueAxis rangeAxis, CategoryDataset dataset, int row, int column,\n            boolean selected, int pass)", "modifiers": "public", "return": "void", "signature": "void drawItem(Graphics2D g2, CategoryItemRendererState state,\n            Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,\n            ValueAxis rangeAxis, CategoryDataset dataset, int row, int column,\n            boolean selected, int pass)", "full_signature": "public void drawItem(Graphics2D g2, CategoryItemRendererState state,\n            Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,\n            ValueAxis rangeAxis, CategoryDataset dataset, int row, int column,\n            boolean selected, int pass)", "class_method_signature": "StackedAreaRenderer.drawItem(Graphics2D g2, CategoryItemRendererState state,\n            Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,\n            ValueAxis rangeAxis, CategoryDataset dataset, int row, int column,\n            boolean selected, int pass)", "testcase": false, "constructor": false}, {"identifier": "getPreviousHeight", "parameters": "(CategoryDataset dataset,\n                                       int series, int category)", "modifiers": "protected", "return": "double", "signature": "double getPreviousHeight(CategoryDataset dataset,\n                                       int series, int category)", "full_signature": "protected double getPreviousHeight(CategoryDataset dataset,\n                                       int series, int category)", "class_method_signature": "StackedAreaRenderer.getPreviousHeight(CategoryDataset dataset,\n                                       int series, int category)", "testcase": false, "constructor": false}, {"identifier": "getStackValues", "parameters": "(CategoryDataset dataset,\n            int series, int index)", "modifiers": "protected", "return": "double[]", "signature": "double[] getStackValues(CategoryDataset dataset,\n            int series, int index)", "full_signature": "protected double[] getStackValues(CategoryDataset dataset,\n            int series, int index)", "class_method_signature": "StackedAreaRenderer.getStackValues(CategoryDataset dataset,\n            int series, int index)", "testcase": false, "constructor": false}, {"identifier": "averageStackValues", "parameters": "(double[] stack1, double[] stack2)", "modifiers": "private", "return": "double[]", "signature": "double[] averageStackValues(double[] stack1, double[] stack2)", "full_signature": "private double[] averageStackValues(double[] stack1, double[] stack2)", "class_method_signature": "StackedAreaRenderer.averageStackValues(double[] stack1, double[] stack2)", "testcase": false, "constructor": false}, {"identifier": "adjustedStackValues", "parameters": "(double[] stack1, double[] stack2)", "modifiers": "private", "return": "double[]", "signature": "double[] adjustedStackValues(double[] stack1, double[] stack2)", "full_signature": "private double[] adjustedStackValues(double[] stack1, double[] stack2)", "class_method_signature": "StackedAreaRenderer.adjustedStackValues(double[] stack1, double[] stack2)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "StackedAreaRenderer.equals(Object obj)", "testcase": false, "constructor": false}], "file": "source/org/jfree/chart/renderer/category/StackedAreaRenderer.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "body": "public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof StackedAreaRenderer)) {\n            return false;\n        }\n        StackedAreaRenderer that = (StackedAreaRenderer) obj;\n        if (this.renderAsPercentages != that.renderAsPercentages) {\n            return false;\n        }\n        return super.equals(obj);\n    }", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "StackedAreaRenderer.equals(Object obj)", "testcase": false, "constructor": false, "invocations": ["equals"]}, "repository": {"repo_id": "Chart_1_buggy"}}