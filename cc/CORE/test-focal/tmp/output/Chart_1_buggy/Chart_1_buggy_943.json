{"test_class": {"identifier": "YearTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/data/time/junit/YearTests.java"}, "test_case": {"identifier": "testGetLastMillisecondWithCalendar", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testGetLastMillisecondWithCalendar() {\n        Year y = new Year(2001);\n        GregorianCalendar calendar = new GregorianCalendar(Locale.GERMANY);\n        calendar.setTimeZone(TimeZone.getTimeZone(\"Europe/Frankfurt\"));\n        assertEquals(1009843199999L, y.getLastMillisecond(calendar));\n\n        // try null calendar\n        boolean pass = false;\n        try {\n            y.getLastMillisecond((Calendar) null);\n        }\n        catch (NullPointerException e) {\n            pass = true;\n        }\n        assertTrue(pass);\n    }", "signature": "void testGetLastMillisecondWithCalendar()", "full_signature": "public void testGetLastMillisecondWithCalendar()", "class_method_signature": "YearTests.testGetLastMillisecondWithCalendar()", "testcase": true, "constructor": false, "invocations": ["setTimeZone", "getTimeZone", "assertEquals", "getLastMillisecond", "getLastMillisecond", "assertTrue"]}, "focal_class": {"identifier": "Year", "superclass": "extends RegularTimePeriod", "interfaces": "implements Serializable", "fields": [{"original_string": "public static final int MINIMUM_YEAR = -9999;", "modifier": "public static final", "type": "int", "declarator": "MINIMUM_YEAR = -9999", "var_name": "MINIMUM_YEAR"}, {"original_string": "public static final int MAXIMUM_YEAR = 9999;", "modifier": "public static final", "type": "int", "declarator": "MAXIMUM_YEAR = 9999", "var_name": "MAXIMUM_YEAR"}, {"original_string": "private static final long serialVersionUID = -7659990929736074836L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -7659990929736074836L", "var_name": "serialVersionUID"}, {"original_string": "private short year;", "modifier": "private", "type": "short", "declarator": "year", "var_name": "year"}, {"original_string": "private long firstMillisecond;", "modifier": "private", "type": "long", "declarator": "firstMillisecond", "var_name": "firstMillisecond"}, {"original_string": "private long lastMillisecond;", "modifier": "private", "type": "long", "declarator": "lastMillisecond", "var_name": "lastMillisecond"}], "methods": [{"identifier": "Year", "parameters": "()", "modifiers": "public", "return": "", "signature": " Year()", "full_signature": "public  Year()", "class_method_signature": "Year.Year()", "testcase": false, "constructor": true}, {"identifier": "Year", "parameters": "(int year)", "modifiers": "public", "return": "", "signature": " Year(int year)", "full_signature": "public  Year(int year)", "class_method_signature": "Year.Year(int year)", "testcase": false, "constructor": true}, {"identifier": "Year", "parameters": "(Date time)", "modifiers": "public", "return": "", "signature": " Year(Date time)", "full_signature": "public  Year(Date time)", "class_method_signature": "Year.Year(Date time)", "testcase": false, "constructor": true}, {"identifier": "Year", "parameters": "(Date time, TimeZone zone)", "modifiers": "public", "return": "", "signature": " Year(Date time, TimeZone zone)", "full_signature": "public  Year(Date time, TimeZone zone)", "class_method_signature": "Year.Year(Date time, TimeZone zone)", "testcase": false, "constructor": true}, {"identifier": "Year", "parameters": "(Date time, TimeZone zone, Locale locale)", "modifiers": "public", "return": "", "signature": " Year(Date time, TimeZone zone, Locale locale)", "full_signature": "public  Year(Date time, TimeZone zone, Locale locale)", "class_method_signature": "Year.Year(Date time, TimeZone zone, Locale locale)", "testcase": false, "constructor": true}, {"identifier": "getYear", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getYear()", "full_signature": "public int getYear()", "class_method_signature": "Year.getYear()", "testcase": false, "constructor": false}, {"identifier": "getFirstMillisecond", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getFirstMillisecond()", "full_signature": "public long getFirstMillisecond()", "class_method_signature": "Year.getFirstMillisecond()", "testcase": false, "constructor": false}, {"identifier": "getLastMillisecond", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getLastMillisecond()", "full_signature": "public long getLastMillisecond()", "class_method_signature": "Year.getLastMillisecond()", "testcase": false, "constructor": false}, {"identifier": "peg", "parameters": "(Calendar calendar)", "modifiers": "public", "return": "void", "signature": "void peg(Calendar calendar)", "full_signature": "public void peg(Calendar calendar)", "class_method_signature": "Year.peg(Calendar calendar)", "testcase": false, "constructor": false}, {"identifier": "previous", "parameters": "()", "modifiers": "public", "return": "RegularTimePeriod", "signature": "RegularTimePeriod previous()", "full_signature": "public RegularTimePeriod previous()", "class_method_signature": "Year.previous()", "testcase": false, "constructor": false}, {"identifier": "next", "parameters": "()", "modifiers": "public", "return": "RegularTimePeriod", "signature": "RegularTimePeriod next()", "full_signature": "public RegularTimePeriod next()", "class_method_signature": "Year.next()", "testcase": false, "constructor": false}, {"identifier": "getSerialIndex", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getSerialIndex()", "full_signature": "public long getSerialIndex()", "class_method_signature": "Year.getSerialIndex()", "testcase": false, "constructor": false}, {"identifier": "getFirstMillisecond", "parameters": "(Calendar calendar)", "modifiers": "public", "return": "long", "signature": "long getFirstMillisecond(Calendar calendar)", "full_signature": "public long getFirstMillisecond(Calendar calendar)", "class_method_signature": "Year.getFirstMillisecond(Calendar calendar)", "testcase": false, "constructor": false}, {"identifier": "getLastMillisecond", "parameters": "(Calendar calendar)", "modifiers": "public", "return": "long", "signature": "long getLastMillisecond(Calendar calendar)", "full_signature": "public long getLastMillisecond(Calendar calendar)", "class_method_signature": "Year.getLastMillisecond(Calendar calendar)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "Year.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "Year.hashCode()", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(Object o1)", "modifiers": "public", "return": "int", "signature": "int compareTo(Object o1)", "full_signature": "public int compareTo(Object o1)", "class_method_signature": "Year.compareTo(Object o1)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "Year.toString()", "testcase": false, "constructor": false}, {"identifier": "parseYear", "parameters": "(String s)", "modifiers": "public static", "return": "Year", "signature": "Year parseYear(String s)", "full_signature": "public static Year parseYear(String s)", "class_method_signature": "Year.parseYear(String s)", "testcase": false, "constructor": false}], "file": "source/org/jfree/data/time/Year.java"}, "focal_method": {"identifier": "getLastMillisecond", "parameters": "()", "modifiers": "public", "return": "long", "body": "public long getLastMillisecond() {\n        return this.lastMillisecond;\n    }", "signature": "long getLastMillisecond()", "full_signature": "public long getLastMillisecond()", "class_method_signature": "Year.getLastMillisecond()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": "Chart_1_buggy"}}