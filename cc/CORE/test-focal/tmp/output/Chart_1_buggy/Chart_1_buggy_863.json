{"test_class": {"identifier": "TaskSeriesCollectionTests", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "tests/org/jfree/data/gantt/junit/TaskSeriesCollectionTests.java"}, "test_case": {"identifier": "testGetValue", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void testGetValue() {\n        TaskSeriesCollection c = createCollection1();\n        assertEquals(new Long(1L), c.getValue(\"S1\", \"Task 1\"));\n        assertEquals(new Long(3L), c.getValue(\"S1\", \"Task 2\"));\n        assertEquals(new Long(5L), c.getValue(\"S2\", \"Task 3\"));\n\n        assertEquals(new Long(1L), c.getValue(0, 0));\n        assertEquals(new Long(3L), c.getValue(0, 1));\n        assertEquals(null, c.getValue(0, 2));\n        assertEquals(null, c.getValue(1, 0));\n        assertEquals(null, c.getValue(1, 1));\n        assertEquals(new Long(5L), c.getValue(1, 2));\n    }", "signature": "void testGetValue()", "full_signature": "public void testGetValue()", "class_method_signature": "TaskSeriesCollectionTests.testGetValue()", "testcase": true, "constructor": false, "invocations": ["createCollection1", "assertEquals", "getValue", "assertEquals", "getValue", "assertEquals", "getValue", "assertEquals", "getValue", "assertEquals", "getValue", "assertEquals", "getValue", "assertEquals", "getValue", "assertEquals", "getValue", "assertEquals", "getValue"]}, "focal_class": {"identifier": "TaskSeriesCollection", "superclass": "extends AbstractSeriesDataset", "interfaces": "implements GanttCategoryDataset, Cloneable, PublicCloneable,\n                   Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -2065799050738449903L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -2065799050738449903L", "var_name": "serialVersionUID"}, {"original_string": "private List keys;", "modifier": "private", "type": "List", "declarator": "keys", "var_name": "keys"}, {"original_string": "private List data;", "modifier": "private", "type": "List", "declarator": "data", "var_name": "data"}], "methods": [{"identifier": "TaskSeriesCollection", "parameters": "()", "modifiers": "public", "return": "", "signature": " TaskSeriesCollection()", "full_signature": "public  TaskSeriesCollection()", "class_method_signature": "TaskSeriesCollection.TaskSeriesCollection()", "testcase": false, "constructor": true}, {"identifier": "getSeries", "parameters": "(Comparable key)", "modifiers": "public", "return": "TaskSeries", "signature": "TaskSeries getSeries(Comparable key)", "full_signature": "public TaskSeries getSeries(Comparable key)", "class_method_signature": "TaskSeriesCollection.getSeries(Comparable key)", "testcase": false, "constructor": false}, {"identifier": "getSeries", "parameters": "(int series)", "modifiers": "public", "return": "TaskSeries", "signature": "TaskSeries getSeries(int series)", "full_signature": "public TaskSeries getSeries(int series)", "class_method_signature": "TaskSeriesCollection.getSeries(int series)", "testcase": false, "constructor": false}, {"identifier": "getSeriesCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSeriesCount()", "full_signature": "public int getSeriesCount()", "class_method_signature": "TaskSeriesCollection.getSeriesCount()", "testcase": false, "constructor": false}, {"identifier": "getSeriesKey", "parameters": "(int series)", "modifiers": "public", "return": "Comparable", "signature": "Comparable getSeriesKey(int series)", "full_signature": "public Comparable getSeriesKey(int series)", "class_method_signature": "TaskSeriesCollection.getSeriesKey(int series)", "testcase": false, "constructor": false}, {"identifier": "getRowCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getRowCount()", "full_signature": "public int getRowCount()", "class_method_signature": "TaskSeriesCollection.getRowCount()", "testcase": false, "constructor": false}, {"identifier": "getRowKeys", "parameters": "()", "modifiers": "public", "return": "List", "signature": "List getRowKeys()", "full_signature": "public List getRowKeys()", "class_method_signature": "TaskSeriesCollection.getRowKeys()", "testcase": false, "constructor": false}, {"identifier": "getColumnCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getColumnCount()", "full_signature": "public int getColumnCount()", "class_method_signature": "TaskSeriesCollection.getColumnCount()", "testcase": false, "constructor": false}, {"identifier": "getColumnKeys", "parameters": "()", "modifiers": "public", "return": "List", "signature": "List getColumnKeys()", "full_signature": "public List getColumnKeys()", "class_method_signature": "TaskSeriesCollection.getColumnKeys()", "testcase": false, "constructor": false}, {"identifier": "getColumnKey", "parameters": "(int index)", "modifiers": "public", "return": "Comparable", "signature": "Comparable getColumnKey(int index)", "full_signature": "public Comparable getColumnKey(int index)", "class_method_signature": "TaskSeriesCollection.getColumnKey(int index)", "testcase": false, "constructor": false}, {"identifier": "getColumnIndex", "parameters": "(Comparable columnKey)", "modifiers": "public", "return": "int", "signature": "int getColumnIndex(Comparable columnKey)", "full_signature": "public int getColumnIndex(Comparable columnKey)", "class_method_signature": "TaskSeriesCollection.getColumnIndex(Comparable columnKey)", "testcase": false, "constructor": false}, {"identifier": "getRowIndex", "parameters": "(Comparable rowKey)", "modifiers": "public", "return": "int", "signature": "int getRowIndex(Comparable rowKey)", "full_signature": "public int getRowIndex(Comparable rowKey)", "class_method_signature": "TaskSeriesCollection.getRowIndex(Comparable rowKey)", "testcase": false, "constructor": false}, {"identifier": "getRowKey", "parameters": "(int index)", "modifiers": "public", "return": "Comparable", "signature": "Comparable getRowKey(int index)", "full_signature": "public Comparable getRowKey(int index)", "class_method_signature": "TaskSeriesCollection.getRowKey(int index)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(TaskSeries series)", "modifiers": "public", "return": "void", "signature": "void add(TaskSeries series)", "full_signature": "public void add(TaskSeries series)", "class_method_signature": "TaskSeriesCollection.add(TaskSeries series)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(TaskSeries series)", "modifiers": "public", "return": "void", "signature": "void remove(TaskSeries series)", "full_signature": "public void remove(TaskSeries series)", "class_method_signature": "TaskSeriesCollection.remove(TaskSeries series)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(int series)", "modifiers": "public", "return": "void", "signature": "void remove(int series)", "full_signature": "public void remove(int series)", "class_method_signature": "TaskSeriesCollection.remove(int series)", "testcase": false, "constructor": false}, {"identifier": "removeAll", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void removeAll()", "full_signature": "public void removeAll()", "class_method_signature": "TaskSeriesCollection.removeAll()", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(Comparable rowKey, Comparable columnKey)", "modifiers": "public", "return": "Number", "signature": "Number getValue(Comparable rowKey, Comparable columnKey)", "full_signature": "public Number getValue(Comparable rowKey, Comparable columnKey)", "class_method_signature": "TaskSeriesCollection.getValue(Comparable rowKey, Comparable columnKey)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(int row, int column)", "modifiers": "public", "return": "Number", "signature": "Number getValue(int row, int column)", "full_signature": "public Number getValue(int row, int column)", "class_method_signature": "TaskSeriesCollection.getValue(int row, int column)", "testcase": false, "constructor": false}, {"identifier": "getStartValue", "parameters": "(Comparable rowKey, Comparable columnKey)", "modifiers": "public", "return": "Number", "signature": "Number getStartValue(Comparable rowKey, Comparable columnKey)", "full_signature": "public Number getStartValue(Comparable rowKey, Comparable columnKey)", "class_method_signature": "TaskSeriesCollection.getStartValue(Comparable rowKey, Comparable columnKey)", "testcase": false, "constructor": false}, {"identifier": "getStartValue", "parameters": "(int row, int column)", "modifiers": "public", "return": "Number", "signature": "Number getStartValue(int row, int column)", "full_signature": "public Number getStartValue(int row, int column)", "class_method_signature": "TaskSeriesCollection.getStartValue(int row, int column)", "testcase": false, "constructor": false}, {"identifier": "getEndValue", "parameters": "(Comparable rowKey, Comparable columnKey)", "modifiers": "public", "return": "Number", "signature": "Number getEndValue(Comparable rowKey, Comparable columnKey)", "full_signature": "public Number getEndValue(Comparable rowKey, Comparable columnKey)", "class_method_signature": "TaskSeriesCollection.getEndValue(Comparable rowKey, Comparable columnKey)", "testcase": false, "constructor": false}, {"identifier": "getEndValue", "parameters": "(int row, int column)", "modifiers": "public", "return": "Number", "signature": "Number getEndValue(int row, int column)", "full_signature": "public Number getEndValue(int row, int column)", "class_method_signature": "TaskSeriesCollection.getEndValue(int row, int column)", "testcase": false, "constructor": false}, {"identifier": "getPercentComplete", "parameters": "(int row, int column)", "modifiers": "public", "return": "Number", "signature": "Number getPercentComplete(int row, int column)", "full_signature": "public Number getPercentComplete(int row, int column)", "class_method_signature": "TaskSeriesCollection.getPercentComplete(int row, int column)", "testcase": false, "constructor": false}, {"identifier": "getPercentComplete", "parameters": "(Comparable rowKey, Comparable columnKey)", "modifiers": "public", "return": "Number", "signature": "Number getPercentComplete(Comparable rowKey, Comparable columnKey)", "full_signature": "public Number getPercentComplete(Comparable rowKey, Comparable columnKey)", "class_method_signature": "TaskSeriesCollection.getPercentComplete(Comparable rowKey, Comparable columnKey)", "testcase": false, "constructor": false}, {"identifier": "getSubIntervalCount", "parameters": "(int row, int column)", "modifiers": "public", "return": "int", "signature": "int getSubIntervalCount(int row, int column)", "full_signature": "public int getSubIntervalCount(int row, int column)", "class_method_signature": "TaskSeriesCollection.getSubIntervalCount(int row, int column)", "testcase": false, "constructor": false}, {"identifier": "getSubIntervalCount", "parameters": "(Comparable rowKey, Comparable columnKey)", "modifiers": "public", "return": "int", "signature": "int getSubIntervalCount(Comparable rowKey, Comparable columnKey)", "full_signature": "public int getSubIntervalCount(Comparable rowKey, Comparable columnKey)", "class_method_signature": "TaskSeriesCollection.getSubIntervalCount(Comparable rowKey, Comparable columnKey)", "testcase": false, "constructor": false}, {"identifier": "getStartValue", "parameters": "(int row, int column, int subinterval)", "modifiers": "public", "return": "Number", "signature": "Number getStartValue(int row, int column, int subinterval)", "full_signature": "public Number getStartValue(int row, int column, int subinterval)", "class_method_signature": "TaskSeriesCollection.getStartValue(int row, int column, int subinterval)", "testcase": false, "constructor": false}, {"identifier": "getStartValue", "parameters": "(Comparable rowKey, Comparable columnKey,\n                                int subinterval)", "modifiers": "public", "return": "Number", "signature": "Number getStartValue(Comparable rowKey, Comparable columnKey,\n                                int subinterval)", "full_signature": "public Number getStartValue(Comparable rowKey, Comparable columnKey,\n                                int subinterval)", "class_method_signature": "TaskSeriesCollection.getStartValue(Comparable rowKey, Comparable columnKey,\n                                int subinterval)", "testcase": false, "constructor": false}, {"identifier": "getEndValue", "parameters": "(int row, int column, int subinterval)", "modifiers": "public", "return": "Number", "signature": "Number getEndValue(int row, int column, int subinterval)", "full_signature": "public Number getEndValue(int row, int column, int subinterval)", "class_method_signature": "TaskSeriesCollection.getEndValue(int row, int column, int subinterval)", "testcase": false, "constructor": false}, {"identifier": "getEndValue", "parameters": "(Comparable rowKey, Comparable columnKey,\n                              int subinterval)", "modifiers": "public", "return": "Number", "signature": "Number getEndValue(Comparable rowKey, Comparable columnKey,\n                              int subinterval)", "full_signature": "public Number getEndValue(Comparable rowKey, Comparable columnKey,\n                              int subinterval)", "class_method_signature": "TaskSeriesCollection.getEndValue(Comparable rowKey, Comparable columnKey,\n                              int subinterval)", "testcase": false, "constructor": false}, {"identifier": "getPercentComplete", "parameters": "(int row, int column, int subinterval)", "modifiers": "public", "return": "Number", "signature": "Number getPercentComplete(int row, int column, int subinterval)", "full_signature": "public Number getPercentComplete(int row, int column, int subinterval)", "class_method_signature": "TaskSeriesCollection.getPercentComplete(int row, int column, int subinterval)", "testcase": false, "constructor": false}, {"identifier": "getPercentComplete", "parameters": "(Comparable rowKey, Comparable columnKey,\n                                     int subinterval)", "modifiers": "public", "return": "Number", "signature": "Number getPercentComplete(Comparable rowKey, Comparable columnKey,\n                                     int subinterval)", "full_signature": "public Number getPercentComplete(Comparable rowKey, Comparable columnKey,\n                                     int subinterval)", "class_method_signature": "TaskSeriesCollection.getPercentComplete(Comparable rowKey, Comparable columnKey,\n                                     int subinterval)", "testcase": false, "constructor": false}, {"identifier": "seriesChanged", "parameters": "(SeriesChangeEvent event)", "modifiers": "public", "return": "void", "signature": "void seriesChanged(SeriesChangeEvent event)", "full_signature": "public void seriesChanged(SeriesChangeEvent event)", "class_method_signature": "TaskSeriesCollection.seriesChanged(SeriesChangeEvent event)", "testcase": false, "constructor": false}, {"identifier": "refreshKeys", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void refreshKeys()", "full_signature": "private void refreshKeys()", "class_method_signature": "TaskSeriesCollection.refreshKeys()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "TaskSeriesCollection.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object clone()", "full_signature": "public Object clone()", "class_method_signature": "TaskSeriesCollection.clone()", "testcase": false, "constructor": false}], "file": "source/org/jfree/data/gantt/TaskSeriesCollection.java"}, "focal_method": {"identifier": "getValue", "parameters": "(Comparable rowKey, Comparable columnKey)", "modifiers": "public", "return": "Number", "body": "public Number getValue(Comparable rowKey, Comparable columnKey) {\n        return getStartValue(rowKey, columnKey);\n    }", "signature": "Number getValue(Comparable rowKey, Comparable columnKey)", "full_signature": "public Number getValue(Comparable rowKey, Comparable columnKey)", "class_method_signature": "TaskSeriesCollection.getValue(Comparable rowKey, Comparable columnKey)", "testcase": false, "constructor": false, "invocations": ["getStartValue"]}, "repository": {"repo_id": "Chart_1_buggy"}}